

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Jan 02 17:04:07 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1,inline
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1,inline
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1,inline
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1,inline
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1,inline
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1,inline
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1,inline
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1,inline
    84                           	psect	text70,global,reloc=2,class=CODE,delta=1
    85                           	psect	text71,global,reloc=2,class=CODE,delta=1
    86                           	psect	text72,global,reloc=2,class=CODE,delta=1
    87                           	psect	text73,global,reloc=2,class=CODE,delta=1
    88                           	psect	text74,global,reloc=2,class=CODE,delta=1
    89                           	psect	text75,global,reloc=2,class=CODE,delta=1
    90                           	psect	text76,global,reloc=2,class=CODE,delta=1
    91                           	psect	text77,global,reloc=2,class=CODE,delta=1
    92                           	psect	text78,global,reloc=2,class=CODE,delta=1
    93                           	psect	text79,global,reloc=2,class=CODE,delta=1
    94                           	psect	text80,global,reloc=2,class=CODE,delta=1
    95                           	psect	text81,global,reloc=2,class=CODE,delta=1
    96                           	psect	text82,global,reloc=2,class=CODE,delta=1
    97                           	psect	text83,global,reloc=2,class=CODE,delta=1
    98                           	psect	text84,global,reloc=2,class=CODE,delta=1
    99                           	psect	text85,global,reloc=2,class=CODE,delta=1
   100                           	psect	text86,global,reloc=2,class=CODE,delta=1,inline
   101                           	psect	text87,global,reloc=2,class=CODE,delta=1,inline
   102                           	psect	text88,global,reloc=2,class=CODE,delta=1,inline
   103                           	psect	text89,global,reloc=2,class=CODE,delta=1,inline
   104                           	psect	text90,global,reloc=2,class=CODE,delta=1,inline
   105                           	psect	text91,global,reloc=2,class=CODE,delta=1,inline
   106                           	psect	text92,global,reloc=2,class=CODE,delta=1,inline
   107                           	psect	text93,global,reloc=2,class=CODE,delta=1
   108                           	psect	text94,global,reloc=2,class=CODE,delta=1
   109                           	psect	text95,global,reloc=2,class=CODE,delta=1
   110                           	psect	text96,global,reloc=2,class=CODE,delta=1
   111                           	psect	text97,global,reloc=2,class=CODE,delta=1
   112                           	psect	text98,global,reloc=2,class=CODE,delta=1
   113                           	psect	text99,global,reloc=2,class=CODE,delta=1
   114                           	psect	text100,global,reloc=2,class=CODE,delta=1
   115                           	psect	text101,global,reloc=2,class=CODE,delta=1
   116                           	psect	text102,global,reloc=2,class=CODE,delta=1
   117                           	psect	text103,global,reloc=2,class=CODE,delta=1,inline
   118                           	psect	text104,global,reloc=2,class=CODE,delta=1,inline
   119                           	psect	text105,global,reloc=2,class=CODE,delta=1
   120                           	psect	text106,global,reloc=2,class=CODE,delta=1
   121                           	psect	text107,global,reloc=2,class=CODE,delta=1
   122                           	psect	text108,global,reloc=2,class=CODE,delta=1
   123                           	psect	text109,global,reloc=2,class=CODE,delta=1
   124                           	psect	text110,global,reloc=2,class=CODE,delta=1
   125                           	psect	text111,global,reloc=2,class=CODE,delta=1
   126                           	psect	text112,global,reloc=2,class=CODE,delta=1
   127                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   128                           	psect	text113,global,reloc=2,class=CODE,delta=1
   129                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   130                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   131                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   132   000000                     
   133                           ; Generated 12/10/2023 GMT
   134                           ; 
   135                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   136                           ; All rights reserved.
   137                           ; 
   138                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   139                           ; 
   140                           ; Redistribution and use in source and binary forms, with or without modification, are
   141                           ; permitted provided that the following conditions are met:
   142                           ; 
   143                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   144                           ;        conditions and the following disclaimer.
   145                           ; 
   146                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   147                           ;        of conditions and the following disclaimer in the documentation and/or other
   148                           ;        materials provided with the distribution. Publication is not required when
   149                           ;        this file is used in an embedded application.
   150                           ; 
   151                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   152                           ;        software without specific prior written permission.
   153                           ; 
   154                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   155                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   156                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   157                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   158                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   159                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   160                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   161                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   162                           ; 
   163                           ; 
   164                           ; Code-generator required, PIC18F46K20 Definitions
   165                           ; 
   166                           ; SFR Addresses
   167   000000                     
   168                           	psect	smallconst
   169   001000                     __psmallconst:
   170                           	callstack 0
   171   001000  00                 	db	0
   172   001001                     _i2c_fsmStateTable:
   173                           	callstack 0
   174   001001  8C                 	db	low _I2C_DO_IDLE
   175   001002  33                 	db	high _I2C_DO_IDLE
   176   001003  64                 	db	low _I2C_DO_SEND_ADR_READ
   177   001004  33                 	db	high _I2C_DO_SEND_ADR_READ
   178   001005  54                 	db	low _I2C_DO_SEND_ADR_WRITE
   179   001006  33                 	db	high _I2C_DO_SEND_ADR_WRITE
   180   001007  68                 	db	low _I2C_DO_TX
   181   001008  20                 	db	high _I2C_DO_TX
   182   001009  E8                 	db	low _I2C_DO_RX
   183   00100A  23                 	db	high _I2C_DO_RX
   184   00100B  80                 	db	low _I2C_DO_RCEN
   185   00100C  33                 	db	high _I2C_DO_RCEN
   186   00100D  0C                 	db	low _I2C_DO_TX_EMPTY
   187   00100E  28                 	db	high _I2C_DO_TX_EMPTY
   188   00100F  20                 	db	low _I2C_DO_SEND_RESTART_READ
   189   001010  34                 	db	high _I2C_DO_SEND_RESTART_READ
   190   001011  18                 	db	low _I2C_DO_SEND_RESTART_WRITE
   191   001012  34                 	db	high _I2C_DO_SEND_RESTART_WRITE
   192   001013  10                 	db	low _I2C_DO_SEND_RESTART
   193   001014  34                 	db	high _I2C_DO_SEND_RESTART
   194   001015  08                 	db	low _I2C_DO_SEND_STOP
   195   001016  34                 	db	high _I2C_DO_SEND_STOP
   196   001017  00                 	db	low _I2C_DO_RX_ACK
   197   001018  34                 	db	high _I2C_DO_RX_ACK
   198   001019  F8                 	db	low _I2C_DO_RX_NACK_STOP
   199   00101A  33                 	db	high _I2C_DO_RX_NACK_STOP
   200   00101B  F0                 	db	low _I2C_DO_RX_NACK_RESTART
   201   00101C  33                 	db	high _I2C_DO_RX_NACK_RESTART
   202   00101D  74                 	db	low _I2C_DO_RESET
   203   00101E  33                 	db	high _I2C_DO_RESET
   204   00101F  90                 	db	low _I2C_DO_ADDRESS_NACK
   205   001020  2B                 	db	high _I2C_DO_ADDRESS_NACK
   206   001021                     __end_of_i2c_fsmStateTable:
   207                           	callstack 0
   208   000000                     _RCREG	set	4014
   209   000000                     _TXREG	set	4013
   210   000000                     _SPBRG	set	4015
   211   000000                     _TXSTA	set	4012
   212   000000                     _ADCON0	set	4034
   213   000000                     _ADRESH	set	4036
   214   000000                     _ADRESL	set	4035
   215   000000                     _TRISD	set	3989
   216   000000                     _TRISC	set	3988
   217   000000                     _TRISB	set	3987
   218   000000                     _LATC	set	3979
   219   000000                     _LATB	set	3978
   220   001021                     STR_9:
   221   001021  2D                 	db	45
   222   001022  2D                 	db	45
   223   001023  2D                 	db	45
   224   001024  2D                 	db	45
   225   001025  2D                 	db	45
   226   001026  2D                 	db	45
   227   001027  2D                 	db	45
   228   001028  2D                 	db	45
   229   001029  2D                 	db	45
   230   00102A  2D                 	db	45
   231   00102B  2D                 	db	45
   232   00102C  2D                 	db	45
   233   00102D  2D                 	db	45
   234   00102E  2D                 	db	45
   235   00102F  2D                 	db	45
   236   001030  2D                 	db	45
   237   001031  0D                 	db	13
   238   001032  00                 	db	0
   239   001033                     STR_5:
   240   001033  4C                 	db	76	;'L'
   241   001034  6F                 	db	111	;'o'
   242   001035  61                 	db	97	;'a'
   243   001036  64                 	db	100	;'d'
   244   001037  69                 	db	105	;'i'
   245   001038  6E                 	db	110	;'n'
   246   001039  67                 	db	103	;'g'
   247   00103A  20                 	db	32
   248   00103B  44                 	db	68	;'D'
   249   00103C  65                 	db	101	;'e'
   250   00103D  76                 	db	118	;'v'
   251   00103E  69                 	db	105	;'i'
   252   00103F  63                 	db	99	;'c'
   253   001040  65                 	db	101	;'e'
   254   001041  00                 	db	0
   255   001042                     STR_7:
   256   001042  42                 	db	66	;'B'
   257   001043  72                 	db	114	;'r'
   258   001044  69                 	db	105	;'i'
   259   001045  67                 	db	103	;'g'
   260   001046  68                 	db	104	;'h'
   261   001047  74                 	db	116	;'t'
   262   001048  20                 	db	32
   263   001049  3D                 	db	61	;'='
   264   00104A  20                 	db	32
   265   00104B  00                 	db	0
   266   00104C                     STR_3:
   267   00104C  42                 	db	66	;'B'
   268   00104D  72                 	db	114	;'r'
   269   00104E  69                 	db	105	;'i'
   270   00104F  67                 	db	103	;'g'
   271   001050  68                 	db	104	;'h'
   272   001051  74                 	db	116	;'t'
   273   001052  20                 	db	32
   274   001053  3A                 	db	58	;':'
   275   001054  20                 	db	32
   276   001055  00                 	db	0
   277   001056                     STR_8:
   278   001056  4D                 	db	77	;'M'
   279   001057  6F                 	db	111	;'o'
   280   001058  69                 	db	105	;'i'
   281   001059  73                 	db	115	;'s'
   282   00105A  74                 	db	116	;'t'
   283   00105B  20                 	db	32
   284   00105C  3D                 	db	61	;'='
   285   00105D  20                 	db	32
   286   00105E  00                 	db	0
   287   00105F                     STR_2:
   288   00105F  4D                 	db	77	;'M'
   289   001060  6F                 	db	111	;'o'
   290   001061  69                 	db	105	;'i'
   291   001062  73                 	db	115	;'s'
   292   001063  74                 	db	116	;'t'
   293   001064  20                 	db	32
   294   001065  3A                 	db	58	;':'
   295   001066  20                 	db	32
   296   001067  00                 	db	0
   297   001068                     STR_6:
   298   001068  54                 	db	84	;'T'
   299   001069  65                 	db	101	;'e'
   300   00106A  6D                 	db	109	;'m'
   301   00106B  70                 	db	112	;'p'
   302   00106C  20                 	db	32
   303   00106D  3D                 	db	61	;'='
   304   00106E  20                 	db	32
   305   00106F  00                 	db	0
   306   001070                     STR_4:
   307   001070  54                 	db	84	;'T'
   308   001071  65                 	db	101	;'e'
   309   001072  6D                 	db	109	;'m'
   310   001073  70                 	db	112	;'p'
   311   001074  20                 	db	32
   312   001075  3A                 	db	58	;':'
   313   001076  20                 	db	32
   314   001077  00                 	db	0
   315   001078                     STR_1:
   316   001078  25                 	db	37
   317   001079  69                 	db	105	;'i'
   318   00107A  00                 	db	0
   319   00107B  00                 	db	0	; dummy byte at the end
   320   000000                     
   321                           	psect	nvCOMRAM
   322   000040                     __pnvCOMRAM:
   323                           	callstack 0
   324   000040                     _ADC_InterruptHandler:
   325                           	callstack 0
   326   000040                     	ds	2
   327   000042                     _EUSART_TxDefaultInterruptHandler:
   328                           	callstack 0
   329   000042                     	ds	2
   330                           
   331                           	psect	nvBANK0
   332   0000F8                     __pnvBANK0:
   333                           	callstack 0
   334   0000F8                     _EUSART_ErrorHandler:
   335                           	callstack 0
   336   0000F8                     	ds	2
   337   0000FA                     _EUSART_OverrunErrorHandler:
   338                           	callstack 0
   339   0000FA                     	ds	2
   340   0000FC                     _EUSART_FramingErrorHandler:
   341                           	callstack 0
   342   0000FC                     	ds	2
   343   0000FE                     _EUSART_RxDefaultInterruptHandler:
   344                           	callstack 0
   345   0000FE                     	ds	2
   346   000000                     _LATCbits	set	3979
   347   000000                     _RCSTAbits	set	4011
   348   000000                     _TXSTAbits	set	4012
   349   000000                     _ADCON0bits	set	4034
   350   000000                     _LATD	set	3980
   351   000000                     _SSPSTATbits	set	4039
   352   000000                     _SSPCON2bits	set	4037
   353   000000                     _SSPCON1bits	set	4038
   354   000000                     _WPUB	set	3964
   355   000000                     _ANSEL	set	3966
   356   000000                     _LATA	set	3977
   357   000000                     _LATDbits	set	3980
   358   000000                     _TRISA	set	3986
   359   000000                     _TRISE	set	3990
   360   000000                     _LATE	set	3981
   361   000000                     _OSCTUNE	set	3995
   362   000000                     _PIE1bits	set	3997
   363   000000                     _RCONbits	set	4048
   364   000000                     _OSCCON	set	4051
   365   000000                     _INTCONbits	set	4082
   366   000000                     _PIE2bits	set	4000
   367   000000                     _PIR1bits	set	3998
   368   000000                     _RCSTA	set	4011
   369   000000                     _BAUDCON	set	4024
   370   000000                     _ADCON2	set	4032
   371   000000                     _ADCON1	set	4033
   372   000000                     _SSPCON2	set	4037
   373   000000                     _SSPCON1	set	4038
   374   000000                     _SSPSTAT	set	4039
   375   000000                     _PIR2bits	set	4001
   376   000000                     _INTCON2bits	set	4081
   377   000000                     _SSPBUF	set	4041
   378   000000                     _SSPADD	set	4040
   379   000000                     _ANSELH	set	3967
   380   000000                     _SPBRGH	set	4016
   381                           
   382                           ; #config settings
   383                           
   384                           	psect	cinit
   385   0031F2                     __pcinit:
   386                           	callstack 0
   387   0031F2                     start_initialization:
   388                           	callstack 0
   389   0031F2                     __initialization:
   390                           	callstack 0
   391                           
   392                           ; Clear objects allocated to BANK0 (119 bytes)
   393   0031F2  EE00  F060         	lfsr	0,__pbssBANK0
   394   0031F6  0E77               	movlw	119
   395   0031F8                     clear_0:
   396   0031F8  6AEE               	clrf	postinc0,c
   397   0031FA  06E8               	decf	wreg,f,c
   398   0031FC  E1FD               	bnz	clear_0
   399                           
   400                           ; Clear objects allocated to COMRAM (24 bytes)
   401   0031FE  EE00  F028         	lfsr	0,__pbssCOMRAM
   402   003202  0E18               	movlw	24
   403   003204                     clear_1:
   404   003204  6AEE               	clrf	postinc0,c
   405   003206  06E8               	decf	wreg,f,c
   406   003208  E1FD               	bnz	clear_1
   407   00320A                     end_of_initialization:
   408                           	callstack 0
   409   00320A                     __end_of__initialization:
   410                           	callstack 0
   411   00320A  9044               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   412   00320C  9244               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   413   00320E  0100               	movlb	0
   414   003210  EF75  F00E         	goto	_main	;jump to C main() function
   415                           
   416                           	psect	bssCOMRAM
   417   000028                     __pbssCOMRAM:
   418                           	callstack 0
   419   000028                     _width:
   420                           	callstack 0
   421   000028                     	ds	2
   422   00002A                     _prec:
   423                           	callstack 0
   424   00002A                     	ds	2
   425   00002C                     _MSSP_InterruptHandler:
   426                           	callstack 0
   427   00002C                     	ds	2
   428   00002E                     _flags:
   429                           	callstack 0
   430   00002E                     	ds	1
   431   00002F                     _eusartRxLastError:
   432                           	callstack 0
   433   00002F                     	ds	1
   434   000030                     _eusartRxCount:
   435                           	callstack 0
   436   000030                     	ds	1
   437   000031                     _eusartRxTail:
   438                           	callstack 0
   439   000031                     	ds	1
   440   000032                     _eusartRxHead:
   441                           	callstack 0
   442   000032                     	ds	1
   443   000033                     _eusartTxBufferRemaining:
   444                           	callstack 0
   445   000033                     	ds	1
   446   000034                     _eusartTxTail:
   447                           	callstack 0
   448   000034                     	ds	1
   449   000035                     _eusartTxHead:
   450                           	callstack 0
   451   000035                     	ds	1
   452   000036                     _brightness_array:
   453                           	callstack 0
   454   000036                     	ds	5
   455   00003B                     _moist_array:
   456                           	callstack 0
   457   00003B                     	ds	5
   458                           
   459                           	psect	bssBANK0
   460   000060                     __pbssBANK0:
   461                           	callstack 0
   462   000060                     _I2C_Status:
   463                           	callstack 0
   464   000060                     	ds	36
   465   000084                     _dbuf:
   466                           	callstack 0
   467   000084                     	ds	32
   468   0000A4                     _eusartRxStatusBuffer:
   469                           	callstack 0
   470   0000A4                     	ds	8
   471   0000AC                     _eusartRxBuffer:
   472                           	callstack 0
   473   0000AC                     	ds	8
   474   0000B4                     _eusartTxBuffer:
   475                           	callstack 0
   476   0000B4                     	ds	8
   477   0000BC                     	ds	4
   478   0000C0                     _moist:
   479                           	callstack 0
   480   0000C0                     	ds	2
   481   0000C2                     _bright:
   482                           	callstack 0
   483   0000C2                     	ds	2
   484   0000C4                     _temperature:
   485                           	callstack 0
   486   0000C4                     	ds	1
   487   0000C5                     _temp_array:
   488                           	callstack 0
   489   0000C5                     	ds	6
   490   0000CB                     _value_array@TC74$F213:
   491                           	callstack 0
   492   0000CB                     	ds	4
   493   0000CF                     _value_array@LDR$F189:
   494                           	callstack 0
   495   0000CF                     	ds	4
   496   0000D3                     _value_array:
   497                           	callstack 0
   498   0000D3                     	ds	4
   499                           
   500                           	psect	cstackBANK1
   501   000100                     __pcstackBANK1:
   502                           	callstack 0
   503   000100                     ?___flsub:
   504                           	callstack 0
   505   000100                     convert_uint8_to_string@value:
   506                           	callstack 0
   507   000100                     ___flsub@b:
   508                           	callstack 0
   509                           
   510                           ; 4 bytes @ 0x0
   511   000100                     	ds	1
   512   000101                     convert_uint8_to_string@TempStr:
   513                           	callstack 0
   514                           
   515                           ; 4 bytes @ 0x1
   516   000101                     	ds	3
   517   000104                     ___flsub@a:
   518                           	callstack 0
   519                           
   520                           ; 4 bytes @ 0x4
   521   000104                     	ds	1
   522   000105                     convert_uint8_to_string@data:
   523                           	callstack 0
   524                           
   525                           ; 1 bytes @ 0x5
   526   000105                     	ds	1
   527   000106                     print_HS1101_LCD@row:
   528                           	callstack 0
   529   000106                     print_bright_LCD@row:
   530                           	callstack 0
   531   000106                     print_temp_LCD@row:
   532                           	callstack 0
   533                           
   534                           ; 1 bytes @ 0x6
   535   000106                     	ds	1
   536   000107                     print_HS1101_LCD@column:
   537                           	callstack 0
   538   000107                     print_bright_LCD@column:
   539                           	callstack 0
   540   000107                     print_temp_LCD@column:
   541                           	callstack 0
   542                           
   543                           ; 1 bytes @ 0x7
   544   000107                     	ds	1
   545   000108                     ??___fltol:
   546                           
   547                           ; 1 bytes @ 0x8
   548   000108                     	ds	4
   549   00010C                     ?_read_HS1101_moist_percent:
   550                           	callstack 0
   551   00010C                     ?_LDR_reading:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0xC
   555   00010C                     	ds	2
   556   00010E                     ??_LDR_reading:
   557   00010E                     read_HS1101_moist_percent@AN_channel:
   558                           	callstack 0
   559                           
   560                           ; 1 bytes @ 0xE
   561   00010E                     	ds	1
   562   00010F                     read_HS1101_moist_percent@moist:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0xF
   566   00010F                     	ds	1
   567   000110                     LDR_reading@AN_channel:
   568                           	callstack 0
   569                           
   570                           ; 1 bytes @ 0x10
   571   000110                     	ds	1
   572   000111                     LDR_reading@bright:
   573                           	callstack 0
   574                           
   575                           ; 2 bytes @ 0x11
   576   000111                     	ds	2
   577   000113                     ??_main:
   578                           
   579                           ; 1 bytes @ 0x13
   580   000113                     	ds	2
   581                           
   582                           	psect	cstackBANK0
   583   0000D7                     __pcstackBANK0:
   584                           	callstack 0
   585   0000D7                     Read_TC74@address:
   586                           	callstack 0
   587   0000D7                     ___fladd@signs:
   588                           	callstack 0
   589   0000D7                     ___xxtofl@sign:
   590                           	callstack 0
   591   0000D7                     vfpfcnvrt@fp:
   592                           	callstack 0
   593                           
   594                           ; 1 bytes @ 0x0
   595   0000D7                     	ds	1
   596   0000D8                     Read_TC74@value:
   597                           	callstack 0
   598   0000D8                     ___fladd@aexp:
   599                           	callstack 0
   600   0000D8                     ___xxtofl@exp:
   601                           	callstack 0
   602   0000D8                     vfpfcnvrt@fmt:
   603                           	callstack 0
   604                           
   605                           ; 1 bytes @ 0x1
   606   0000D8                     	ds	1
   607   0000D9                     ___fladd@bexp:
   608                           	callstack 0
   609   0000D9                     vfpfcnvrt@ap:
   610                           	callstack 0
   611   0000D9                     ___xxtofl@arg:
   612                           	callstack 0
   613                           
   614                           ; 4 bytes @ 0x2
   615   0000D9                     	ds	1
   616   0000DA                     ___fladd@grs:
   617                           	callstack 0
   618   0000DA                     vfpfcnvrt@done:
   619                           	callstack 0
   620                           
   621                           ; 1 bytes @ 0x3
   622   0000DA                     	ds	1
   623   0000DB                     vfpfcnvrt@cp:
   624                           	callstack 0
   625                           
   626                           ; 1 bytes @ 0x4
   627   0000DB                     	ds	1
   628   0000DC                     vfpfcnvrt@convarg:
   629                           	callstack 0
   630                           
   631                           ; 4 bytes @ 0x5
   632   0000DC                     	ds	1
   633   0000DD                     ?___flmul:
   634                           	callstack 0
   635   0000DD                     ___flmul@b:
   636                           	callstack 0
   637                           
   638                           ; 4 bytes @ 0x6
   639   0000DD                     	ds	3
   640   0000E0                     vfpfcnvrt@c:
   641                           	callstack 0
   642                           
   643                           ; 1 bytes @ 0x9
   644   0000E0                     	ds	1
   645   0000E1                     ?_vfprintf:
   646                           	callstack 0
   647   0000E1                     vfprintf@fp:
   648                           	callstack 0
   649   0000E1                     ___flmul@a:
   650                           	callstack 0
   651                           
   652                           ; 4 bytes @ 0xA
   653   0000E1                     	ds	1
   654   0000E2                     vfprintf@fmt:
   655                           	callstack 0
   656                           
   657                           ; 1 bytes @ 0xB
   658   0000E2                     	ds	1
   659   0000E3                     vfprintf@ap:
   660                           	callstack 0
   661                           
   662                           ; 1 bytes @ 0xC
   663   0000E3                     	ds	1
   664   0000E4                     ?_sprintf:
   665                           	callstack 0
   666   0000E4                     sprintf@s:
   667                           	callstack 0
   668                           
   669                           ; 2 bytes @ 0xD
   670   0000E4                     	ds	1
   671   0000E5                     ___flmul@sign:
   672                           	callstack 0
   673                           
   674                           ; 1 bytes @ 0xE
   675   0000E5                     	ds	1
   676   0000E6                     ___flmul@aexp:
   677                           	callstack 0
   678   0000E6                     sprintf@fmt:
   679                           	callstack 0
   680                           
   681                           ; 1 bytes @ 0xF
   682   0000E6                     	ds	1
   683   0000E7                     ___flmul@grs:
   684                           	callstack 0
   685                           
   686                           ; 4 bytes @ 0x10
   687   0000E7                     	ds	2
   688   0000E9                     sprintf@ap:
   689                           	callstack 0
   690                           
   691                           ; 1 bytes @ 0x12
   692   0000E9                     	ds	1
   693   0000EA                     sprintf@f:
   694                           	callstack 0
   695                           
   696                           ; 12 bytes @ 0x13
   697   0000EA                     	ds	1
   698   0000EB                     ___flmul@bexp:
   699                           	callstack 0
   700                           
   701                           ; 1 bytes @ 0x14
   702   0000EB                     	ds	1
   703   0000EC                     ___flmul@prod:
   704                           	callstack 0
   705                           
   706                           ; 4 bytes @ 0x15
   707   0000EC                     	ds	4
   708   0000F0                     ___flmul@temp:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0x19
   712   0000F0                     	ds	2
   713   0000F2                     ?___fltol:
   714                           	callstack 0
   715   0000F2                     ___fltol@f1:
   716                           	callstack 0
   717                           
   718                           ; 4 bytes @ 0x1B
   719   0000F2                     	ds	4
   720   0000F6                     convert_uint8_to_string@str:
   721                           	callstack 0
   722   0000F6                     ___fltol@sign1:
   723                           	callstack 0
   724                           
   725                           ; 1 bytes @ 0x1F
   726   0000F6                     	ds	1
   727   0000F7                     print_HS1101_LCD@value:
   728                           	callstack 0
   729   0000F7                     print_bright_LCD@value:
   730                           	callstack 0
   731   0000F7                     print_temp_LCD@value:
   732                           	callstack 0
   733   0000F7                     ___fltol@exp1:
   734                           	callstack 0
   735                           
   736                           ; 1 bytes @ 0x20
   737   0000F7                     	ds	1
   738                           
   739                           	psect	cstackCOMRAM
   740   000001                     __pcstackCOMRAM:
   741                           	callstack 0
   742   000001                     I2C_MasterSendTxData@data:
   743                           	callstack 0
   744   000001                     i2I2C_SetBuffer@buffer:
   745                           	callstack 0
   746   000001                     i2I2C_SetCallback@cb:
   747                           	callstack 0
   748                           
   749                           ; 2 bytes @ 0x0
   750   000001                     	ds	1
   751   000002                     
   752                           ; 1 bytes @ 0x1
   753   000002                     	ds	1
   754   000003                     i2I2C_SetBuffer@bufferSize:
   755                           	callstack 0
   756   000003                     i2I2C_SetCallback@ptr:
   757                           	callstack 0
   758                           
   759                           ; 2 bytes @ 0x2
   760   000003                     	ds	2
   761   000005                     i2I2C_SetCallback@idx:
   762                           	callstack 0
   763                           
   764                           ; 1 bytes @ 0x4
   765   000005                     	ds	1
   766   000006                     i2I2C_SetDataCompleteCallback@cb:
   767                           	callstack 0
   768                           
   769                           ; 2 bytes @ 0x5
   770   000006                     	ds	2
   771   000008                     i2I2C_SetDataCompleteCallback@ptr:
   772                           	callstack 0
   773                           
   774                           ; 2 bytes @ 0x7
   775   000008                     	ds	2
   776   00000A                     rd1RegCompleteHandler@ptr:
   777                           	callstack 0
   778   00000A                     rd2RegCompleteHandler@ptr:
   779                           	callstack 0
   780   00000A                     wr1RegCompleteHandler@ptr:
   781                           	callstack 0
   782   00000A                     wr2RegCompleteHandler@ptr:
   783                           	callstack 0
   784   00000A                     rdBlkRegCompleteHandler@ptr:
   785                           	callstack 0
   786   00000A                     I2C_CallbackReturnReset@funPtr:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0x9
   790   00000A                     	ds	2
   791   00000C                     ??_rdBlkRegCompleteHandler:
   792   00000C                     
   793                           ; 1 bytes @ 0xB
   794   00000C                     	ds	1
   795   00000D                     ??_I2C_DO_TX:
   796   00000D                     ??_I2C_DO_RX:
   797   00000D                     ??_I2C_DO_TX_EMPTY:
   798   00000D                     ??_I2C_DO_ADDRESS_NACK:
   799                           
   800                           ; 1 bytes @ 0xC
   801   00000D                     	ds	2
   802   00000F                     ??_I2C_MasterFsm:
   803                           
   804                           ; 1 bytes @ 0xE
   805   00000F                     	ds	3
   806   000012                     ??_INTERRUPT_InterruptManager:
   807                           
   808                           ; 1 bytes @ 0x11
   809   000012                     	ds	10
   810   00001C                     ??_lcd_send_4bits:
   811   00001C                     ??_lcd_4bits_send_enable:
   812   00001C                     ?_ADC_GetConversion:
   813                           	callstack 0
   814   00001C                     ?___awdiv:
   815                           	callstack 0
   816   00001C                     ?___awmod:
   817                           	callstack 0
   818   00001C                     ?___fladd:
   819                           	callstack 0
   820   00001C                     ?___xxtofl:
   821                           	callstack 0
   822   00001C                     I2C_Close@returnValue:
   823                           	callstack 0
   824   00001C                     I2C_MasterOperation@read:
   825                           	callstack 0
   826   00001C                     EUSART_Write@txData:
   827                           	callstack 0
   828   00001C                     memset@dest:
   829                           	callstack 0
   830   00001C                     I2C_SetBuffer@buffer:
   831                           	callstack 0
   832   00001C                     I2C_SetInterruptHandler@InterruptHandler:
   833                           	callstack 0
   834   00001C                     I2C_SetCallback@cb:
   835                           	callstack 0
   836   00001C                     ADC_SetInterruptHandler@InterruptHandler:
   837                           	callstack 0
   838   00001C                     EUSART_SetFramingErrorHandler@interruptHandler:
   839                           	callstack 0
   840   00001C                     EUSART_SetOverrunErrorHandler@interruptHandler:
   841                           	callstack 0
   842   00001C                     EUSART_SetErrorHandler@interruptHandler:
   843                           	callstack 0
   844   00001C                     EUSART_SetTxInterruptHandler@interruptHandler:
   845                           	callstack 0
   846   00001C                     EUSART_SetRxInterruptHandler@interruptHandler:
   847                           	callstack 0
   848   00001C                     ___awdiv@dividend:
   849                           	callstack 0
   850   00001C                     ___awmod@dividend:
   851                           	callstack 0
   852   00001C                     fputc@c:
   853                           	callstack 0
   854   00001C                     ___fladd@b:
   855                           	callstack 0
   856   00001C                     ___xxtofl@val:
   857                           	callstack 0
   858                           
   859                           ; 4 bytes @ 0x1B
   860   00001C                     	ds	1
   861   00001D                     lcd_send_4bits@data:
   862                           	callstack 0
   863   00001D                     I2C_MasterOperation@returnValue:
   864                           	callstack 0
   865   00001D                     Send_String@str:
   866                           	callstack 0
   867   00001D                     memset@c:
   868                           	callstack 0
   869                           
   870                           ; 2 bytes @ 0x1C
   871   00001D                     	ds	1
   872   00001E                     ??_ADC_GetConversion:
   873   00001E                     lcd_4bits_send_command@command:
   874                           	callstack 0
   875   00001E                     lcd_4bits_send_char_data@chr:
   876                           	callstack 0
   877   00001E                     I2C_Open@address:
   878                           	callstack 0
   879   00001E                     fputc@fp:
   880                           	callstack 0
   881   00001E                     I2C_SetBuffer@bufferSize:
   882                           	callstack 0
   883   00001E                     I2C_SetCallback@ptr:
   884                           	callstack 0
   885   00001E                     ___awdiv@divisor:
   886                           	callstack 0
   887   00001E                     ___awmod@divisor:
   888                           	callstack 0
   889                           
   890                           ; 2 bytes @ 0x1D
   891   00001E                     	ds	1
   892   00001F                     ??_fputc:
   893   00001F                     ??_lcd_4bits_initialize:
   894   00001F                     lcd_4bits_pos@column:
   895                           	callstack 0
   896   00001F                     Send_String@length:
   897                           	callstack 0
   898   00001F                     I2C_Open@returnValue:
   899                           	callstack 0
   900   00001F                     memset@n:
   901                           	callstack 0
   902                           
   903                           ; 2 bytes @ 0x1E
   904   00001F                     	ds	1
   905   000020                     ??_lcd_4bits_pos:
   906   000020                     ??___xxtofl:
   907   000020                     Send_String@l_String_Length:
   908                           	callstack 0
   909   000020                     I2C_SetCallback@idx:
   910                           	callstack 0
   911   000020                     ADC_GetConversion@channel:
   912                           	callstack 0
   913   000020                     ___awdiv@counter:
   914                           	callstack 0
   915   000020                     ___awmod@counter:
   916                           	callstack 0
   917   000020                     ___fladd@a:
   918                           	callstack 0
   919                           
   920                           ; 4 bytes @ 0x1F
   921   000020                     	ds	1
   922   000021                     ___awdiv@sign:
   923                           	callstack 0
   924   000021                     ___awmod@sign:
   925                           	callstack 0
   926   000021                     memset@p:
   927                           	callstack 0
   928   000021                     I2C_SetDataCompleteCallback@cb:
   929                           	callstack 0
   930   000021                     I2C_SetAddressNackCallback@cb:
   931                           	callstack 0
   932                           
   933                           ; 2 bytes @ 0x20
   934   000021                     	ds	1
   935   000022                     ?_abs:
   936                           	callstack 0
   937   000022                     lcd_4bits_pos@row:
   938                           	callstack 0
   939   000022                     ___awdiv@quotient:
   940                           	callstack 0
   941   000022                     abs@a:
   942                           	callstack 0
   943                           
   944                           ; 2 bytes @ 0x21
   945   000022                     	ds	1
   946   000023                     lcd_4bits_send_char_data_pos@row:
   947                           	callstack 0
   948   000023                     lcd_4bits_send_string_data_pos@str:
   949                           	callstack 0
   950   000023                     I2C_SetDataCompleteCallback@ptr:
   951                           	callstack 0
   952   000023                     I2C_SetAddressNackCallback@ptr:
   953                           	callstack 0
   954                           
   955                           ; 2 bytes @ 0x22
   956   000023                     	ds	1
   957   000024                     ??___fladd:
   958   000024                     ??___flmul:
   959   000024                     ??_abs:
   960   000024                     lcd_4bits_send_char_data_pos@col:
   961                           	callstack 0
   962   000024                     print_HS1101_uart@value:
   963                           	callstack 0
   964   000024                     print_bright_uart@value:
   965                           	callstack 0
   966   000024                     print_temp_uart@value:
   967                           	callstack 0
   968                           
   969                           ; 1 bytes @ 0x23
   970   000024                     	ds	1
   971   000025                     lcd_4bits_send_char_data_pos@chr:
   972                           	callstack 0
   973   000025                     lcd_4bits_send_string_data_pos@row:
   974                           	callstack 0
   975   000025                     I2C_Read1ByteRegister@reg:
   976                           	callstack 0
   977                           
   978                           ; 1 bytes @ 0x24
   979   000025                     	ds	1
   980   000026                     ??_vfpfcnvrt:
   981   000026                     lcd_4bits_send_string_data_pos@col:
   982                           	callstack 0
   983   000026                     I2C_Read1ByteRegister@address:
   984                           	callstack 0
   985                           
   986                           ; 1 bytes @ 0x25
   987   000026                     	ds	1
   988   000027                     I2C_Read1ByteRegister@returnValue:
   989                           	callstack 0
   990   000027                     vfprintf@cfmt:
   991                           	callstack 0
   992                           
   993                           ; 1 bytes @ 0x26
   994   000027                     	ds	1
   995   000028                     
   996                           ; 1 bytes @ 0x27
   997 ;;
   998 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   999 ;;
  1000 ;; *************** function _main *****************
  1001 ;; Defined at:
  1002 ;;		line 36 in file "main.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;		None
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;		None
  1007 ;; Return value:  Size  Location     Type
  1008 ;;                  1    wreg      void 
  1009 ;; Registers used:
  1010 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1011 ;; Tracked objects:
  1012 ;;		On entry : 0/0
  1013 ;;		On exit  : 0/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1018 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1019 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1020 ;;Total ram usage:        2 bytes
  1021 ;; Hardware stack levels required when called: 14
  1022 ;; This function calls:
  1023 ;;		_LDR_reading
  1024 ;;		_Read_TC74
  1025 ;;		_SYSTEM_Initialize
  1026 ;;		_lcd_4bits_send_command
  1027 ;;		_lcd_4bits_send_string_data_pos
  1028 ;;		_print_HS1101_LCD
  1029 ;;		_print_HS1101_uart
  1030 ;;		_print_bright_LCD
  1031 ;;		_print_bright_uart
  1032 ;;		_print_temp_LCD
  1033 ;;		_print_temp_uart
  1034 ;;		_read_HS1101_moist_percent
  1035 ;;		_uart_draw_borders
  1036 ;; This function is called by:
  1037 ;;		Startup code after reset
  1038 ;; This function uses a non-reentrant model
  1039 ;;
  1040                           
  1041                           	psect	text0
  1042   001CEA                     __ptext0:
  1043                           	callstack 0
  1044   001CEA                     _main:
  1045                           	callstack 17
  1046   001CEA                     
  1047                           ;main.c: 39:     SYSTEM_Initialize();
  1048   001CEA  EC1B  F019         	call	_SYSTEM_Initialize	;wreg free
  1049   001CEE                     
  1050                           ;main.c: 42:     (INTCONbits.GIE = 1);
  1051   001CEE  8EF2               	bsf	242,7,c	;volatile
  1052   001CF0                     
  1053                           ;main.c: 45:     (INTCONbits.PEIE = 1);
  1054   001CF0  8CF2               	bsf	242,6,c	;volatile
  1055                           
  1056                           ;main.c: 47:     lcd_4bits_send_command(0x80);
  1057   001CF2  0E80               	movlw	128
  1058   001CF4  EC38  F019         	call	_lcd_4bits_send_command
  1059   001CF8                     
  1060                           ;main.c: 48:     lcd_4bits_send_string_data_pos("Loading Device", 2, 4);
  1061   001CF8  0E33               	movlw	low STR_5
  1062   001CFA  6E23               	movwf	lcd_4bits_send_string_data_pos@str^0,c
  1063   001CFC  5023               	movf	lcd_4bits_send_string_data_pos@str^0,w,c
  1064   001CFE  A4D8               	btfss	status,2,c
  1065   001D00  0E10               	movlw	high __smallconst
  1066   001D02  6E24               	movwf	(lcd_4bits_send_string_data_pos@str+1)^0,c
  1067   001D04  0E02               	movlw	2
  1068   001D06  6E25               	movwf	lcd_4bits_send_string_data_pos@row^0,c
  1069   001D08  0E04               	movlw	4
  1070   001D0A  6E26               	movwf	lcd_4bits_send_string_data_pos@col^0,c
  1071   001D0C  EC5F  F015         	call	_lcd_4bits_send_string_data_pos	;wreg free
  1072   001D10                     
  1073                           ;main.c: 49:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1074   001D10  0E06               	movlw	6
  1075   001D12  0101               	movlb	1	; () banked
  1076   001D14  6F14               	movwf	(??_main+1)& (0+255),b
  1077   001D16  0E13               	movlw	19
  1078   001D18  6F13               	movwf	??_main& (0+255),b
  1079   001D1A  0EAD               	movlw	173
  1080   001D1C                     u5557:
  1081   001D1C  2EE8               	decfsz	wreg,f,c
  1082   001D1E  D7FE               	bra	u5557
  1083   001D20  2F13               	decfsz	??_main& (0+255),f,b
  1084   001D22  D7FC               	bra	u5557
  1085   001D24  2F14               	decfsz	(??_main+1)& (0+255),f,b
  1086   001D26  D7FA               	bra	u5557
  1087   001D28  F000 F000          	nop2	
  1088   001D2C                     
  1089                           ;main.c: 50:     lcd_4bits_send_command(0x01);
  1090   001D2C  0E01               	movlw	1
  1091   001D2E  EC38  F019         	call	_lcd_4bits_send_command
  1092   001D32                     
  1093                           ;main.c: 53:     lcd_4bits_send_string_data_pos("Temp = ", 1, 1);
  1094   001D32  0E68               	movlw	low STR_6
  1095   001D34  6E23               	movwf	lcd_4bits_send_string_data_pos@str^0,c
  1096   001D36  5023               	movf	lcd_4bits_send_string_data_pos@str^0,w,c
  1097   001D38  A4D8               	btfss	status,2,c
  1098   001D3A  0E10               	movlw	high __smallconst
  1099   001D3C  6E24               	movwf	(lcd_4bits_send_string_data_pos@str+1)^0,c
  1100   001D3E  0E01               	movlw	1
  1101   001D40  6E25               	movwf	lcd_4bits_send_string_data_pos@row^0,c
  1102   001D42  0E01               	movlw	1
  1103   001D44  6E26               	movwf	lcd_4bits_send_string_data_pos@col^0,c
  1104   001D46  EC5F  F015         	call	_lcd_4bits_send_string_data_pos	;wreg free
  1105   001D4A                     
  1106                           ;main.c: 54:     lcd_4bits_send_string_data_pos("Bright = ", 2, 1);
  1107   001D4A  0E42               	movlw	low STR_7
  1108   001D4C  6E23               	movwf	lcd_4bits_send_string_data_pos@str^0,c
  1109   001D4E  5023               	movf	lcd_4bits_send_string_data_pos@str^0,w,c
  1110   001D50  A4D8               	btfss	status,2,c
  1111   001D52  0E10               	movlw	high __smallconst
  1112   001D54  6E24               	movwf	(lcd_4bits_send_string_data_pos@str+1)^0,c
  1113   001D56  0E02               	movlw	2
  1114   001D58  6E25               	movwf	lcd_4bits_send_string_data_pos@row^0,c
  1115   001D5A  0E01               	movlw	1
  1116   001D5C  6E26               	movwf	lcd_4bits_send_string_data_pos@col^0,c
  1117   001D5E  EC5F  F015         	call	_lcd_4bits_send_string_data_pos	;wreg free
  1118   001D62                     
  1119                           ;main.c: 55:     lcd_4bits_send_string_data_pos("Moist = ", 3, 1);
  1120   001D62  0E56               	movlw	low STR_8
  1121   001D64  6E23               	movwf	lcd_4bits_send_string_data_pos@str^0,c
  1122   001D66  5023               	movf	lcd_4bits_send_string_data_pos@str^0,w,c
  1123   001D68  A4D8               	btfss	status,2,c
  1124   001D6A  0E10               	movlw	high __smallconst
  1125   001D6C  6E24               	movwf	(lcd_4bits_send_string_data_pos@str+1)^0,c
  1126   001D6E  0E03               	movlw	3
  1127   001D70  6E25               	movwf	lcd_4bits_send_string_data_pos@row^0,c
  1128   001D72  0E01               	movlw	1
  1129   001D74  6E26               	movwf	lcd_4bits_send_string_data_pos@col^0,c
  1130   001D76  EC5F  F015         	call	_lcd_4bits_send_string_data_pos	;wreg free
  1131   001D7A                     l6718:
  1132                           
  1133                           ;main.c: 58:     {;main.c: 59:         temperature = Read_TC74(0x4D);
  1134   001D7A  0E4D               	movlw	77
  1135   001D7C  EC46  F019         	call	_Read_TC74
  1136   001D80  0100               	movlb	0	; () banked
  1137   001D82  6FC4               	movwf	_temperature& (0+255),b
  1138   001D84                     
  1139                           ; BSR set to: 0
  1140                           ;main.c: 60:         bright = LDR_reading (channel_AN0);
  1141   001D84  0E00               	movlw	0
  1142   001D86  ECA0  F011         	call	_LDR_reading
  1143   001D8A  C10C  F0C2         	movff	?_LDR_reading,_bright
  1144   001D8E  C10D  F0C3         	movff	?_LDR_reading+1,_bright+1
  1145   001D92                     
  1146                           ;main.c: 61:         moist = read_HS1101_moist_percent(channel_AN1);
  1147   001D92  0E01               	movlw	1
  1148   001D94  EC96  F012         	call	_read_HS1101_moist_percent
  1149   001D98  C10C  F0C0         	movff	?_read_HS1101_moist_percent,_moist
  1150   001D9C  C10D  F0C1         	movff	?_read_HS1101_moist_percent+1,_moist+1
  1151   001DA0                     
  1152                           ;main.c: 64:         uart_draw_borders();
  1153   001DA0  EC76  F019         	call	_uart_draw_borders	;wreg free
  1154   001DA4                     
  1155                           ;main.c: 65:         print_temp_uart(temperature);
  1156   001DA4  0100               	movlb	0	; () banked
  1157   001DA6  51C4               	movf	_temperature& (0+255),w,b
  1158   001DA8  EC2F  F013         	call	_print_temp_uart
  1159   001DAC                     
  1160                           ;main.c: 66:         print_bright_uart(bright);
  1161   001DAC  0100               	movlb	0	; () banked
  1162   001DAE  51C2               	movf	_bright& (0+255),w,b
  1163   001DB0  EC7A  F013         	call	_print_bright_uart
  1164   001DB4                     
  1165                           ;main.c: 67:         print_HS1101_uart(moist);
  1166   001DB4  0100               	movlb	0	; () banked
  1167   001DB6  51C0               	movf	_moist& (0+255),w,b
  1168   001DB8  ECC0  F013         	call	_print_HS1101_uart
  1169   001DBC                     
  1170                           ;main.c: 70:         print_temp_LCD(temperature, 1, 9);
  1171   001DBC  0E01               	movlw	1
  1172   001DBE  0101               	movlb	1	; () banked
  1173   001DC0  6F06               	movwf	print_temp_LCD@row& (0+255),b
  1174   001DC2  0E09               	movlw	9
  1175   001DC4  6F07               	movwf	print_temp_LCD@column& (0+255),b
  1176   001DC6  0100               	movlb	0	; () banked
  1177   001DC8  51C4               	movf	_temperature& (0+255),w,b
  1178   001DCA  EC8F  F017         	call	_print_temp_LCD
  1179   001DCE                     
  1180                           ;main.c: 71:         print_bright_LCD(bright, 2, 11);
  1181   001DCE  0E02               	movlw	2
  1182   001DD0  0101               	movlb	1	; () banked
  1183   001DD2  6F06               	movwf	print_bright_LCD@row& (0+255),b
  1184   001DD4  0E0B               	movlw	11
  1185   001DD6  6F07               	movwf	print_bright_LCD@column& (0+255),b
  1186   001DD8  0100               	movlb	0	; () banked
  1187   001DDA  51C2               	movf	_bright& (0+255),w,b
  1188   001DDC  ECAA  F017         	call	_print_bright_LCD
  1189   001DE0                     
  1190                           ;main.c: 72:         print_HS1101_LCD(moist, 3, 10);
  1191   001DE0  0E03               	movlw	3
  1192   001DE2  0101               	movlb	1	; () banked
  1193   001DE4  6F06               	movwf	print_HS1101_LCD@row& (0+255),b
  1194   001DE6  0E0A               	movlw	10
  1195   001DE8  6F07               	movwf	print_HS1101_LCD@column& (0+255),b
  1196   001DEA  0100               	movlb	0	; () banked
  1197   001DEC  51C0               	movf	_moist& (0+255),w,b
  1198   001DEE  ECC5  F017         	call	_print_HS1101_LCD
  1199   001DF2                     
  1200                           ;main.c: 90:         if ((temperature > 25) && (temperature < 50)) {
  1201   001DF2  0E19               	movlw	25
  1202   001DF4  0100               	movlb	0	; () banked
  1203   001DF6  65C4               	cpfsgt	_temperature& (0+255),b
  1204   001DF8  EF00  F00F         	goto	u5501
  1205   001DFC  EF02  F00F         	goto	u5500
  1206   001E00                     u5501:
  1207   001E00  EF0E  F00F         	goto	l6742
  1208   001E04                     u5500:
  1209   001E04                     
  1210                           ; BSR set to: 0
  1211   001E04  0E32               	movlw	50
  1212   001E06  61C4               	cpfslt	_temperature& (0+255),b
  1213   001E08  EF08  F00F         	goto	u5511
  1214   001E0C  EF0A  F00F         	goto	u5510
  1215   001E10                     u5511:
  1216   001E10  EF0E  F00F         	goto	l6742
  1217   001E14                     u5510:
  1218   001E14                     
  1219                           ; BSR set to: 0
  1220   001E14  8C8C               	bsf	140,6,c	;volatile
  1221   001E16                     
  1222                           ; BSR set to: 0
  1223   001E16  9E8C               	bcf	140,7,c	;volatile
  1224   001E18  EF1C  F00F         	goto	l6744
  1225   001E1C                     l6742:
  1226                           
  1227                           ; BSR set to: 0
  1228   001E1C  0E32               	movlw	50
  1229   001E1E  65C4               	cpfsgt	_temperature& (0+255),b
  1230   001E20  EF14  F00F         	goto	u5521
  1231   001E24  EF16  F00F         	goto	u5520
  1232   001E28                     u5521:
  1233   001E28  EF1A  F00F         	goto	l970
  1234   001E2C                     u5520:
  1235   001E2C                     
  1236                           ; BSR set to: 0
  1237   001E2C  8C8C               	bsf	140,6,c	;volatile
  1238   001E2E                     
  1239                           ; BSR set to: 0
  1240   001E2E  8E8C               	bsf	140,7,c	;volatile
  1241   001E30  EF1C  F00F         	goto	l6744
  1242   001E34                     l970:
  1243                           
  1244                           ; BSR set to: 0
  1245   001E34  9C8C               	bcf	140,6,c	;volatile
  1246   001E36                     
  1247                           ; BSR set to: 0
  1248   001E36  9E8C               	bcf	140,7,c	;volatile
  1249   001E38                     l6744:
  1250                           
  1251                           ; BSR set to: 0
  1252                           ;main.c: 103:         if(bright < 50){
  1253   001E38  51C3               	movf	(_bright+1)& (0+255),w,b
  1254   001E3A  E107               	bnz	u5531
  1255   001E3C  0E32               	movlw	50
  1256   001E3E  5DC2               	subwf	_bright& (0+255),w,b
  1257   001E40  B0D8               	btfsc	status,0,c
  1258   001E42  EF25  F00F         	goto	u5531
  1259   001E46  EF27  F00F         	goto	u5530
  1260   001E4A                     u5531:
  1261   001E4A  EF2A  F00F         	goto	l978
  1262   001E4E                     u5530:
  1263   001E4E                     
  1264                           ; BSR set to: 0
  1265   001E4E  808B               	bsf	139,0,c	;volatile
  1266   001E50  EF2B  F00F         	goto	l6746
  1267   001E54                     l978:
  1268                           
  1269                           ; BSR set to: 0
  1270   001E54  908B               	bcf	139,0,c	;volatile
  1271   001E56                     l6746:
  1272                           
  1273                           ; BSR set to: 0
  1274                           ;main.c: 111:         if(moist < 50){
  1275   001E56  51C1               	movf	(_moist+1)& (0+255),w,b
  1276   001E58  E107               	bnz	u5541
  1277   001E5A  0E32               	movlw	50
  1278   001E5C  5DC0               	subwf	_moist& (0+255),w,b
  1279   001E5E  B0D8               	btfsc	status,0,c
  1280   001E60  EF34  F00F         	goto	u5541
  1281   001E64  EF36  F00F         	goto	u5540
  1282   001E68                     u5541:
  1283   001E68  EF39  F00F         	goto	l984
  1284   001E6C                     u5540:
  1285   001E6C                     
  1286                           ; BSR set to: 0
  1287   001E6C  828B               	bsf	139,1,c	;volatile
  1288   001E6E  EF3A  F00F         	goto	l6748
  1289   001E72                     l984:
  1290                           
  1291                           ; BSR set to: 0
  1292   001E72  928B               	bcf	139,1,c	;volatile
  1293   001E74                     l6748:
  1294                           
  1295                           ; BSR set to: 0
  1296                           ;main.c: 118:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  1297   001E74  0E06               	movlw	6
  1298   001E76  0101               	movlb	1	; () banked
  1299   001E78  6F14               	movwf	(??_main+1)& (0+255),b
  1300   001E7A  0E13               	movlw	19
  1301   001E7C  6F13               	movwf	??_main& (0+255),b
  1302   001E7E  0EAD               	movlw	173
  1303   001E80                     u5567:
  1304   001E80  2EE8               	decfsz	wreg,f,c
  1305   001E82  D7FE               	bra	u5567
  1306   001E84  2F13               	decfsz	??_main& (0+255),f,b
  1307   001E86  D7FC               	bra	u5567
  1308   001E88  2F14               	decfsz	(??_main+1)& (0+255),f,b
  1309   001E8A  D7FA               	bra	u5567
  1310   001E8C  F000 F000          	nop2	
  1311   001E90  EFBD  F00E         	goto	l6718
  1312   001E94  EFAD  F000         	goto	start
  1313   001E98                     __end_of_main:
  1314                           	callstack 0
  1315                           
  1316 ;; *************** function _uart_draw_borders *****************
  1317 ;; Defined at:
  1318 ;;		line 122 in file "main.c"
  1319 ;; Parameters:    Size  Location     Type
  1320 ;;		None
  1321 ;; Auto vars:     Size  Location     Type
  1322 ;;		None
  1323 ;; Return value:  Size  Location     Type
  1324 ;;                  1    wreg      void 
  1325 ;; Registers used:
  1326 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1327 ;; Tracked objects:
  1328 ;;		On entry : 0/0
  1329 ;;		On exit  : 0/0
  1330 ;;		Unchanged: 0/0
  1331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1336 ;;Total ram usage:        0 bytes
  1337 ;; Hardware stack levels used: 1
  1338 ;; Hardware stack levels required when called: 9
  1339 ;; This function calls:
  1340 ;;		_Send_String
  1341 ;; This function is called by:
  1342 ;;		_main
  1343 ;; This function uses a non-reentrant model
  1344 ;;
  1345                           
  1346                           	psect	text1
  1347   0032EC                     __ptext1:
  1348                           	callstack 0
  1349   0032EC                     _uart_draw_borders:
  1350                           	callstack 21
  1351   0032EC                     
  1352                           ;main.c: 123:     Send_String("----------------\r", 17);
  1353   0032EC  0E21               	movlw	low STR_9
  1354   0032EE  6E1D               	movwf	Send_String@str^0,c
  1355   0032F0  501D               	movf	Send_String@str^0,w,c
  1356   0032F2  A4D8               	btfss	status,2,c
  1357   0032F4  0E10               	movlw	high __smallconst
  1358   0032F6  6E1E               	movwf	(Send_String@str+1)^0,c
  1359   0032F8  0E11               	movlw	17
  1360   0032FA  6E1F               	movwf	Send_String@length^0,c
  1361   0032FC  EC87  F016         	call	_Send_String	;wreg free
  1362   003300  0012               	return		;funcret
  1363   003302                     __end_of_uart_draw_borders:
  1364                           	callstack 0
  1365                           
  1366 ;; *************** function _read_HS1101_moist_percent *****************
  1367 ;; Defined at:
  1368 ;;		line 15 in file "ECUAL/HS1101/HS1101.c"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;  AN_channel      1    wreg     enum E3336
  1371 ;; Auto vars:     Size  Location     Type
  1372 ;;  AN_channel      1   14[BANK1 ] enum E3336
  1373 ;;  moist           2   15[BANK1 ] unsigned short 
  1374 ;; Return value:  Size  Location     Type
  1375 ;;                  2   12[BANK1 ] unsigned short 
  1376 ;; Registers used:
  1377 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1378 ;; Tracked objects:
  1379 ;;		On entry : 0/0
  1380 ;;		On exit  : 0/0
  1381 ;;		Unchanged: 0/0
  1382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1383 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1384 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1386 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1387 ;;Total ram usage:        5 bytes
  1388 ;; Hardware stack levels used: 1
  1389 ;; Hardware stack levels required when called: 9
  1390 ;; This function calls:
  1391 ;;		_ADC_GetConversion
  1392 ;;		___flmul
  1393 ;;		___flsub
  1394 ;;		___fltol
  1395 ;;		___xxtofl
  1396 ;; This function is called by:
  1397 ;;		_main
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401                           	psect	text2
  1402   00252C                     __ptext2:
  1403                           	callstack 0
  1404   00252C                     _read_HS1101_moist_percent:
  1405                           	callstack 21
  1406                           
  1407                           ;incstack = 0
  1408                           ;read_HS1101_moist_percent@AN_channel stored from wreg
  1409   00252C  0101               	movlb	1	; () banked
  1410   00252E  6F0E               	movwf	read_HS1101_moist_percent@AN_channel& (0+255),b
  1411   002530                     
  1412                           ;ECUAL/HS1101/HS1101.c: 19:     moist = ADC_GetConversion (AN_channel);
  1413   002530  0101               	movlb	1	; () banked
  1414   002532  510E               	movf	read_HS1101_moist_percent@AN_channel& (0+255),w,b
  1415   002534  EC72  F017         	call	_ADC_GetConversion
  1416   002538  C01C  F10F         	movff	?_ADC_GetConversion,read_HS1101_moist_percent@moist
  1417   00253C  C01D  F110         	movff	?_ADC_GetConversion+1,read_HS1101_moist_percent@moist+1
  1418   002540                     
  1419                           ;ECUAL/HS1101/HS1101.c: 22:     moist = (uint8_t)(100 - (moist * 0.09775));
  1420   002540  0E27               	movlw	39
  1421   002542  0100               	movlb	0	; () banked
  1422   002544  6FE1               	movwf	___flmul@a& (0+255),b
  1423   002546  0E31               	movlw	49
  1424   002548  6FE2               	movwf	(___flmul@a+1)& (0+255),b
  1425   00254A  0EC8               	movlw	200
  1426   00254C  6FE3               	movwf	(___flmul@a+2)& (0+255),b
  1427   00254E  0E3D               	movlw	61
  1428   002550  6FE4               	movwf	(___flmul@a+3)& (0+255),b
  1429   002552  C10F  F01C         	movff	read_HS1101_moist_percent@moist,___xxtofl@val
  1430   002556  C110  F01D         	movff	read_HS1101_moist_percent@moist+1,___xxtofl@val+1
  1431   00255A  6A1E               	clrf	(___xxtofl@val+2)^0,c
  1432   00255C  6A1F               	clrf	(___xxtofl@val+3)^0,c
  1433   00255E  0E00               	movlw	0
  1434   002560  EC99  F00D         	call	___xxtofl
  1435   002564  C01C  F0DD         	movff	?___xxtofl,___flmul@b
  1436   002568  C01D  F0DE         	movff	?___xxtofl+1,___flmul@b+1
  1437   00256C  C01E  F0DF         	movff	?___xxtofl+2,___flmul@b+2
  1438   002570  C01F  F0E0         	movff	?___xxtofl+3,___flmul@b+3
  1439   002574  EC9F  F00A         	call	___flmul	;wreg free
  1440   002578  C0DD  F104         	movff	?___flmul,___flsub@a
  1441   00257C  C0DE  F105         	movff	?___flmul+1,___flsub@a+1
  1442   002580  C0DF  F106         	movff	?___flmul+2,___flsub@a+2
  1443   002584  C0E0  F107         	movff	?___flmul+3,___flsub@a+3
  1444   002588  0E00               	movlw	0
  1445   00258A  0101               	movlb	1	; () banked
  1446   00258C  6F00               	movwf	___flsub@b& (0+255),b
  1447   00258E  0E00               	movlw	0
  1448   002590  6F01               	movwf	(___flsub@b+1)& (0+255),b
  1449   002592  0EC8               	movlw	200
  1450   002594  6F02               	movwf	(___flsub@b+2)& (0+255),b
  1451   002596  0E42               	movlw	66
  1452   002598  6F03               	movwf	(___flsub@b+3)& (0+255),b
  1453   00259A  ECAD  F016         	call	___flsub	;wreg free
  1454   00259E  C100  F0F2         	movff	?___flsub,___fltol@f1
  1455   0025A2  C101  F0F3         	movff	?___flsub+1,___fltol@f1+1
  1456   0025A6  C102  F0F4         	movff	?___flsub+2,___fltol@f1+2
  1457   0025AA  C103  F0F5         	movff	?___flsub+3,___fltol@f1+3
  1458   0025AE  EC4C  F00F         	call	___fltol	;wreg free
  1459   0025B2  0100               	movlb	0	; () banked
  1460   0025B4  51F2               	movf	?___fltol& (0+255),w,b
  1461   0025B6  0101               	movlb	1	; () banked
  1462   0025B8  6F0F               	movwf	read_HS1101_moist_percent@moist& (0+255),b
  1463   0025BA  6B10               	clrf	(read_HS1101_moist_percent@moist+1)& (0+255),b
  1464   0025BC                     
  1465                           ; BSR set to: 1
  1466                           ;ECUAL/HS1101/HS1101.c: 24:     return moist;
  1467   0025BC  C10F  F10C         	movff	read_HS1101_moist_percent@moist,?_read_HS1101_moist_percent
  1468   0025C0  C110  F10D         	movff	read_HS1101_moist_percent@moist+1,?_read_HS1101_moist_percent+1
  1469   0025C4                     
  1470                           ; BSR set to: 1
  1471   0025C4  0012               	return		;funcret
  1472   0025C6                     __end_of_read_HS1101_moist_percent:
  1473                           	callstack 0
  1474                           
  1475 ;; *************** function _print_temp_uart *****************
  1476 ;; Defined at:
  1477 ;;		line 28 in file "ECUAL/TC74/TC74.c"
  1478 ;; Parameters:    Size  Location     Type
  1479 ;;  value           1    wreg     unsigned char 
  1480 ;; Auto vars:     Size  Location     Type
  1481 ;;  value           1   35[COMRAM] unsigned char 
  1482 ;; Return value:  Size  Location     Type
  1483 ;;                  1    wreg      void 
  1484 ;; Registers used:
  1485 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1486 ;; Tracked objects:
  1487 ;;		On entry : 0/0
  1488 ;;		On exit  : 0/0
  1489 ;;		Unchanged: 0/0
  1490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1492 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1494 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1495 ;;Total ram usage:        1 bytes
  1496 ;; Hardware stack levels used: 1
  1497 ;; Hardware stack levels required when called: 9
  1498 ;; This function calls:
  1499 ;;		_Send_String
  1500 ;;		___awdiv
  1501 ;;		___awmod
  1502 ;; This function is called by:
  1503 ;;		_main
  1504 ;; This function uses a non-reentrant model
  1505 ;;
  1506                           
  1507                           	psect	text3
  1508   00265E                     __ptext3:
  1509                           	callstack 0
  1510   00265E                     _print_temp_uart:
  1511                           	callstack 21
  1512                           
  1513                           ; BSR set to: 1
  1514                           ;incstack = 0
  1515                           ;print_temp_uart@value stored from wreg
  1516   00265E  6E24               	movwf	print_temp_uart@value^0,c
  1517   002660                     
  1518                           ;ECUAL/TC74/TC74.c: 30:     temp_array[0] = value / 100 + 0x30;
  1519   002660  C024  F01C         	movff	print_temp_uart@value,___awdiv@dividend
  1520   002664  6A1D               	clrf	(___awdiv@dividend+1)^0,c
  1521   002666  0E00               	movlw	0
  1522   002668  6E1F               	movwf	(___awdiv@divisor+1)^0,c
  1523   00266A  0E64               	movlw	100
  1524   00266C  6E1E               	movwf	___awdiv@divisor^0,c
  1525   00266E  ECD2  F00F         	call	___awdiv	;wreg free
  1526   002672  501C               	movf	?___awdiv^0,w,c
  1527   002674  0F30               	addlw	48
  1528   002676  0100               	movlb	0	; () banked
  1529   002678  6FC5               	movwf	_temp_array& (0+255),b
  1530                           
  1531                           ;ECUAL/TC74/TC74.c: 31:     temp_array[1] = value / 10 + 0x30;
  1532   00267A  C024  F01C         	movff	print_temp_uart@value,___awdiv@dividend
  1533   00267E  6A1D               	clrf	(___awdiv@dividend+1)^0,c
  1534   002680  0E00               	movlw	0
  1535   002682  6E1F               	movwf	(___awdiv@divisor+1)^0,c
  1536   002684  0E0A               	movlw	10
  1537   002686  6E1E               	movwf	___awdiv@divisor^0,c
  1538   002688  ECD2  F00F         	call	___awdiv	;wreg free
  1539   00268C  501C               	movf	?___awdiv^0,w,c
  1540   00268E  0F30               	addlw	48
  1541   002690  0100               	movlb	0	; () banked
  1542   002692  6FC6               	movwf	(_temp_array+1)& (0+255),b
  1543   002694                     
  1544                           ; BSR set to: 0
  1545                           ;ECUAL/TC74/TC74.c: 34:     if(temp_array[1] > '9'){
  1546   002694  0E39               	movlw	57
  1547   002696  65C6               	cpfsgt	(_temp_array+1)& (0+255),b
  1548   002698  EF50  F013         	goto	u5481
  1549   00269C  EF52  F013         	goto	u5480
  1550   0026A0                     u5481:
  1551   0026A0  EF55  F013         	goto	l6660
  1552   0026A4                     u5480:
  1553   0026A4                     
  1554                           ; BSR set to: 0
  1555                           ;ECUAL/TC74/TC74.c: 35:         temp_array[1] = temp_array[1] - 0x0A;
  1556   0026A4  51C6               	movf	(_temp_array+1)& (0+255),w,b
  1557   0026A6  0FF6               	addlw	246
  1558   0026A8  6FC6               	movwf	(_temp_array+1)& (0+255),b
  1559   0026AA                     l6660:
  1560                           
  1561                           ; BSR set to: 0
  1562                           ;ECUAL/TC74/TC74.c: 37:     temp_array[2] = value % 10 + 0x30;
  1563   0026AA  C024  F01C         	movff	print_temp_uart@value,___awmod@dividend
  1564   0026AE  6A1D               	clrf	(___awmod@dividend+1)^0,c
  1565   0026B0  0E00               	movlw	0
  1566   0026B2  6E1F               	movwf	(___awmod@divisor+1)^0,c
  1567   0026B4  0E0A               	movlw	10
  1568   0026B6  6E1E               	movwf	___awmod@divisor^0,c
  1569   0026B8  ECF3  F010         	call	___awmod	;wreg free
  1570   0026BC  501C               	movf	?___awmod^0,w,c
  1571   0026BE  0F30               	addlw	48
  1572   0026C0  0100               	movlb	0	; () banked
  1573   0026C2  6FC7               	movwf	(_temp_array+2)& (0+255),b
  1574   0026C4                     
  1575                           ; BSR set to: 0
  1576                           ;ECUAL/TC74/TC74.c: 38:     temp_array[3] = ' ';
  1577   0026C4  0E20               	movlw	32
  1578   0026C6  6FC8               	movwf	(_temp_array+3)& (0+255),b
  1579   0026C8                     
  1580                           ; BSR set to: 0
  1581                           ;ECUAL/TC74/TC74.c: 43:     temp_array[4] = 'C';
  1582   0026C8  0E43               	movlw	67
  1583   0026CA  6FC9               	movwf	(_temp_array+4)& (0+255),b
  1584   0026CC                     
  1585                           ; BSR set to: 0
  1586                           ;ECUAL/TC74/TC74.c: 46:     temp_array[5] = '\r';
  1587   0026CC  0E0D               	movlw	13
  1588   0026CE  6FCA               	movwf	(_temp_array+5)& (0+255),b
  1589   0026D0                     
  1590                           ; BSR set to: 0
  1591                           ;ECUAL/TC74/TC74.c: 48:     Send_String("Temp : ", 8);
  1592   0026D0  0E70               	movlw	low STR_4
  1593   0026D2  6E1D               	movwf	Send_String@str^0,c
  1594   0026D4  501D               	movf	Send_String@str^0,w,c
  1595   0026D6  A4D8               	btfss	status,2,c
  1596   0026D8  0E10               	movlw	high __smallconst
  1597   0026DA  6E1E               	movwf	(Send_String@str+1)^0,c
  1598   0026DC  0E08               	movlw	8
  1599   0026DE  6E1F               	movwf	Send_String@length^0,c
  1600   0026E0  EC87  F016         	call	_Send_String	;wreg free
  1601   0026E4                     
  1602                           ;ECUAL/TC74/TC74.c: 49:     Send_String(temp_array, 6);
  1603   0026E4  0EC5               	movlw	low _temp_array
  1604   0026E6  6E1D               	movwf	Send_String@str^0,c
  1605   0026E8  6A1E               	clrf	(Send_String@str+1)^0,c
  1606   0026EA  0E06               	movlw	6
  1607   0026EC  6E1F               	movwf	Send_String@length^0,c
  1608   0026EE  EC87  F016         	call	_Send_String	;wreg free
  1609   0026F2  0012               	return		;funcret
  1610   0026F4                     __end_of_print_temp_uart:
  1611                           	callstack 0
  1612                           
  1613 ;; *************** function _print_temp_LCD *****************
  1614 ;; Defined at:
  1615 ;;		line 52 in file "ECUAL/TC74/TC74.c"
  1616 ;; Parameters:    Size  Location     Type
  1617 ;;  value           1    wreg     unsigned char 
  1618 ;;  row             1    6[BANK1 ] unsigned char 
  1619 ;;  column          1    7[BANK1 ] unsigned char 
  1620 ;; Auto vars:     Size  Location     Type
  1621 ;;  value           1   32[BANK0 ] unsigned char 
  1622 ;; Return value:  Size  Location     Type
  1623 ;;                  1    wreg      void 
  1624 ;; Registers used:
  1625 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1626 ;; Tracked objects:
  1627 ;;		On entry : 0/0
  1628 ;;		On exit  : 0/0
  1629 ;;		Unchanged: 0/0
  1630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1631 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1632 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1634 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1635 ;;Total ram usage:        3 bytes
  1636 ;; Hardware stack levels used: 1
  1637 ;; Hardware stack levels required when called: 13
  1638 ;; This function calls:
  1639 ;;		_convert_uint8_to_string
  1640 ;;		_lcd_4bits_send_char_data_pos
  1641 ;;		_lcd_4bits_send_string_data_pos
  1642 ;; This function is called by:
  1643 ;;		_main
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647                           	psect	text4
  1648   002F1E                     __ptext4:
  1649                           	callstack 0
  1650   002F1E                     _print_temp_LCD:
  1651                           	callstack 17
  1652                           
  1653                           ;incstack = 0
  1654                           ;print_temp_LCD@value stored from wreg
  1655   002F1E  0100               	movlb	0	; () banked
  1656   002F20  6FF7               	movwf	print_temp_LCD@value& (0+255),b
  1657   002F22                     
  1658                           ;ECUAL/TC74/TC74.c: 55:     convert_uint8_to_string(value, &value_array);
  1659   002F22  0ECB               	movlw	low _value_array@TC74$F213
  1660   002F24  0100               	movlb	0	; () banked
  1661   002F26  6FF6               	movwf	convert_uint8_to_string@str& (0+255),b
  1662   002F28  51F7               	movf	print_temp_LCD@value& (0+255),w,b
  1663   002F2A  ECE3  F012         	call	_convert_uint8_to_string
  1664   002F2E                     
  1665                           ;ECUAL/TC74/TC74.c: 58:     lcd_4bits_send_string_data_pos(value_array, row, column);
  1666   002F2E  0ECB               	movlw	low _value_array@TC74$F213
  1667   002F30  6E23               	movwf	lcd_4bits_send_string_data_pos@str^0,c
  1668   002F32  6A24               	clrf	(lcd_4bits_send_string_data_pos@str+1)^0,c
  1669   002F34  C106  F025         	movff	print_temp_LCD@row,lcd_4bits_send_string_data_pos@row
  1670   002F38  C107  F026         	movff	print_temp_LCD@column,lcd_4bits_send_string_data_pos@col
  1671   002F3C  EC5F  F015         	call	_lcd_4bits_send_string_data_pos	;wreg free
  1672   002F40                     
  1673                           ;ECUAL/TC74/TC74.c: 64:     lcd_4bits_send_char_data_pos('C', row, column + 4);
  1674   002F40  C106  F023         	movff	print_temp_LCD@row,lcd_4bits_send_char_data_pos@row
  1675   002F44  0101               	movlb	1	; () banked
  1676   002F46  5107               	movf	print_temp_LCD@column& (0+255),w,b
  1677   002F48  0F04               	addlw	4
  1678   002F4A  6E24               	movwf	lcd_4bits_send_char_data_pos@col^0,c
  1679   002F4C  0E43               	movlw	67
  1680   002F4E  EC8C  F019         	call	_lcd_4bits_send_char_data_pos
  1681   002F52  0012               	return		;funcret
  1682   002F54                     __end_of_print_temp_LCD:
  1683                           	callstack 0
  1684                           
  1685 ;; *************** function _print_bright_uart *****************
  1686 ;; Defined at:
  1687 ;;		line 27 in file "ECUAL/LDR/LDR.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;  value           1    wreg     unsigned char 
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;  value           1   35[COMRAM] unsigned char 
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  1    wreg      void 
  1694 ;; Registers used:
  1695 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1702 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1704 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1705 ;;Total ram usage:        1 bytes
  1706 ;; Hardware stack levels used: 1
  1707 ;; Hardware stack levels required when called: 9
  1708 ;; This function calls:
  1709 ;;		_Send_String
  1710 ;;		___awdiv
  1711 ;;		___awmod
  1712 ;; This function is called by:
  1713 ;;		_main
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           	psect	text5
  1718   0026F4                     __ptext5:
  1719                           	callstack 0
  1720   0026F4                     _print_bright_uart:
  1721                           	callstack 21
  1722                           
  1723                           ;incstack = 0
  1724                           ;print_bright_uart@value stored from wreg
  1725   0026F4  6E24               	movwf	print_bright_uart@value^0,c
  1726   0026F6                     
  1727                           ;ECUAL/LDR/LDR.c: 29:     brightness_array[0] = value / 100 + 0x30;
  1728   0026F6  C024  F01C         	movff	print_bright_uart@value,___awdiv@dividend
  1729   0026FA  6A1D               	clrf	(___awdiv@dividend+1)^0,c
  1730   0026FC  0E00               	movlw	0
  1731   0026FE  6E1F               	movwf	(___awdiv@divisor+1)^0,c
  1732   002700  0E64               	movlw	100
  1733   002702  6E1E               	movwf	___awdiv@divisor^0,c
  1734   002704  ECD2  F00F         	call	___awdiv	;wreg free
  1735   002708  501C               	movf	?___awdiv^0,w,c
  1736   00270A  0F30               	addlw	48
  1737   00270C  6E36               	movwf	_brightness_array^0,c
  1738                           
  1739                           ;ECUAL/LDR/LDR.c: 30:     brightness_array[1] = value / 10 + 0x30;
  1740   00270E  C024  F01C         	movff	print_bright_uart@value,___awdiv@dividend
  1741   002712  6A1D               	clrf	(___awdiv@dividend+1)^0,c
  1742   002714  0E00               	movlw	0
  1743   002716  6E1F               	movwf	(___awdiv@divisor+1)^0,c
  1744   002718  0E0A               	movlw	10
  1745   00271A  6E1E               	movwf	___awdiv@divisor^0,c
  1746   00271C  ECD2  F00F         	call	___awdiv	;wreg free
  1747   002720  501C               	movf	?___awdiv^0,w,c
  1748   002722  0F30               	addlw	48
  1749   002724  6E37               	movwf	(_brightness_array+1)^0,c
  1750   002726                     
  1751                           ;ECUAL/LDR/LDR.c: 33:     if(brightness_array[1] > '9'){
  1752   002726  0E39               	movlw	57
  1753   002728  6437               	cpfsgt	(_brightness_array+1)^0,c
  1754   00272A  EF99  F013         	goto	u5471
  1755   00272E  EF9B  F013         	goto	u5470
  1756   002732                     u5471:
  1757   002732  EF9E  F013         	goto	l6638
  1758   002736                     u5470:
  1759   002736                     
  1760                           ;ECUAL/LDR/LDR.c: 34:         brightness_array[1] = brightness_array[1] - 0x0A;
  1761   002736  5037               	movf	(_brightness_array+1)^0,w,c
  1762   002738  0FF6               	addlw	246
  1763   00273A  6E37               	movwf	(_brightness_array+1)^0,c
  1764   00273C                     l6638:
  1765                           
  1766                           ;ECUAL/LDR/LDR.c: 37:     brightness_array[2] = value % 10 + 0x30;
  1767   00273C  C024  F01C         	movff	print_bright_uart@value,___awmod@dividend
  1768   002740  6A1D               	clrf	(___awmod@dividend+1)^0,c
  1769   002742  0E00               	movlw	0
  1770   002744  6E1F               	movwf	(___awmod@divisor+1)^0,c
  1771   002746  0E0A               	movlw	10
  1772   002748  6E1E               	movwf	___awmod@divisor^0,c
  1773   00274A  ECF3  F010         	call	___awmod	;wreg free
  1774   00274E  501C               	movf	?___awmod^0,w,c
  1775   002750  0F30               	addlw	48
  1776   002752  6E38               	movwf	(_brightness_array+2)^0,c
  1777   002754                     
  1778                           ;ECUAL/LDR/LDR.c: 38:     brightness_array[3] = '%';
  1779   002754  0E25               	movlw	37
  1780   002756  6E39               	movwf	(_brightness_array+3)^0,c
  1781   002758                     
  1782                           ;ECUAL/LDR/LDR.c: 39:     brightness_array[4] = '\r';
  1783   002758  0E0D               	movlw	13
  1784   00275A  6E3A               	movwf	(_brightness_array+4)^0,c
  1785   00275C                     
  1786                           ;ECUAL/LDR/LDR.c: 41:     Send_String("Bright : ", 10);
  1787   00275C  0E4C               	movlw	low STR_3
  1788   00275E  6E1D               	movwf	Send_String@str^0,c
  1789   002760  501D               	movf	Send_String@str^0,w,c
  1790   002762  A4D8               	btfss	status,2,c
  1791   002764  0E10               	movlw	high __smallconst
  1792   002766  6E1E               	movwf	(Send_String@str+1)^0,c
  1793   002768  0E0A               	movlw	10
  1794   00276A  6E1F               	movwf	Send_String@length^0,c
  1795   00276C  EC87  F016         	call	_Send_String	;wreg free
  1796   002770                     
  1797                           ;ECUAL/LDR/LDR.c: 42:     Send_String(brightness_array, 5);
  1798   002770  0E36               	movlw	low _brightness_array
  1799   002772  6E1D               	movwf	Send_String@str^0,c
  1800   002774  6A1E               	clrf	(Send_String@str+1)^0,c
  1801   002776  0E05               	movlw	5
  1802   002778  6E1F               	movwf	Send_String@length^0,c
  1803   00277A  EC87  F016         	call	_Send_String	;wreg free
  1804   00277E  0012               	return		;funcret
  1805   002780                     __end_of_print_bright_uart:
  1806                           	callstack 0
  1807                           
  1808 ;; *************** function _print_bright_LCD *****************
  1809 ;; Defined at:
  1810 ;;		line 45 in file "ECUAL/LDR/LDR.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;  value           1    wreg     unsigned char 
  1813 ;;  row             1    6[BANK1 ] unsigned char 
  1814 ;;  column          1    7[BANK1 ] unsigned char 
  1815 ;; Auto vars:     Size  Location     Type
  1816 ;;  value           1   32[BANK0 ] unsigned char 
  1817 ;; Return value:  Size  Location     Type
  1818 ;;                  1    wreg      void 
  1819 ;; Registers used:
  1820 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1821 ;; Tracked objects:
  1822 ;;		On entry : 0/0
  1823 ;;		On exit  : 0/0
  1824 ;;		Unchanged: 0/0
  1825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1826 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1827 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1829 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1830 ;;Total ram usage:        3 bytes
  1831 ;; Hardware stack levels used: 1
  1832 ;; Hardware stack levels required when called: 13
  1833 ;; This function calls:
  1834 ;;		_convert_uint8_to_string
  1835 ;;		_lcd_4bits_send_char_data_pos
  1836 ;;		_lcd_4bits_send_string_data_pos
  1837 ;; This function is called by:
  1838 ;;		_main
  1839 ;; This function uses a non-reentrant model
  1840 ;;
  1841                           
  1842                           	psect	text6
  1843   002F54                     __ptext6:
  1844                           	callstack 0
  1845   002F54                     _print_bright_LCD:
  1846                           	callstack 17
  1847                           
  1848                           ;incstack = 0
  1849                           ;print_bright_LCD@value stored from wreg
  1850   002F54  0100               	movlb	0	; () banked
  1851   002F56  6FF7               	movwf	print_bright_LCD@value& (0+255),b
  1852   002F58                     
  1853                           ;ECUAL/LDR/LDR.c: 48:     convert_uint8_to_string(value, &value_array);
  1854   002F58  0ECF               	movlw	low _value_array@LDR$F189
  1855   002F5A  0100               	movlb	0	; () banked
  1856   002F5C  6FF6               	movwf	convert_uint8_to_string@str& (0+255),b
  1857   002F5E  51F7               	movf	print_bright_LCD@value& (0+255),w,b
  1858   002F60  ECE3  F012         	call	_convert_uint8_to_string
  1859   002F64                     
  1860                           ;ECUAL/LDR/LDR.c: 51:     lcd_4bits_send_string_data_pos(value_array, row, column);
  1861   002F64  0ECF               	movlw	low _value_array@LDR$F189
  1862   002F66  6E23               	movwf	lcd_4bits_send_string_data_pos@str^0,c
  1863   002F68  6A24               	clrf	(lcd_4bits_send_string_data_pos@str+1)^0,c
  1864   002F6A  C106  F025         	movff	print_bright_LCD@row,lcd_4bits_send_string_data_pos@row
  1865   002F6E  C107  F026         	movff	print_bright_LCD@column,lcd_4bits_send_string_data_pos@col
  1866   002F72  EC5F  F015         	call	_lcd_4bits_send_string_data_pos	;wreg free
  1867   002F76                     
  1868                           ;ECUAL/LDR/LDR.c: 54:     lcd_4bits_send_char_data_pos('%', row, column + 3);
  1869   002F76  C106  F023         	movff	print_bright_LCD@row,lcd_4bits_send_char_data_pos@row
  1870   002F7A  0101               	movlb	1	; () banked
  1871   002F7C  5107               	movf	print_bright_LCD@column& (0+255),w,b
  1872   002F7E  0F03               	addlw	3
  1873   002F80  6E24               	movwf	lcd_4bits_send_char_data_pos@col^0,c
  1874   002F82  0E25               	movlw	37
  1875   002F84  EC8C  F019         	call	_lcd_4bits_send_char_data_pos
  1876   002F88  0012               	return		;funcret
  1877   002F8A                     __end_of_print_bright_LCD:
  1878                           	callstack 0
  1879                           
  1880 ;; *************** function _print_HS1101_uart *****************
  1881 ;; Defined at:
  1882 ;;		line 28 in file "ECUAL/HS1101/HS1101.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;  value           1    wreg     unsigned char 
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;  value           1   35[COMRAM] unsigned char 
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  1    wreg      void 
  1889 ;; Registers used:
  1890 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1897 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1899 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1900 ;;Total ram usage:        1 bytes
  1901 ;; Hardware stack levels used: 1
  1902 ;; Hardware stack levels required when called: 9
  1903 ;; This function calls:
  1904 ;;		_Send_String
  1905 ;;		___awdiv
  1906 ;;		___awmod
  1907 ;; This function is called by:
  1908 ;;		_main
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912                           	psect	text7
  1913   002780                     __ptext7:
  1914                           	callstack 0
  1915   002780                     _print_HS1101_uart:
  1916                           	callstack 21
  1917                           
  1918                           ;incstack = 0
  1919                           ;print_HS1101_uart@value stored from wreg
  1920   002780  6E24               	movwf	print_HS1101_uart@value^0,c
  1921   002782                     
  1922                           ;ECUAL/HS1101/HS1101.c: 30:     moist_array[0] = value / 100 + 0x30;
  1923   002782  C024  F01C         	movff	print_HS1101_uart@value,___awdiv@dividend
  1924   002786  6A1D               	clrf	(___awdiv@dividend+1)^0,c
  1925   002788  0E00               	movlw	0
  1926   00278A  6E1F               	movwf	(___awdiv@divisor+1)^0,c
  1927   00278C  0E64               	movlw	100
  1928   00278E  6E1E               	movwf	___awdiv@divisor^0,c
  1929   002790  ECD2  F00F         	call	___awdiv	;wreg free
  1930   002794  501C               	movf	?___awdiv^0,w,c
  1931   002796  0F30               	addlw	48
  1932   002798  6E3B               	movwf	_moist_array^0,c
  1933                           
  1934                           ;ECUAL/HS1101/HS1101.c: 31:     moist_array[1] = value / 10 + 0x30;
  1935   00279A  C024  F01C         	movff	print_HS1101_uart@value,___awdiv@dividend
  1936   00279E  6A1D               	clrf	(___awdiv@dividend+1)^0,c
  1937   0027A0  0E00               	movlw	0
  1938   0027A2  6E1F               	movwf	(___awdiv@divisor+1)^0,c
  1939   0027A4  0E0A               	movlw	10
  1940   0027A6  6E1E               	movwf	___awdiv@divisor^0,c
  1941   0027A8  ECD2  F00F         	call	___awdiv	;wreg free
  1942   0027AC  501C               	movf	?___awdiv^0,w,c
  1943   0027AE  0F30               	addlw	48
  1944   0027B0  6E3C               	movwf	(_moist_array+1)^0,c
  1945   0027B2                     
  1946                           ;ECUAL/HS1101/HS1101.c: 34:     if(moist_array[1] > '9'){
  1947   0027B2  0E39               	movlw	57
  1948   0027B4  643C               	cpfsgt	(_moist_array+1)^0,c
  1949   0027B6  EFDF  F013         	goto	u5461
  1950   0027BA  EFE1  F013         	goto	u5460
  1951   0027BE                     u5461:
  1952   0027BE  EFE4  F013         	goto	l6616
  1953   0027C2                     u5460:
  1954   0027C2                     
  1955                           ;ECUAL/HS1101/HS1101.c: 35:         moist_array[1] = moist_array[1] - 0x0A;
  1956   0027C2  503C               	movf	(_moist_array+1)^0,w,c
  1957   0027C4  0FF6               	addlw	246
  1958   0027C6  6E3C               	movwf	(_moist_array+1)^0,c
  1959   0027C8                     l6616:
  1960                           
  1961                           ;ECUAL/HS1101/HS1101.c: 38:     moist_array[2] = value % 10 + 0x30;
  1962   0027C8  C024  F01C         	movff	print_HS1101_uart@value,___awmod@dividend
  1963   0027CC  6A1D               	clrf	(___awmod@dividend+1)^0,c
  1964   0027CE  0E00               	movlw	0
  1965   0027D0  6E1F               	movwf	(___awmod@divisor+1)^0,c
  1966   0027D2  0E0A               	movlw	10
  1967   0027D4  6E1E               	movwf	___awmod@divisor^0,c
  1968   0027D6  ECF3  F010         	call	___awmod	;wreg free
  1969   0027DA  501C               	movf	?___awmod^0,w,c
  1970   0027DC  0F30               	addlw	48
  1971   0027DE  6E3D               	movwf	(_moist_array+2)^0,c
  1972   0027E0                     
  1973                           ;ECUAL/HS1101/HS1101.c: 39:     moist_array[3] = '%';
  1974   0027E0  0E25               	movlw	37
  1975   0027E2  6E3E               	movwf	(_moist_array+3)^0,c
  1976   0027E4                     
  1977                           ;ECUAL/HS1101/HS1101.c: 40:     moist_array[4] = '\r';
  1978   0027E4  0E0D               	movlw	13
  1979   0027E6  6E3F               	movwf	(_moist_array+4)^0,c
  1980   0027E8                     
  1981                           ;ECUAL/HS1101/HS1101.c: 42:     Send_String("Moist : ", 9);
  1982   0027E8  0E5F               	movlw	low STR_2
  1983   0027EA  6E1D               	movwf	Send_String@str^0,c
  1984   0027EC  501D               	movf	Send_String@str^0,w,c
  1985   0027EE  A4D8               	btfss	status,2,c
  1986   0027F0  0E10               	movlw	high __smallconst
  1987   0027F2  6E1E               	movwf	(Send_String@str+1)^0,c
  1988   0027F4  0E09               	movlw	9
  1989   0027F6  6E1F               	movwf	Send_String@length^0,c
  1990   0027F8  EC87  F016         	call	_Send_String	;wreg free
  1991   0027FC                     
  1992                           ;ECUAL/HS1101/HS1101.c: 43:     Send_String(moist_array, 5);
  1993   0027FC  0E3B               	movlw	low _moist_array
  1994   0027FE  6E1D               	movwf	Send_String@str^0,c
  1995   002800  6A1E               	clrf	(Send_String@str+1)^0,c
  1996   002802  0E05               	movlw	5
  1997   002804  6E1F               	movwf	Send_String@length^0,c
  1998   002806  EC87  F016         	call	_Send_String	;wreg free
  1999   00280A  0012               	return		;funcret
  2000   00280C                     __end_of_print_HS1101_uart:
  2001                           	callstack 0
  2002                           
  2003 ;; *************** function _Send_String *****************
  2004 ;; Defined at:
  2005 ;;		line 11 in file "ECUAL/UART_Debug/uart_debug.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;  str             2   28[COMRAM] PTR unsigned char 
  2008 ;;		 -> STR_9(18), STR_4(8), temp_array(6), STR_3(10), 
  2009 ;;		 -> brightness_array(5), STR_2(9), moist_array(5), 
  2010 ;;  length          1   30[COMRAM] unsigned char 
  2011 ;; Auto vars:     Size  Location     Type
  2012 ;;  l_String_Len    1   31[COMRAM] unsigned char 
  2013 ;; Return value:  Size  Location     Type
  2014 ;;                  1    wreg      void 
  2015 ;; Registers used:
  2016 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2017 ;; Tracked objects:
  2018 ;;		On entry : 0/0
  2019 ;;		On exit  : 0/0
  2020 ;;		Unchanged: 0/0
  2021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2022 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2023 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2025 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2026 ;;Total ram usage:        4 bytes
  2027 ;; Hardware stack levels used: 1
  2028 ;; Hardware stack levels required when called: 8
  2029 ;; This function calls:
  2030 ;;		_EUSART_Write
  2031 ;; This function is called by:
  2032 ;;		_print_HS1101_uart
  2033 ;;		_print_bright_uart
  2034 ;;		_print_temp_uart
  2035 ;;		_uart_draw_borders
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039                           	psect	text8
  2040   002D0E                     __ptext8:
  2041                           	callstack 0
  2042   002D0E                     _Send_String:
  2043                           	callstack 21
  2044   002D0E                     
  2045                           ;ECUAL/UART_Debug/uart_debug.c: 12:     uint8_t l_String_Length = 0;
  2046   002D0E  0E00               	movlw	0
  2047   002D10  6E20               	movwf	Send_String@l_String_Length^0,c
  2048                           
  2049                           ;ECUAL/UART_Debug/uart_debug.c: 13:     for(l_String_Length = 0; l_String_Length < lengt
      +                          h; ++l_String_Length){
  2050   002D12  0E00               	movlw	0
  2051   002D14  6E20               	movwf	Send_String@l_String_Length^0,c
  2052   002D16  EFA3  F016         	goto	l4356
  2053   002D1A                     l4350:
  2054                           
  2055                           ;ECUAL/UART_Debug/uart_debug.c: 14:         EUSART_Write(*str++);
  2056   002D1A  C01D  FFF6         	movff	Send_String@str,tblptrl
  2057   002D1E  C01E  FFF7         	movff	Send_String@str+1,tblptrh
  2058   002D22  0E00               	movlw	low (__smallconst shr (0+16))
  2059   002D24  6EF8               	movwf	tblptru,c
  2060   002D26  0E0F               	movlw	(high __ramtop+-1)
  2061   002D28  64F7               	cpfsgt	tblptrh,c
  2062   002D2A  D003               	bra	u2827
  2063   002D2C  0008               	tblrd		*
  2064   002D2E  50F5               	movf	tablat,w,c
  2065   002D30  D005               	bra	u2820
  2066   002D32                     u2827:
  2067   002D32  CFF6 FFE9          	movff	tblptrl,fsr0l
  2068   002D36  CFF7 FFEA          	movff	tblptrh,fsr0h
  2069   002D3A  50EF               	movf	indf0,w,c
  2070   002D3C                     u2820:
  2071   002D3C  EC5E  F016         	call	_EUSART_Write
  2072   002D40  4A1D               	infsnz	Send_String@str^0,f,c
  2073   002D42  2A1E               	incf	(Send_String@str+1)^0,f,c
  2074   002D44                     
  2075                           ;ECUAL/UART_Debug/uart_debug.c: 15:     }
  2076   002D44  2A20               	incf	Send_String@l_String_Length^0,f,c
  2077   002D46                     l4356:
  2078   002D46  501F               	movf	Send_String@length^0,w,c
  2079   002D48  5C20               	subwf	Send_String@l_String_Length^0,w,c
  2080   002D4A  A0D8               	btfss	status,0,c
  2081   002D4C  EFAA  F016         	goto	u2831
  2082   002D50  EFAC  F016         	goto	u2830
  2083   002D54                     u2831:
  2084   002D54  EF8D  F016         	goto	l4350
  2085   002D58                     u2830:
  2086   002D58  0012               	return		;funcret
  2087   002D5A                     __end_of_Send_String:
  2088                           	callstack 0
  2089                           
  2090 ;; *************** function _EUSART_Write *****************
  2091 ;; Defined at:
  2092 ;;		line 173 in file "mcc_generated_files/eusart.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;  txData          1    wreg     unsigned char 
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;  txData          1   27[COMRAM] unsigned char 
  2097 ;; Return value:  Size  Location     Type
  2098 ;;                  1    wreg      void 
  2099 ;; Registers used:
  2100 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2101 ;; Tracked objects:
  2102 ;;		On entry : 0/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2107 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2109 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2110 ;;Total ram usage:        1 bytes
  2111 ;; Hardware stack levels used: 1
  2112 ;; Hardware stack levels required when called: 7
  2113 ;; This function calls:
  2114 ;;		Nothing
  2115 ;; This function is called by:
  2116 ;;		_Send_String
  2117 ;; This function uses a non-reentrant model
  2118 ;;
  2119                           
  2120                           	psect	text9
  2121   002CBC                     __ptext9:
  2122                           	callstack 0
  2123   002CBC                     _EUSART_Write:
  2124                           	callstack 21
  2125                           
  2126                           ;incstack = 0
  2127                           ;EUSART_Write@txData stored from wreg
  2128   002CBC  6E1C               	movwf	EUSART_Write@txData^0,c
  2129   002CBE                     l3814:
  2130                           
  2131                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
  2132   002CBE  5033               	movf	_eusartTxBufferRemaining^0,w,c	;volatile
  2133   002CC0  B4D8               	btfsc	status,2,c
  2134   002CC2  EF65  F016         	goto	u2241
  2135   002CC6  EF67  F016         	goto	u2240
  2136   002CCA                     u2241:
  2137   002CCA  EF5F  F016         	goto	l3814
  2138   002CCE                     u2240:
  2139   002CCE                     
  2140                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE1bits.TX1IE)
  2141   002CCE  B89D               	btfsc	157,4,c	;volatile
  2142   002CD0  EF6C  F016         	goto	u2251
  2143   002CD4  EF6E  F016         	goto	u2250
  2144   002CD8                     u2251:
  2145   002CD8  EF72  F016         	goto	l864
  2146   002CDC                     u2250:
  2147   002CDC                     
  2148                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TXR
      +                          EG = txData;
  2149   002CDC  C01C  FFAD         	movff	EUSART_Write@txData,4013	;volatile
  2150                           
  2151                           ;mcc_generated_files/eusart.c: 182:     }
  2152   002CE0  EF85  F016         	goto	l3828
  2153   002CE4                     l864:
  2154                           
  2155                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          1bits.TX1IE = 0;
  2156   002CE4  989D               	bcf	157,4,c	;volatile
  2157   002CE6                     
  2158                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
  2159   002CE6  5035               	movf	_eusartTxHead^0,w,c
  2160   002CE8  0FB4               	addlw	low _eusartTxBuffer
  2161   002CEA  6ED9               	movwf	fsr2l,c
  2162   002CEC  6ADA               	clrf	fsr2h,c
  2163   002CEE  C01C  FFDF         	movff	EUSART_Write@txData,indf2
  2164   002CF2  2A35               	incf	_eusartTxHead^0,f,c	;volatile
  2165   002CF4                     
  2166                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  2167   002CF4  0E07               	movlw	7
  2168   002CF6  6435               	cpfsgt	_eusartTxHead^0,c	;volatile
  2169   002CF8  EF80  F016         	goto	u2261
  2170   002CFC  EF82  F016         	goto	u2260
  2171   002D00                     u2261:
  2172   002D00  EF84  F016         	goto	l3826
  2173   002D04                     u2260:
  2174   002D04                     
  2175                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
  2176   002D04  0E00               	movlw	0
  2177   002D06  6E35               	movwf	_eusartTxHead^0,c	;volatile
  2178   002D08                     l3826:
  2179                           
  2180                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
  2181   002D08  0633               	decf	_eusartTxBufferRemaining^0,f,c	;volatile
  2182   002D0A                     l3828:
  2183                           
  2184                           ;mcc_generated_files/eusart.c: 193:     PIE1bits.TX1IE = 1;
  2185   002D0A  889D               	bsf	157,4,c	;volatile
  2186   002D0C  0012               	return		;funcret
  2187   002D0E                     __end_of_EUSART_Write:
  2188                           	callstack 0
  2189                           
  2190 ;; *************** function _print_HS1101_LCD *****************
  2191 ;; Defined at:
  2192 ;;		line 46 in file "ECUAL/HS1101/HS1101.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;  value           1    wreg     unsigned char 
  2195 ;;  row             1    6[BANK1 ] unsigned char 
  2196 ;;  column          1    7[BANK1 ] unsigned char 
  2197 ;; Auto vars:     Size  Location     Type
  2198 ;;  value           1   32[BANK0 ] unsigned char 
  2199 ;; Return value:  Size  Location     Type
  2200 ;;                  1    wreg      void 
  2201 ;; Registers used:
  2202 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2203 ;; Tracked objects:
  2204 ;;		On entry : 0/0
  2205 ;;		On exit  : 0/0
  2206 ;;		Unchanged: 0/0
  2207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2208 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2209 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2211 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2212 ;;Total ram usage:        3 bytes
  2213 ;; Hardware stack levels used: 1
  2214 ;; Hardware stack levels required when called: 13
  2215 ;; This function calls:
  2216 ;;		_convert_uint8_to_string
  2217 ;;		_lcd_4bits_send_char_data_pos
  2218 ;;		_lcd_4bits_send_string_data_pos
  2219 ;; This function is called by:
  2220 ;;		_main
  2221 ;; This function uses a non-reentrant model
  2222 ;;
  2223                           
  2224                           	psect	text10
  2225   002F8A                     __ptext10:
  2226                           	callstack 0
  2227   002F8A                     _print_HS1101_LCD:
  2228                           	callstack 17
  2229                           
  2230                           ;incstack = 0
  2231                           ;print_HS1101_LCD@value stored from wreg
  2232   002F8A  0100               	movlb	0	; () banked
  2233   002F8C  6FF7               	movwf	print_HS1101_LCD@value& (0+255),b
  2234   002F8E                     
  2235                           ;ECUAL/HS1101/HS1101.c: 49:     convert_uint8_to_string(value, &value_array);
  2236   002F8E  0ED3               	movlw	low _value_array
  2237   002F90  0100               	movlb	0	; () banked
  2238   002F92  6FF6               	movwf	convert_uint8_to_string@str& (0+255),b
  2239   002F94  51F7               	movf	print_HS1101_LCD@value& (0+255),w,b
  2240   002F96  ECE3  F012         	call	_convert_uint8_to_string
  2241   002F9A                     
  2242                           ;ECUAL/HS1101/HS1101.c: 52:     lcd_4bits_send_string_data_pos(value_array, row, column)
      +                          ;
  2243   002F9A  0ED3               	movlw	low _value_array
  2244   002F9C  6E23               	movwf	lcd_4bits_send_string_data_pos@str^0,c
  2245   002F9E  6A24               	clrf	(lcd_4bits_send_string_data_pos@str+1)^0,c
  2246   002FA0  C106  F025         	movff	print_HS1101_LCD@row,lcd_4bits_send_string_data_pos@row
  2247   002FA4  C107  F026         	movff	print_HS1101_LCD@column,lcd_4bits_send_string_data_pos@col
  2248   002FA8  EC5F  F015         	call	_lcd_4bits_send_string_data_pos	;wreg free
  2249   002FAC                     
  2250                           ;ECUAL/HS1101/HS1101.c: 55:     lcd_4bits_send_char_data_pos('%', row, column + 3);
  2251   002FAC  C106  F023         	movff	print_HS1101_LCD@row,lcd_4bits_send_char_data_pos@row
  2252   002FB0  0101               	movlb	1	; () banked
  2253   002FB2  5107               	movf	print_HS1101_LCD@column& (0+255),w,b
  2254   002FB4  0F03               	addlw	3
  2255   002FB6  6E24               	movwf	lcd_4bits_send_char_data_pos@col^0,c
  2256   002FB8  0E25               	movlw	37
  2257   002FBA  EC8C  F019         	call	_lcd_4bits_send_char_data_pos
  2258   002FBE  0012               	return		;funcret
  2259   002FC0                     __end_of_print_HS1101_LCD:
  2260                           	callstack 0
  2261                           
  2262 ;; *************** function _lcd_4bits_send_string_data_pos *****************
  2263 ;; Defined at:
  2264 ;;		line 64 in file "ECUAL/Char_LCD/char_lcd.c"
  2265 ;; Parameters:    Size  Location     Type
  2266 ;;  str             2   34[COMRAM] PTR unsigned char 
  2267 ;;		 -> STR_8(9), STR_7(10), STR_6(8), STR_5(15), 
  2268 ;;		 -> value_array@TC74$F213(4), value_array@LDR$F189(4), value_array(4), 
  2269 ;;  row             1   36[COMRAM] unsigned char 
  2270 ;;  col             1   37[COMRAM] unsigned char 
  2271 ;; Auto vars:     Size  Location     Type
  2272 ;;		None
  2273 ;; Return value:  Size  Location     Type
  2274 ;;                  1    wreg      void 
  2275 ;; Registers used:
  2276 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2277 ;; Tracked objects:
  2278 ;;		On entry : 0/0
  2279 ;;		On exit  : 0/0
  2280 ;;		Unchanged: 0/0
  2281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2282 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2285 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2286 ;;Total ram usage:        4 bytes
  2287 ;; Hardware stack levels used: 1
  2288 ;; Hardware stack levels required when called: 10
  2289 ;; This function calls:
  2290 ;;		_lcd_4bits_pos
  2291 ;;		_lcd_4bits_send_char_data
  2292 ;; This function is called by:
  2293 ;;		_print_HS1101_LCD
  2294 ;;		_print_bright_LCD
  2295 ;;		_print_temp_LCD
  2296 ;;		_main
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300                           	psect	text11
  2301   002ABE                     __ptext11:
  2302                           	callstack 0
  2303   002ABE                     _lcd_4bits_send_string_data_pos:
  2304                           	callstack 19
  2305   002ABE                     
  2306                           ;ECUAL/Char_LCD/char_lcd.c: 65:     lcd_4bits_pos(row, col);
  2307   002ABE  C026  F01F         	movff	lcd_4bits_send_string_data_pos@col,lcd_4bits_pos@column
  2308   002AC2  5025               	movf	lcd_4bits_send_string_data_pos@row^0,w,c
  2309   002AC4  EC44  F014         	call	_lcd_4bits_pos
  2310                           
  2311                           ;ECUAL/Char_LCD/char_lcd.c: 67:     while(*str){
  2312   002AC8  EF7B  F015         	goto	l6594
  2313   002ACC                     l6590:
  2314                           
  2315                           ;ECUAL/Char_LCD/char_lcd.c: 68:         lcd_4bits_send_char_data(*str++);
  2316   002ACC  C023  FFF6         	movff	lcd_4bits_send_string_data_pos@str,tblptrl
  2317   002AD0  C024  FFF7         	movff	lcd_4bits_send_string_data_pos@str+1,tblptrh
  2318   002AD4  0E00               	movlw	low (__smallconst shr (0+16))
  2319   002AD6  6EF8               	movwf	tblptru,c
  2320   002AD8  0E0F               	movlw	(high __ramtop+-1)
  2321   002ADA  64F7               	cpfsgt	tblptrh,c
  2322   002ADC  D003               	bra	u5427
  2323   002ADE  0008               	tblrd		*
  2324   002AE0  50F5               	movf	tablat,w,c
  2325   002AE2  D005               	bra	u5420
  2326   002AE4                     u5427:
  2327   002AE4  CFF6 FFE9          	movff	tblptrl,fsr0l
  2328   002AE8  CFF7 FFEA          	movff	tblptrh,fsr0h
  2329   002AEC  50EF               	movf	indf0,w,c
  2330   002AEE                     u5420:
  2331   002AEE  EC2A  F019         	call	_lcd_4bits_send_char_data
  2332   002AF2  4A23               	infsnz	lcd_4bits_send_string_data_pos@str^0,f,c
  2333   002AF4  2A24               	incf	(lcd_4bits_send_string_data_pos@str+1)^0,f,c
  2334   002AF6                     l6594:
  2335                           
  2336                           ;ECUAL/Char_LCD/char_lcd.c: 67:     while(*str){
  2337   002AF6  C023  FFF6         	movff	lcd_4bits_send_string_data_pos@str,tblptrl
  2338   002AFA  C024  FFF7         	movff	lcd_4bits_send_string_data_pos@str+1,tblptrh
  2339   002AFE  0E00               	movlw	low (__smallconst shr (0+16))
  2340   002B00  6EF8               	movwf	tblptru,c
  2341   002B02  0E0F               	movlw	(high __ramtop+-1)
  2342   002B04  64F7               	cpfsgt	tblptrh,c
  2343   002B06  D003               	bra	u5437
  2344   002B08  0008               	tblrd		*
  2345   002B0A  50F5               	movf	tablat,w,c
  2346   002B0C  D005               	bra	u5430
  2347   002B0E                     u5437:
  2348   002B0E  CFF6 FFE9          	movff	tblptrl,fsr0l
  2349   002B12  CFF7 FFEA          	movff	tblptrh,fsr0h
  2350   002B16  50EF               	movf	indf0,w,c
  2351   002B18                     u5430:
  2352   002B18  0900               	iorlw	0
  2353   002B1A  A4D8               	btfss	status,2,c
  2354   002B1C  EF92  F015         	goto	u5441
  2355   002B20  EF94  F015         	goto	u5440
  2356   002B24                     u5441:
  2357   002B24  EF66  F015         	goto	l6590
  2358   002B28                     u5440:
  2359   002B28  0012               	return		;funcret
  2360   002B2A                     __end_of_lcd_4bits_send_string_data_pos:
  2361                           	callstack 0
  2362                           
  2363 ;; *************** function _lcd_4bits_send_char_data_pos *****************
  2364 ;; Defined at:
  2365 ;;		line 57 in file "ECUAL/Char_LCD/char_lcd.c"
  2366 ;; Parameters:    Size  Location     Type
  2367 ;;  chr             1    wreg     unsigned char 
  2368 ;;  row             1   34[COMRAM] unsigned char 
  2369 ;;  col             1   35[COMRAM] unsigned char 
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;  chr             1   36[COMRAM] unsigned char 
  2372 ;; Return value:  Size  Location     Type
  2373 ;;                  1    wreg      void 
  2374 ;; Registers used:
  2375 ;;		wreg, status,2, status,0, cstack
  2376 ;; Tracked objects:
  2377 ;;		On entry : 0/0
  2378 ;;		On exit  : 0/0
  2379 ;;		Unchanged: 0/0
  2380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2381 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2382 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2384 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2385 ;;Total ram usage:        3 bytes
  2386 ;; Hardware stack levels used: 1
  2387 ;; Hardware stack levels required when called: 10
  2388 ;; This function calls:
  2389 ;;		_lcd_4bits_pos
  2390 ;;		_lcd_4bits_send_char_data
  2391 ;; This function is called by:
  2392 ;;		_print_HS1101_LCD
  2393 ;;		_print_bright_LCD
  2394 ;;		_print_temp_LCD
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           	psect	text12
  2399   003318                     __ptext12:
  2400                           	callstack 0
  2401   003318                     _lcd_4bits_send_char_data_pos:
  2402                           	callstack 19
  2403                           
  2404                           ;incstack = 0
  2405                           ;lcd_4bits_send_char_data_pos@chr stored from wreg
  2406   003318  6E25               	movwf	lcd_4bits_send_char_data_pos@chr^0,c
  2407   00331A                     
  2408                           ;ECUAL/Char_LCD/char_lcd.c: 59:     lcd_4bits_pos(row, col);
  2409   00331A  C024  F01F         	movff	lcd_4bits_send_char_data_pos@col,lcd_4bits_pos@column
  2410   00331E  5023               	movf	lcd_4bits_send_char_data_pos@row^0,w,c
  2411   003320  EC44  F014         	call	_lcd_4bits_pos
  2412                           
  2413                           ;ECUAL/Char_LCD/char_lcd.c: 60:     lcd_4bits_send_char_data(chr);
  2414   003324  5025               	movf	lcd_4bits_send_char_data_pos@chr^0,w,c
  2415   003326  EC2A  F019         	call	_lcd_4bits_send_char_data
  2416   00332A  0012               	return		;funcret
  2417   00332C                     __end_of_lcd_4bits_send_char_data_pos:
  2418                           	callstack 0
  2419                           
  2420 ;; *************** function _lcd_4bits_send_char_data *****************
  2421 ;; Defined at:
  2422 ;;		line 42 in file "ECUAL/Char_LCD/char_lcd.c"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;  chr             1    wreg     unsigned char 
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;  chr             1   29[COMRAM] unsigned char 
  2427 ;; Return value:  Size  Location     Type
  2428 ;;                  1    wreg      void 
  2429 ;; Registers used:
  2430 ;;		wreg, status,2, status,0, cstack
  2431 ;; Tracked objects:
  2432 ;;		On entry : 0/0
  2433 ;;		On exit  : 0/0
  2434 ;;		Unchanged: 0/0
  2435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2437 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2439 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2440 ;;Total ram usage:        1 bytes
  2441 ;; Hardware stack levels used: 1
  2442 ;; Hardware stack levels required when called: 8
  2443 ;; This function calls:
  2444 ;;		_lcd_4bits_send_enable
  2445 ;;		_lcd_send_4bits
  2446 ;; This function is called by:
  2447 ;;		_lcd_4bits_send_char_data_pos
  2448 ;;		_lcd_4bits_send_string_data_pos
  2449 ;;		_lcd_4bits_send_string
  2450 ;; This function uses a non-reentrant model
  2451 ;;
  2452                           
  2453                           	psect	text13
  2454   003254                     __ptext13:
  2455                           	callstack 0
  2456   003254                     _lcd_4bits_send_char_data:
  2457                           	callstack 20
  2458                           
  2459                           ;incstack = 0
  2460                           ;lcd_4bits_send_char_data@chr stored from wreg
  2461   003254  6E1E               	movwf	lcd_4bits_send_char_data@chr^0,c
  2462   003256  888C               	bsf	140,4,c	;volatile
  2463   003258                     
  2464                           ;ECUAL/Char_LCD/char_lcd.c: 44:     lcd_send_4bits((chr >> 4));
  2465   003258  381E               	swapf	lcd_4bits_send_char_data@chr^0,w,c
  2466   00325A  0B0F               	andlw	15
  2467   00325C  ECB8  F014         	call	_lcd_send_4bits
  2468   003260                     
  2469                           ;ECUAL/Char_LCD/char_lcd.c: 45:     lcd_4bits_send_enable();
  2470   003260  EC81  F019         	call	_lcd_4bits_send_enable	;wreg free
  2471   003264                     
  2472                           ;ECUAL/Char_LCD/char_lcd.c: 46:     lcd_send_4bits(chr);
  2473   003264  501E               	movf	lcd_4bits_send_char_data@chr^0,w,c
  2474   003266  ECB8  F014         	call	_lcd_send_4bits
  2475                           
  2476                           ;ECUAL/Char_LCD/char_lcd.c: 47:     lcd_4bits_send_enable();
  2477   00326A  EC81  F019         	call	_lcd_4bits_send_enable	;wreg free
  2478   00326E  0012               	return		;funcret
  2479   003270                     __end_of_lcd_4bits_send_char_data:
  2480                           	callstack 0
  2481                           
  2482 ;; *************** function _lcd_4bits_pos *****************
  2483 ;; Defined at:
  2484 ;;		line 85 in file "ECUAL/Char_LCD/char_lcd.c"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;  row             1    wreg     unsigned char 
  2487 ;;  column          1   30[COMRAM] unsigned char 
  2488 ;; Auto vars:     Size  Location     Type
  2489 ;;  row             1   33[COMRAM] unsigned char 
  2490 ;; Return value:  Size  Location     Type
  2491 ;;                  1    wreg      void 
  2492 ;; Registers used:
  2493 ;;		wreg, status,2, status,0, cstack
  2494 ;; Tracked objects:
  2495 ;;		On entry : 0/0
  2496 ;;		On exit  : 0/0
  2497 ;;		Unchanged: 0/0
  2498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2499 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2500 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2501 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2502 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2503 ;;Total ram usage:        4 bytes
  2504 ;; Hardware stack levels used: 1
  2505 ;; Hardware stack levels required when called: 9
  2506 ;; This function calls:
  2507 ;;		_lcd_4bits_send_command
  2508 ;; This function is called by:
  2509 ;;		_lcd_4bits_send_char_data_pos
  2510 ;;		_lcd_4bits_send_string_data_pos
  2511 ;; This function uses a non-reentrant model
  2512 ;;
  2513                           
  2514                           	psect	text14
  2515   002888                     __ptext14:
  2516                           	callstack 0
  2517   002888                     _lcd_4bits_pos:
  2518                           	callstack 19
  2519                           
  2520                           ;incstack = 0
  2521                           ;lcd_4bits_pos@row stored from wreg
  2522   002888  6E22               	movwf	lcd_4bits_pos@row^0,c
  2523   00288A                     
  2524                           ;ECUAL/Char_LCD/char_lcd.c: 86:     column--;
  2525   00288A  061F               	decf	lcd_4bits_pos@column^0,f,c
  2526                           
  2527                           ;ECUAL/Char_LCD/char_lcd.c: 87:     switch(row){
  2528   00288C  EF60  F014         	goto	l6538
  2529   002890                     l6528:
  2530   002890  501F               	movf	lcd_4bits_pos@column^0,w,c
  2531   002892  0F80               	addlw	128
  2532   002894  EC38  F019         	call	_lcd_4bits_send_command
  2533   002898  EF7D  F014         	goto	l65
  2534   00289C                     l6530:
  2535   00289C  501F               	movf	lcd_4bits_pos@column^0,w,c
  2536   00289E  0FC0               	addlw	192
  2537   0028A0  EC38  F019         	call	_lcd_4bits_send_command
  2538   0028A4  EF7D  F014         	goto	l65
  2539   0028A8                     l6532:
  2540   0028A8  501F               	movf	lcd_4bits_pos@column^0,w,c
  2541   0028AA  0F94               	addlw	148
  2542   0028AC  EC38  F019         	call	_lcd_4bits_send_command
  2543   0028B0  EF7D  F014         	goto	l65
  2544   0028B4                     l6534:
  2545   0028B4  501F               	movf	lcd_4bits_pos@column^0,w,c
  2546   0028B6  0FD4               	addlw	212
  2547   0028B8  EC38  F019         	call	_lcd_4bits_send_command
  2548   0028BC  EF7D  F014         	goto	l65
  2549   0028C0                     l6538:
  2550   0028C0  5022               	movf	lcd_4bits_pos@row^0,w,c
  2551   0028C2  6E20               	movwf	??_lcd_4bits_pos^0,c
  2552   0028C4  6A21               	clrf	(??_lcd_4bits_pos+1)^0,c
  2553                           
  2554                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2555                           ; Switch size 1, requested type "simple"
  2556                           ; Number of cases is 1, Range of values is 0 to 0
  2557                           ; switch strategies available:
  2558                           ; Name         Instructions Cycles
  2559                           ; simple_byte            4     3 (average)
  2560                           ;	Chosen strategy is simple_byte
  2561   0028C6  5021               	movf	(??_lcd_4bits_pos+1)^0,w,c
  2562   0028C8  0A00               	xorlw	0	; case 0
  2563   0028CA  B4D8               	btfsc	status,2,c
  2564   0028CC  EF6A  F014         	goto	l6850
  2565   0028D0  EF7D  F014         	goto	l65
  2566   0028D4                     l6850:
  2567                           
  2568                           ; Switch size 1, requested type "simple"
  2569                           ; Number of cases is 4, Range of values is 1 to 4
  2570                           ; switch strategies available:
  2571                           ; Name         Instructions Cycles
  2572                           ; simple_byte           13     7 (average)
  2573                           ;	Chosen strategy is simple_byte
  2574   0028D4  5020               	movf	??_lcd_4bits_pos^0,w,c
  2575   0028D6  0A01               	xorlw	1	; case 1
  2576   0028D8  B4D8               	btfsc	status,2,c
  2577   0028DA  EF48  F014         	goto	l6528
  2578   0028DE  0A03               	xorlw	3	; case 2
  2579   0028E0  B4D8               	btfsc	status,2,c
  2580   0028E2  EF4E  F014         	goto	l6530
  2581   0028E6  0A01               	xorlw	1	; case 3
  2582   0028E8  B4D8               	btfsc	status,2,c
  2583   0028EA  EF54  F014         	goto	l6532
  2584   0028EE  0A07               	xorlw	7	; case 4
  2585   0028F0  B4D8               	btfsc	status,2,c
  2586   0028F2  EF5A  F014         	goto	l6534
  2587   0028F6  EF7D  F014         	goto	l65
  2588   0028FA                     l65:
  2589   0028FA  0012               	return		;funcret
  2590   0028FC                     __end_of_lcd_4bits_pos:
  2591                           	callstack 0
  2592                           
  2593 ;; *************** function _convert_uint8_to_string *****************
  2594 ;; Defined at:
  2595 ;;		line 96 in file "ECUAL/Char_LCD/char_lcd.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;  value           1    wreg     unsigned char 
  2598 ;;  str             1   31[BANK0 ] PTR unsigned char 
  2599 ;;		 -> value_array@TC74$F213(4), value_array@LDR$F189(4), value_array(4), 
  2600 ;; Auto vars:     Size  Location     Type
  2601 ;;  value           1    0[BANK1 ] unsigned char 
  2602 ;;  TempStr         4    1[BANK1 ] unsigned char [4]
  2603 ;;  data            1    5[BANK1 ] unsigned char 
  2604 ;; Return value:  Size  Location     Type
  2605 ;;                  1    wreg      void 
  2606 ;; Registers used:
  2607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2608 ;; Tracked objects:
  2609 ;;		On entry : 0/0
  2610 ;;		On exit  : 0/0
  2611 ;;		Unchanged: 0/0
  2612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2613 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2614 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2616 ;;      Totals:         0       1       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2617 ;;Total ram usage:        7 bytes
  2618 ;; Hardware stack levels used: 1
  2619 ;; Hardware stack levels required when called: 12
  2620 ;; This function calls:
  2621 ;;		_memset
  2622 ;;		_sprintf
  2623 ;; This function is called by:
  2624 ;;		_print_HS1101_LCD
  2625 ;;		_print_bright_LCD
  2626 ;;		_print_temp_LCD
  2627 ;; This function uses a non-reentrant model
  2628 ;;
  2629                           
  2630                           	psect	text15
  2631   0025C6                     __ptext15:
  2632                           	callstack 0
  2633   0025C6                     _convert_uint8_to_string:
  2634                           	callstack 17
  2635                           
  2636                           ;incstack = 0
  2637                           ;convert_uint8_to_string@value stored from wreg
  2638   0025C6  0101               	movlb	1	; () banked
  2639   0025C8  6F00               	movwf	convert_uint8_to_string@value& (0+255),b
  2640   0025CA                     
  2641                           ;ECUAL/Char_LCD/char_lcd.c: 98:     uint8_t TempStr[4] = {0, 0, 0, 0};
  2642   0025CA  0E00               	movlw	0
  2643   0025CC  0101               	movlb	1	; () banked
  2644   0025CE  6F01               	movwf	convert_uint8_to_string@TempStr& (0+255),b
  2645   0025D0  0E00               	movlw	0
  2646   0025D2  6F02               	movwf	(convert_uint8_to_string@TempStr+1)& (0+255),b
  2647   0025D4  0E00               	movlw	0
  2648   0025D6  6F03               	movwf	(convert_uint8_to_string@TempStr+2)& (0+255),b
  2649   0025D8  0E00               	movlw	0
  2650   0025DA  6F04               	movwf	(convert_uint8_to_string@TempStr+3)& (0+255),b
  2651                           
  2652                           ;ECUAL/Char_LCD/char_lcd.c: 99:     uint8_t data = 0;
  2653   0025DC  0E00               	movlw	0
  2654   0025DE  6F05               	movwf	convert_uint8_to_string@data& (0+255),b
  2655   0025E0                     
  2656                           ; BSR set to: 1
  2657                           ;ECUAL/Char_LCD/char_lcd.c: 100:        memset(str, ' ', 3);
  2658   0025E0  C0F6  F01C         	movff	convert_uint8_to_string@str,memset@dest
  2659   0025E4  0E00               	movlw	0
  2660   0025E6  6E1E               	movwf	(memset@c+1)^0,c
  2661   0025E8  0E20               	movlw	32
  2662   0025EA  6E1D               	movwf	memset@c^0,c
  2663   0025EC  0E00               	movlw	0
  2664   0025EE  6E20               	movwf	(memset@n+1)^0,c
  2665   0025F0  0E03               	movlw	3
  2666   0025F2  6E1F               	movwf	memset@n^0,c
  2667   0025F4  EC13  F018         	call	_memset	;wreg free
  2668   0025F8                     
  2669                           ;ECUAL/Char_LCD/char_lcd.c: 101:        str[4] = '\0';
  2670   0025F8  0100               	movlb	0	; () banked
  2671   0025FA  51F6               	movf	convert_uint8_to_string@str& (0+255),w,b
  2672   0025FC  6ED9               	movwf	fsr2l,c
  2673   0025FE  6ADA               	clrf	fsr2h,c
  2674   002600  0E04               	movlw	4
  2675   002602  26D9               	addwf	fsr2l,f,c
  2676   002604  6ADF               	clrf	indf2,c
  2677   002606                     
  2678                           ; BSR set to: 0
  2679                           ;ECUAL/Char_LCD/char_lcd.c: 102:        sprintf((char *)TempStr, "%i" ,value);
  2680   002606  0E01               	movlw	low convert_uint8_to_string@TempStr
  2681   002608  6FE4               	movwf	sprintf@s& (0+255),b
  2682   00260A  0E01               	movlw	high convert_uint8_to_string@TempStr
  2683   00260C  6FE5               	movwf	(sprintf@s+1)& (0+255),b
  2684   00260E  0E78               	movlw	low STR_1
  2685   002610  6FE6               	movwf	sprintf@fmt& (0+255),b
  2686   002612  C100  F0E7         	movff	convert_uint8_to_string@value,?_sprintf+3
  2687   002616  6BE8               	clrf	(?_sprintf+4)& (0+255),b
  2688   002618  EC14  F017         	call	_sprintf	;wreg free
  2689                           
  2690                           ;ECUAL/Char_LCD/char_lcd.c: 103:        while(TempStr[data] != '\0'){
  2691   00261C  EF1F  F013         	goto	l6608
  2692   002620                     l6604:
  2693                           
  2694                           ; BSR set to: 1
  2695                           ;ECUAL/Char_LCD/char_lcd.c: 104:            str[data] = TempStr[data];
  2696   002620  0E01               	movlw	low convert_uint8_to_string@TempStr
  2697   002622  2505               	addwf	convert_uint8_to_string@data& (0+255),w,b
  2698   002624  6ED9               	movwf	fsr2l,c
  2699   002626  6ADA               	clrf	fsr2h,c
  2700   002628  0E01               	movlw	high convert_uint8_to_string@TempStr
  2701   00262A  22DA               	addwfc	fsr2h,f,c
  2702   00262C  0100               	movlb	0	; () banked
  2703   00262E  51F6               	movf	convert_uint8_to_string@str& (0+255),w,b
  2704   002630  0101               	movlb	1	; () banked
  2705   002632  2505               	addwf	convert_uint8_to_string@data& (0+255),w,b
  2706   002634  6EE1               	movwf	fsr1l,c
  2707   002636  6AE2               	clrf	fsr1h,c
  2708   002638  CFDF FFE7          	movff	indf2,indf1
  2709   00263C                     
  2710                           ; BSR set to: 1
  2711                           ;ECUAL/Char_LCD/char_lcd.c: 105:            data++;
  2712   00263C  2B05               	incf	convert_uint8_to_string@data& (0+255),f,b
  2713   00263E                     l6608:
  2714                           
  2715                           ;ECUAL/Char_LCD/char_lcd.c: 103:        while(TempStr[data] != '\0'){
  2716   00263E  0E01               	movlw	low convert_uint8_to_string@TempStr
  2717   002640  0101               	movlb	1	; () banked
  2718   002642  2505               	addwf	convert_uint8_to_string@data& (0+255),w,b
  2719   002644  6ED9               	movwf	fsr2l,c
  2720   002646  6ADA               	clrf	fsr2h,c
  2721   002648  0E01               	movlw	high convert_uint8_to_string@TempStr
  2722   00264A  22DA               	addwfc	fsr2h,f,c
  2723   00264C  50DF               	movf	indf2,w,c
  2724   00264E  A4D8               	btfss	status,2,c
  2725   002650  EF2C  F013         	goto	u5451
  2726   002654  EF2E  F013         	goto	u5450
  2727   002658                     u5451:
  2728   002658  EF10  F013         	goto	l6604
  2729   00265C                     u5450:
  2730   00265C                     
  2731                           ; BSR set to: 1
  2732   00265C  0012               	return		;funcret
  2733   00265E                     __end_of_convert_uint8_to_string:
  2734                           	callstack 0
  2735                           
  2736 ;; *************** function _sprintf *****************
  2737 ;; Defined at:
  2738 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;  s               2   13[BANK0 ] PTR unsigned char 
  2741 ;;		 -> convert_uint8_to_string@TempStr(4), 
  2742 ;;  fmt             1   15[BANK0 ] PTR const unsigned char 
  2743 ;;		 -> STR_1(3), 
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;  f              12   19[BANK0 ] struct _IO_FILE
  2746 ;;  ret             2    0        int 
  2747 ;;  ap              1   18[BANK0 ] PTR void [1]
  2748 ;;		 -> ?_sprintf(2), 
  2749 ;; Return value:  Size  Location     Type
  2750 ;;                  2   13[BANK0 ] int 
  2751 ;; Registers used:
  2752 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2758 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2759 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2761 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2762 ;;Total ram usage:       18 bytes
  2763 ;; Hardware stack levels used: 1
  2764 ;; Hardware stack levels required when called: 11
  2765 ;; This function calls:
  2766 ;;		_vfprintf
  2767 ;; This function is called by:
  2768 ;;		_convert_uint8_to_string
  2769 ;; This function uses a non-reentrant model
  2770 ;;
  2771                           
  2772                           	psect	text16
  2773   002E28                     __ptext16:
  2774                           	callstack 0
  2775   002E28                     _sprintf:
  2776                           	callstack 17
  2777   002E28  0EE7               	movlw	low (?_sprintf+3)
  2778   002E2A  0100               	movlb	0	; () banked
  2779   002E2C  6FE9               	movwf	sprintf@ap& (0+255),b
  2780   002E2E  C0E4  F0EA         	movff	sprintf@s,sprintf@f
  2781   002E32  C0E5  F0EB         	movff	sprintf@s+1,sprintf@f+1
  2782   002E36                     
  2783                           ; BSR set to: 0
  2784   002E36  0E00               	movlw	0
  2785   002E38  6FEE               	movwf	(sprintf@f+4)& (0+255),b
  2786   002E3A  0E00               	movlw	0
  2787   002E3C  6FED               	movwf	(sprintf@f+3)& (0+255),b
  2788   002E3E                     
  2789                           ; BSR set to: 0
  2790   002E3E  0E00               	movlw	0
  2791   002E40  6FF5               	movwf	(sprintf@f+11)& (0+255),b
  2792   002E42  0E00               	movlw	0
  2793   002E44  6FF4               	movwf	(sprintf@f+10)& (0+255),b
  2794   002E46                     
  2795                           ; BSR set to: 0
  2796   002E46  0EEA               	movlw	low sprintf@f
  2797   002E48  6FE1               	movwf	vfprintf@fp& (0+255),b
  2798   002E4A  C0E6  F0E2         	movff	sprintf@fmt,vfprintf@fmt
  2799   002E4E  0EE9               	movlw	low sprintf@ap
  2800   002E50  6FE3               	movwf	vfprintf@ap& (0+255),b
  2801   002E52  ECD1  F016         	call	_vfprintf	;wreg free
  2802   002E56  0100               	movlb	0	; () banked
  2803   002E58  51ED               	movf	(sprintf@f+3)& (0+255),w,b
  2804   002E5A  25E4               	addwf	sprintf@s& (0+255),w,b
  2805   002E5C  6ED9               	movwf	fsr2l,c
  2806   002E5E  51EE               	movf	(sprintf@f+4)& (0+255),w,b
  2807   002E60  21E5               	addwfc	(sprintf@s+1)& (0+255),w,b
  2808   002E62  6EDA               	movwf	fsr2h,c
  2809   002E64  6ADF               	clrf	indf2,c
  2810   002E66                     
  2811                           ; BSR set to: 0
  2812   002E66  0012               	return		;funcret
  2813   002E68                     __end_of_sprintf:
  2814                           	callstack 0
  2815                           
  2816 ;; *************** function _vfprintf *****************
  2817 ;; Defined at:
  2818 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2819 ;; Parameters:    Size  Location     Type
  2820 ;;  fp              1   10[BANK0 ] PTR struct _IO_FILE
  2821 ;;		 -> sprintf@f(12), 
  2822 ;;  fmt             1   11[BANK0 ] PTR const unsigned char 
  2823 ;;		 -> STR_1(3), 
  2824 ;;  ap              1   12[BANK0 ] PTR PTR void 
  2825 ;;		 -> sprintf@ap(1), 
  2826 ;; Auto vars:     Size  Location     Type
  2827 ;;  cfmt            1   38[COMRAM] PTR unsigned char 
  2828 ;;		 -> STR_1(3), 
  2829 ;; Return value:  Size  Location     Type
  2830 ;;                  2   10[BANK0 ] int 
  2831 ;; Registers used:
  2832 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2833 ;; Tracked objects:
  2834 ;;		On entry : 0/0
  2835 ;;		On exit  : 0/0
  2836 ;;		Unchanged: 0/0
  2837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2838 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2839 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2841 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2842 ;;Total ram usage:        4 bytes
  2843 ;; Hardware stack levels used: 1
  2844 ;; Hardware stack levels required when called: 10
  2845 ;; This function calls:
  2846 ;;		_vfpfcnvrt
  2847 ;; This function is called by:
  2848 ;;		_sprintf
  2849 ;; This function uses a non-reentrant model
  2850 ;;
  2851                           
  2852                           	psect	text17
  2853   002DA2                     __ptext17:
  2854                           	callstack 0
  2855   002DA2                     _vfprintf:
  2856                           	callstack 17
  2857   002DA2                     
  2858                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2859   002DA2  C0E2  F027         	movff	vfprintf@fmt,vfprintf@cfmt
  2860                           
  2861                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2862   002DA6  EFDE  F016         	goto	l6514
  2863   002DAA                     l6512:
  2864                           
  2865                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2866   002DAA  C0E1  F0D7         	movff	vfprintf@fp,vfpfcnvrt@fp
  2867   002DAE  0E27               	movlw	low vfprintf@cfmt
  2868   002DB0  0100               	movlb	0	; () banked
  2869   002DB2  6FD8               	movwf	vfpfcnvrt@fmt& (0+255),b
  2870   002DB4  C0E3  F0D9         	movff	vfprintf@ap,vfpfcnvrt@ap
  2871   002DB8  ECB5  F00C         	call	_vfpfcnvrt	;wreg free
  2872   002DBC                     l6514:
  2873                           
  2874                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2875   002DBC  C027  FFF6         	movff	vfprintf@cfmt,tblptrl
  2876   002DC0                     	if	1	;There is more than 1 active tblptr byte
  2877   002DC0  0E10               	movlw	high __smallconst
  2878   002DC2  6EF7               	movwf	tblptrh,c
  2879   002DC4                     	endif
  2880   002DC4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2881   002DC4  6AF8               	clrf	tblptru,c
  2882   002DC6                     	endif
  2883   002DC6                     	if	0	;tblptru may be non-zero
  2884   002DC6                     	endif
  2885   002DC6  0008               	tblrd		*
  2886   002DC8  50F5               	movf	tablat,w,c
  2887   002DCA  0900               	iorlw	0
  2888   002DCC  A4D8               	btfss	status,2,c
  2889   002DCE  EFEB  F016         	goto	u5401
  2890   002DD2  EFED  F016         	goto	u5400
  2891   002DD6                     u5401:
  2892   002DD6  EFD5  F016         	goto	l6512
  2893   002DDA                     u5400:
  2894   002DDA                     
  2895                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2896   002DDA  0E00               	movlw	0
  2897   002DDC  0100               	movlb	0	; () banked
  2898   002DDE  6FE2               	movwf	(?_vfprintf+1)& (0+255),b
  2899   002DE0  0E00               	movlw	0
  2900   002DE2  6FE1               	movwf	?_vfprintf& (0+255),b
  2901   002DE4                     
  2902                           ; BSR set to: 0
  2903   002DE4  0012               	return		;funcret
  2904   002DE6                     __end_of_vfprintf:
  2905                           	callstack 0
  2906                           
  2907 ;; *************** function _vfpfcnvrt *****************
  2908 ;; Defined at:
  2909 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2910 ;; Parameters:    Size  Location     Type
  2911 ;;  fp              1    0[BANK0 ] PTR struct _IO_FILE
  2912 ;;		 -> sprintf@f(12), 
  2913 ;;  fmt             1    1[BANK0 ] PTR PTR unsigned char 
  2914 ;;		 -> vfprintf@cfmt(1), 
  2915 ;;  ap              1    2[BANK0 ] PTR PTR void 
  2916 ;;		 -> sprintf@ap(1), 
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;  convarg         4    5[BANK0 ] struct .
  2919 ;;  c               1    9[BANK0 ] unsigned char 
  2920 ;;  cp              1    4[BANK0 ] PTR unsigned char 
  2921 ;;		 -> STR_1(3), 
  2922 ;;  done            1    3[BANK0 ] _Bool 
  2923 ;; Return value:  Size  Location     Type
  2924 ;;                  1    wreg      void 
  2925 ;; Registers used:
  2926 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2927 ;; Tracked objects:
  2928 ;;		On entry : 0/0
  2929 ;;		On exit  : 0/0
  2930 ;;		Unchanged: 0/0
  2931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2932 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2933 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2934 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2935 ;;      Totals:         1      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2936 ;;Total ram usage:       11 bytes
  2937 ;; Hardware stack levels used: 1
  2938 ;; Hardware stack levels required when called: 9
  2939 ;; This function calls:
  2940 ;;		___awdiv
  2941 ;;		___awmod
  2942 ;;		_abs
  2943 ;;		_fputc
  2944 ;; This function is called by:
  2945 ;;		_vfprintf
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           
  2949                           	psect	text18
  2950   00196A                     __ptext18:
  2951                           	callstack 0
  2952   00196A                     _vfpfcnvrt:
  2953                           	callstack 17
  2954   00196A                     
  2955                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2956   00196A  0100               	movlb	0	; () banked
  2957   00196C  51D8               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2958   00196E  6ED9               	movwf	fsr2l,c
  2959   001970  6ADA               	clrf	fsr2h,c
  2960   001972  CFDF FFF6          	movff	indf2,tblptrl
  2961   001976                     	if	1	;There is more than 1 active tblptr byte
  2962   001976  0E10               	movlw	high __smallconst
  2963   001978  6EF7               	movwf	tblptrh,c
  2964   00197A                     	endif
  2965   00197A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2966   00197A  6AF8               	clrf	tblptru,c
  2967   00197C                     	endif
  2968   00197C                     	if	0	;tblptru may be non-zero
  2969   00197C                     	endif
  2970   00197C  0008               	tblrd		*
  2971   00197E  50F5               	movf	tablat,w,c
  2972   001980  0A25               	xorlw	37
  2973   001982  A4D8               	btfss	status,2,c
  2974   001984  EFC6  F00C         	goto	u5301
  2975   001988  EFC8  F00C         	goto	u5300
  2976   00198C                     u5301:
  2977   00198C  EF86  F00D         	goto	l6498
  2978   001990                     u5300:
  2979   001990                     
  2980                           ; BSR set to: 0
  2981                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2982   001990  51D8               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2983   001992  6ED9               	movwf	fsr2l,c
  2984   001994  6ADA               	clrf	fsr2h,c
  2985   001996  2ADF               	incf	indf2,f,c
  2986   001998                     
  2987                           ; BSR set to: 0
  2988                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2989   001998  0E00               	movlw	0
  2990   00199A  6E29               	movwf	(_width+1)^0,c
  2991   00199C  0E00               	movlw	0
  2992   00199E  6E28               	movwf	_width^0,c
  2993   0019A0  C028  F02E         	movff	_width,_flags
  2994   0019A4                     
  2995                           ; BSR set to: 0
  2996                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2997   0019A4  682A               	setf	_prec^0,c
  2998   0019A6  682B               	setf	(_prec+1)^0,c
  2999   0019A8                     
  3000                           ; BSR set to: 0
  3001                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  3002   0019A8  51D8               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3003   0019AA  6ED9               	movwf	fsr2l,c
  3004   0019AC  6ADA               	clrf	fsr2h,c
  3005   0019AE  50DF               	movf	indf2,w,c
  3006   0019B0  6FDB               	movwf	vfpfcnvrt@cp& (0+255),b
  3007   0019B2                     
  3008                           ; BSR set to: 0
  3009                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3010   0019B2  C0DB  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3011   0019B6                     	if	1	;There is more than 1 active tblptr byte
  3012   0019B6  0E10               	movlw	high __smallconst
  3013   0019B8  6EF7               	movwf	tblptrh,c
  3014   0019BA                     	endif
  3015   0019BA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3016   0019BA  6AF8               	clrf	tblptru,c
  3017   0019BC                     	endif
  3018   0019BC                     	if	0	;tblptru may be non-zero
  3019   0019BC                     	endif
  3020   0019BC  0008               	tblrd		*
  3021   0019BE  50F5               	movf	tablat,w,c
  3022   0019C0  0A64               	xorlw	100
  3023   0019C2  B4D8               	btfsc	status,2,c
  3024   0019C4  EFE6  F00C         	goto	u5311
  3025   0019C8  EFE8  F00C         	goto	u5310
  3026   0019CC                     u5311:
  3027   0019CC  EFF7  F00C         	goto	l6468
  3028   0019D0                     u5310:
  3029   0019D0                     
  3030                           ; BSR set to: 0
  3031   0019D0  C0DB  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3032   0019D4                     	if	1	;There is more than 1 active tblptr byte
  3033   0019D4  0E10               	movlw	high __smallconst
  3034   0019D6  6EF7               	movwf	tblptrh,c
  3035   0019D8                     	endif
  3036   0019D8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3037   0019D8  6AF8               	clrf	tblptru,c
  3038   0019DA                     	endif
  3039   0019DA                     	if	0	;tblptru may be non-zero
  3040   0019DA                     	endif
  3041   0019DA  0008               	tblrd		*
  3042   0019DC  50F5               	movf	tablat,w,c
  3043   0019DE  0A69               	xorlw	105
  3044   0019E0  A4D8               	btfss	status,2,c
  3045   0019E2  EFF5  F00C         	goto	u5321
  3046   0019E6  EFF7  F00C         	goto	u5320
  3047   0019EA                     u5321:
  3048   0019EA  EF7F  F00D         	goto	l6494
  3049   0019EE                     u5320:
  3050   0019EE                     l6468:
  3051                           
  3052                           ; BSR set to: 0
  3053                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3054   0019EE  51D9               	movf	vfpfcnvrt@ap& (0+255),w,b
  3055   0019F0  6ED9               	movwf	fsr2l,c
  3056   0019F2  6ADA               	clrf	fsr2h,c
  3057   0019F4  0E02               	movlw	2
  3058   0019F6  26DF               	addwf	indf2,f,c
  3059   0019F8  5CDF               	subwf	indf2,w,c
  3060   0019FA  6ED9               	movwf	fsr2l,c
  3061   0019FC  6ADA               	clrf	fsr2h,c
  3062   0019FE  CFDE F0DC          	movff	postinc2,vfpfcnvrt@convarg
  3063   001A02  CFDE F0DD          	movff	postinc2,vfpfcnvrt@convarg+1
  3064   001A06                     
  3065                           ; BSR set to: 0
  3066                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  3067   001A06  51D8               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3068   001A08  6ED9               	movwf	fsr2l,c
  3069   001A0A  6ADA               	clrf	fsr2h,c
  3070   001A0C  29DB               	incf	vfpfcnvrt@cp& (0+255),w,b
  3071   001A0E  6EDF               	movwf	indf2,c
  3072   001A10                     
  3073                           ; BSR set to: 0
  3074                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  3075   001A10  0E20               	movlw	32
  3076   001A12  6FE0               	movwf	vfpfcnvrt@c& (0+255),b
  3077                           
  3078                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  3079   001A14  BFDD               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  3080   001A16  EF0F  F00D         	goto	u5331
  3081   001A1A  EF12  F00D         	goto	u5330
  3082   001A1E                     u5331:
  3083   001A1E  0E01               	movlw	1
  3084   001A20  EF13  F00D         	goto	u5340
  3085   001A24                     u5330:
  3086   001A24  0E00               	movlw	0
  3087   001A26                     u5340:
  3088   001A26  6FDA               	movwf	vfpfcnvrt@done& (0+255),b
  3089   001A28                     l6474:
  3090                           
  3091                           ; BSR set to: 0
  3092                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  3093   001A28  07E0               	decf	vfpfcnvrt@c& (0+255),f,b
  3094   001A2A  51E0               	movf	vfpfcnvrt@c& (0+255),w,b
  3095   001A2C  0F84               	addlw	low _dbuf
  3096   001A2E  6ED9               	movwf	fsr2l,c
  3097   001A30  6ADA               	clrf	fsr2h,c
  3098   001A32  C0DC  F01C         	movff	vfpfcnvrt@convarg,___awmod@dividend
  3099   001A36  C0DD  F01D         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  3100   001A3A  0E00               	movlw	0
  3101   001A3C  6E1F               	movwf	(___awmod@divisor+1)^0,c
  3102   001A3E  0E0A               	movlw	10
  3103   001A40  6E1E               	movwf	___awmod@divisor^0,c
  3104   001A42  ECF3  F010         	call	___awmod	;wreg free
  3105   001A46  C01C  F022         	movff	?___awmod,abs@a
  3106   001A4A  C01D  F023         	movff	?___awmod+1,abs@a+1
  3107   001A4E  ECE0  F017         	call	_abs	;wreg free
  3108   001A52  5022               	movf	?_abs^0,w,c
  3109   001A54  0F30               	addlw	48
  3110   001A56  6EDF               	movwf	indf2,c
  3111   001A58                     
  3112                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  3113   001A58  C0DC  F01C         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  3114   001A5C  C0DD  F01D         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  3115   001A60  0E00               	movlw	0
  3116   001A62  6E1F               	movwf	(___awdiv@divisor+1)^0,c
  3117   001A64  0E0A               	movlw	10
  3118   001A66  6E1E               	movwf	___awdiv@divisor^0,c
  3119   001A68  ECD2  F00F         	call	___awdiv	;wreg free
  3120   001A6C  C01C  F0DC         	movff	?___awdiv,vfpfcnvrt@convarg
  3121   001A70  C01D  F0DD         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  3122   001A74                     
  3123                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  3124   001A74  0100               	movlb	0	; () banked
  3125   001A76  51DC               	movf	vfpfcnvrt@convarg& (0+255),w,b
  3126   001A78  11DD               	iorwf	(vfpfcnvrt@convarg+1)& (0+255),w,b
  3127   001A7A  B4D8               	btfsc	status,2,c
  3128   001A7C  EF42  F00D         	goto	u5351
  3129   001A80  EF44  F00D         	goto	u5350
  3130   001A84                     u5351:
  3131   001A84  EF4C  F00D         	goto	l6482
  3132   001A88                     u5350:
  3133   001A88                     
  3134                           ; BSR set to: 0
  3135   001A88  51E0               	movf	vfpfcnvrt@c& (0+255),w,b
  3136   001A8A  A4D8               	btfss	status,2,c
  3137   001A8C  EF4A  F00D         	goto	u5361
  3138   001A90  EF4C  F00D         	goto	u5360
  3139   001A94                     u5361:
  3140   001A94  EF14  F00D         	goto	l6474
  3141   001A98                     u5360:
  3142   001A98                     l6482:
  3143                           
  3144                           ; BSR set to: 0
  3145                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  3146   001A98  51E0               	movf	vfpfcnvrt@c& (0+255),w,b
  3147   001A9A  B4D8               	btfsc	status,2,c
  3148   001A9C  EF52  F00D         	goto	u5371
  3149   001AA0  EF54  F00D         	goto	u5370
  3150   001AA4                     u5371:
  3151   001AA4  EF74  F00D         	goto	l6492
  3152   001AA8                     u5370:
  3153   001AA8                     
  3154                           ; BSR set to: 0
  3155   001AA8  51DA               	movf	vfpfcnvrt@done& (0+255),w,b
  3156   001AAA  B4D8               	btfsc	status,2,c
  3157   001AAC  EF5A  F00D         	goto	u5381
  3158   001AB0  EF5C  F00D         	goto	u5380
  3159   001AB4                     u5381:
  3160   001AB4  EF74  F00D         	goto	l6492
  3161   001AB8                     u5380:
  3162   001AB8                     
  3163                           ; BSR set to: 0
  3164                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  3165   001AB8  07E0               	decf	vfpfcnvrt@c& (0+255),f,b
  3166   001ABA  51E0               	movf	vfpfcnvrt@c& (0+255),w,b
  3167   001ABC  0F84               	addlw	low _dbuf
  3168   001ABE  6ED9               	movwf	fsr2l,c
  3169   001AC0  6ADA               	clrf	fsr2h,c
  3170   001AC2  0E2D               	movlw	45
  3171   001AC4  6EDF               	movwf	indf2,c
  3172   001AC6  EF74  F00D         	goto	l6492
  3173   001ACA                     l6488:
  3174                           
  3175                           ; BSR set to: 0
  3176                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  3177   001ACA  51E0               	movf	vfpfcnvrt@c& (0+255),w,b
  3178   001ACC  0F84               	addlw	low _dbuf
  3179   001ACE  6ED9               	movwf	fsr2l,c
  3180   001AD0  6ADA               	clrf	fsr2h,c
  3181   001AD2  50DF               	movf	indf2,w,c
  3182   001AD4  6E26               	movwf	??_vfpfcnvrt^0,c
  3183   001AD6  5026               	movf	??_vfpfcnvrt^0,w,c
  3184   001AD8  6E1C               	movwf	fputc@c^0,c
  3185   001ADA  6A1D               	clrf	(fputc@c+1)^0,c
  3186   001ADC  C0D7  F01E         	movff	vfpfcnvrt@fp,fputc@fp
  3187   001AE0  EC96  F010         	call	_fputc	;wreg free
  3188   001AE4  0100               	movlb	0	; () banked
  3189   001AE6  2BE0               	incf	vfpfcnvrt@c& (0+255),f,b
  3190   001AE8                     l6492:
  3191                           
  3192                           ; BSR set to: 0
  3193                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  3194   001AE8  0E20               	movlw	32
  3195   001AEA  19E0               	xorwf	vfpfcnvrt@c& (0+255),w,b
  3196   001AEC  A4D8               	btfss	status,2,c
  3197   001AEE  EF7B  F00D         	goto	u5391
  3198   001AF2  EF7D  F00D         	goto	u5390
  3199   001AF6                     u5391:
  3200   001AF6  EF65  F00D         	goto	l6488
  3201   001AFA                     u5390:
  3202   001AFA  EF98  F00D         	goto	l1716
  3203   001AFE                     l6494:
  3204                           
  3205                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3206   001AFE  0100               	movlb	0	; () banked
  3207   001B00  51D8               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3208   001B02  6ED9               	movwf	fsr2l,c
  3209   001B04  6ADA               	clrf	fsr2h,c
  3210   001B06  2ADF               	incf	indf2,f,c
  3211   001B08  EF98  F00D         	goto	l1716
  3212   001B0C                     l6498:
  3213                           
  3214                           ; BSR set to: 0
  3215                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3216   001B0C  51D8               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3217   001B0E  6ED9               	movwf	fsr2l,c
  3218   001B10  6ADA               	clrf	fsr2h,c
  3219   001B12  CFDF FFF6          	movff	indf2,tblptrl
  3220   001B16                     	if	1	;There is more than 1 active tblptr byte
  3221   001B16  0E10               	movlw	high __smallconst
  3222   001B18  6EF7               	movwf	tblptrh,c
  3223   001B1A                     	endif
  3224   001B1A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3225   001B1A  6AF8               	clrf	tblptru,c
  3226   001B1C                     	endif
  3227   001B1C                     	if	0	;tblptru may be non-zero
  3228   001B1C                     	endif
  3229   001B1C  0008               	tblrd		*
  3230   001B1E  50F5               	movf	tablat,w,c
  3231   001B20  6E1C               	movwf	fputc@c^0,c
  3232   001B22  6A1D               	clrf	(fputc@c+1)^0,c
  3233   001B24  C0D7  F01E         	movff	vfpfcnvrt@fp,fputc@fp
  3234   001B28  EC96  F010         	call	_fputc	;wreg free
  3235   001B2C  EF7F  F00D         	goto	l6494
  3236   001B30                     l1716:
  3237                           
  3238                           ; BSR set to: 0
  3239   001B30  0012               	return		;funcret
  3240   001B32                     __end_of_vfpfcnvrt:
  3241                           	callstack 0
  3242                           
  3243 ;; *************** function _fputc *****************
  3244 ;; Defined at:
  3245 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  3246 ;; Parameters:    Size  Location     Type
  3247 ;;  c               2   27[COMRAM] int 
  3248 ;;  fp              1   29[COMRAM] PTR struct _IO_FILE
  3249 ;;		 -> sprintf@f(12), 
  3250 ;; Auto vars:     Size  Location     Type
  3251 ;;		None
  3252 ;; Return value:  Size  Location     Type
  3253 ;;                  2   27[COMRAM] int 
  3254 ;; Registers used:
  3255 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3256 ;; Tracked objects:
  3257 ;;		On entry : 0/0
  3258 ;;		On exit  : 0/0
  3259 ;;		Unchanged: 0/0
  3260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3261 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3263 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3264 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3265 ;;Total ram usage:        8 bytes
  3266 ;; Hardware stack levels used: 1
  3267 ;; Hardware stack levels required when called: 8
  3268 ;; This function calls:
  3269 ;;		_putch
  3270 ;; This function is called by:
  3271 ;;		_vfpfcnvrt
  3272 ;; This function uses a non-reentrant model
  3273 ;;
  3274                           
  3275                           	psect	text19
  3276   00212C                     __ptext19:
  3277                           	callstack 0
  3278   00212C                     _fputc:
  3279                           	callstack 17
  3280   00212C  501E               	movf	fputc@fp^0,w,c
  3281   00212E  B4D8               	btfsc	status,2,c
  3282   002130  EF9C  F010         	goto	u5251
  3283   002134  EF9E  F010         	goto	u5250
  3284   002138                     u5251:
  3285   002138  EFA6  F010         	goto	l6434
  3286   00213C                     u5250:
  3287   00213C  501E               	movf	fputc@fp^0,w,c
  3288   00213E  A4D8               	btfss	status,2,c
  3289   002140  EFA4  F010         	goto	u5261
  3290   002144  EFA6  F010         	goto	u5260
  3291   002148                     u5261:
  3292   002148  EFAB  F010         	goto	l6436
  3293   00214C                     u5260:
  3294   00214C                     l6434:
  3295   00214C  501C               	movf	fputc@c^0,w,c
  3296   00214E  EC43  F01A         	call	_putch
  3297   002152  EFF2  F010         	goto	l1741
  3298   002156                     l6436:
  3299   002156  501E               	movf	fputc@fp^0,w,c
  3300   002158  6ED9               	movwf	fsr2l,c
  3301   00215A  6ADA               	clrf	fsr2h,c
  3302   00215C  0E0A               	movlw	10
  3303   00215E  26D9               	addwf	fsr2l,f,c
  3304   002160  50DE               	movf	postinc2,w,c
  3305   002162  10DE               	iorwf	postinc2,w,c
  3306   002164  B4D8               	btfsc	status,2,c
  3307   002166  EFB7  F010         	goto	u5271
  3308   00216A  EFB9  F010         	goto	u5270
  3309   00216E                     u5271:
  3310   00216E  EFD2  F010         	goto	l6440
  3311   002172                     u5270:
  3312   002172  501E               	movf	fputc@fp^0,w,c
  3313   002174  6ED9               	movwf	fsr2l,c
  3314   002176  6ADA               	clrf	fsr2h,c
  3315   002178  0E0A               	movlw	10
  3316   00217A  26D9               	addwf	fsr2l,f,c
  3317   00217C  501E               	movf	fputc@fp^0,w,c
  3318   00217E  6EE1               	movwf	fsr1l,c
  3319   002180  6AE2               	clrf	fsr1h,c
  3320   002182  0E03               	movlw	3
  3321   002184  26E1               	addwf	fsr1l,f,c
  3322   002186  50DE               	movf	postinc2,w,c
  3323   002188  5CE6               	subwf	postinc1,w,c
  3324   00218A  50E6               	movf	postinc1,w,c
  3325   00218C  0A80               	xorlw	128
  3326   00218E  6E23               	movwf	(??_fputc+4)^0,c
  3327   002190  50DE               	movf	postinc2,w,c
  3328   002192  0A80               	xorlw	128
  3329   002194  5823               	subwfb	(??_fputc+4)^0,w,c
  3330   002196  B0D8               	btfsc	status,0,c
  3331   002198  EFD0  F010         	goto	u5281
  3332   00219C  EFD2  F010         	goto	u5280
  3333   0021A0                     u5281:
  3334   0021A0  EFF2  F010         	goto	l1741
  3335   0021A4                     u5280:
  3336   0021A4                     l6440:
  3337   0021A4  501E               	movf	fputc@fp^0,w,c
  3338   0021A6  6ED9               	movwf	fsr2l,c
  3339   0021A8  6ADA               	clrf	fsr2h,c
  3340   0021AA  0E03               	movlw	3
  3341   0021AC  26D9               	addwf	fsr2l,f,c
  3342   0021AE  CFDE F01F          	movff	postinc2,??_fputc
  3343   0021B2  CFDD F020          	movff	postdec2,??_fputc+1
  3344   0021B6  501E               	movf	fputc@fp^0,w,c
  3345   0021B8  6ED9               	movwf	fsr2l,c
  3346   0021BA  6ADA               	clrf	fsr2h,c
  3347   0021BC  CFDE F021          	movff	postinc2,??_fputc+2
  3348   0021C0  CFDD F022          	movff	postdec2,??_fputc+3
  3349   0021C4  501F               	movf	??_fputc^0,w,c
  3350   0021C6  2421               	addwf	(??_fputc+2)^0,w,c
  3351   0021C8  6ED9               	movwf	fsr2l,c
  3352   0021CA  5020               	movf	(??_fputc+1)^0,w,c
  3353   0021CC  2022               	addwfc	(??_fputc+3)^0,w,c
  3354   0021CE  6EDA               	movwf	fsr2h,c
  3355   0021D0  C01C  FFDF         	movff	fputc@c,indf2
  3356   0021D4  501E               	movf	fputc@fp^0,w,c
  3357   0021D6  6ED9               	movwf	fsr2l,c
  3358   0021D8  6ADA               	clrf	fsr2h,c
  3359   0021DA  0E03               	movlw	3
  3360   0021DC  26D9               	addwf	fsr2l,f,c
  3361   0021DE  2ADE               	incf	postinc2,f,c
  3362   0021E0  0E00               	movlw	0
  3363   0021E2  22DD               	addwfc	postdec2,f,c
  3364   0021E4                     l1741:
  3365   0021E4  0012               	return		;funcret
  3366   0021E6                     __end_of_fputc:
  3367                           	callstack 0
  3368                           
  3369 ;; *************** function _putch *****************
  3370 ;; Defined at:
  3371 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  3372 ;; Parameters:    Size  Location     Type
  3373 ;;  c               1    wreg     unsigned char 
  3374 ;; Auto vars:     Size  Location     Type
  3375 ;;  c               1    0[COMRAM] unsigned char 
  3376 ;; Return value:  Size  Location     Type
  3377 ;;                  1    wreg      void 
  3378 ;; Registers used:
  3379 ;;		wreg
  3380 ;; Tracked objects:
  3381 ;;		On entry : 0/0
  3382 ;;		On exit  : 0/0
  3383 ;;		Unchanged: 0/0
  3384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3389 ;;Total ram usage:        0 bytes
  3390 ;; Hardware stack levels used: 1
  3391 ;; Hardware stack levels required when called: 7
  3392 ;; This function calls:
  3393 ;;		Nothing
  3394 ;; This function is called by:
  3395 ;;		_fputc
  3396 ;; This function uses a non-reentrant model
  3397 ;;
  3398                           
  3399                           	psect	text20
  3400   003486                     __ptext20:
  3401                           	callstack 0
  3402   003486                     _putch:
  3403                           	callstack 17
  3404   003486  0012               	return		;funcret
  3405   003488                     __end_of_putch:
  3406                           	callstack 0
  3407                           
  3408 ;; *************** function _abs *****************
  3409 ;; Defined at:
  3410 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  3411 ;; Parameters:    Size  Location     Type
  3412 ;;  a               2   33[COMRAM] int 
  3413 ;; Auto vars:     Size  Location     Type
  3414 ;;		None
  3415 ;; Return value:  Size  Location     Type
  3416 ;;                  2   33[COMRAM] int 
  3417 ;; Registers used:
  3418 ;;		wreg, status,2, status,0
  3419 ;; Tracked objects:
  3420 ;;		On entry : 0/0
  3421 ;;		On exit  : 0/0
  3422 ;;		Unchanged: 0/0
  3423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3424 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3426 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3427 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3428 ;;Total ram usage:        4 bytes
  3429 ;; Hardware stack levels used: 1
  3430 ;; Hardware stack levels required when called: 7
  3431 ;; This function calls:
  3432 ;;		Nothing
  3433 ;; This function is called by:
  3434 ;;		_vfpfcnvrt
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438                           	psect	text21
  3439   002FC0                     __ptext21:
  3440                           	callstack 0
  3441   002FC0                     _abs:
  3442                           	callstack 18
  3443   002FC0  BE23               	btfsc	(abs@a+1)^0,7,c
  3444   002FC2  EFE5  F017         	goto	u5291
  3445   002FC6  EFE7  F017         	goto	u5290
  3446   002FCA                     u5291:
  3447   002FCA  EFED  F017         	goto	l1726
  3448   002FCE                     u5290:
  3449   002FCE  C022  F022         	movff	abs@a,?_abs
  3450   002FD2  C023  F023         	movff	abs@a+1,?_abs+1
  3451   002FD6  EFF9  F017         	goto	l1729
  3452   002FDA                     l1726:
  3453   002FDA  C022  F024         	movff	abs@a,??_abs
  3454   002FDE  C023  F025         	movff	abs@a+1,??_abs+1
  3455   002FE2  1E24               	comf	??_abs^0,f,c
  3456   002FE4  1E25               	comf	(??_abs+1)^0,f,c
  3457   002FE6  4A24               	infsnz	??_abs^0,f,c
  3458   002FE8  2A25               	incf	(??_abs+1)^0,f,c
  3459   002FEA  C024  F022         	movff	??_abs,?_abs
  3460   002FEE  C025  F023         	movff	??_abs+1,?_abs+1
  3461   002FF2                     l1729:
  3462   002FF2  0012               	return		;funcret
  3463   002FF4                     __end_of_abs:
  3464                           	callstack 0
  3465                           
  3466 ;; *************** function ___awmod *****************
  3467 ;; Defined at:
  3468 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  3469 ;; Parameters:    Size  Location     Type
  3470 ;;  dividend        2   27[COMRAM] int 
  3471 ;;  divisor         2   29[COMRAM] int 
  3472 ;; Auto vars:     Size  Location     Type
  3473 ;;  sign            1   32[COMRAM] unsigned char 
  3474 ;;  counter         1   31[COMRAM] unsigned char 
  3475 ;; Return value:  Size  Location     Type
  3476 ;;                  2   27[COMRAM] int 
  3477 ;; Registers used:
  3478 ;;		wreg, status,2, status,0
  3479 ;; Tracked objects:
  3480 ;;		On entry : 0/0
  3481 ;;		On exit  : 0/0
  3482 ;;		Unchanged: 0/0
  3483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3484 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3485 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3487 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3488 ;;Total ram usage:        6 bytes
  3489 ;; Hardware stack levels used: 1
  3490 ;; Hardware stack levels required when called: 7
  3491 ;; This function calls:
  3492 ;;		Nothing
  3493 ;; This function is called by:
  3494 ;;		_print_HS1101_uart
  3495 ;;		_print_bright_uart
  3496 ;;		_print_temp_uart
  3497 ;;		_vfpfcnvrt
  3498 ;; This function uses a non-reentrant model
  3499 ;;
  3500                           
  3501                           	psect	text22
  3502   0021E6                     __ptext22:
  3503                           	callstack 0
  3504   0021E6                     ___awmod:
  3505                           	callstack 22
  3506   0021E6  0E00               	movlw	0
  3507   0021E8  6E21               	movwf	___awmod@sign^0,c
  3508   0021EA  BE1D               	btfsc	(___awmod@dividend+1)^0,7,c
  3509   0021EC  EFFC  F010         	goto	u5190
  3510   0021F0  EFFA  F010         	goto	u5191
  3511   0021F4                     u5191:
  3512   0021F4  EF02  F011         	goto	l6402
  3513   0021F8                     u5190:
  3514   0021F8  6C1C               	negf	___awmod@dividend^0,c
  3515   0021FA  1E1D               	comf	(___awmod@dividend+1)^0,f,c
  3516   0021FC  B0D8               	btfsc	status,0,c
  3517   0021FE  2A1D               	incf	(___awmod@dividend+1)^0,f,c
  3518   002200  0E01               	movlw	1
  3519   002202  6E21               	movwf	___awmod@sign^0,c
  3520   002204                     l6402:
  3521   002204  BE1F               	btfsc	(___awmod@divisor+1)^0,7,c
  3522   002206  EF09  F011         	goto	u5200
  3523   00220A  EF07  F011         	goto	u5201
  3524   00220E                     u5201:
  3525   00220E  EF0D  F011         	goto	l6406
  3526   002212                     u5200:
  3527   002212  6C1E               	negf	___awmod@divisor^0,c
  3528   002214  1E1F               	comf	(___awmod@divisor+1)^0,f,c
  3529   002216  B0D8               	btfsc	status,0,c
  3530   002218  2A1F               	incf	(___awmod@divisor+1)^0,f,c
  3531   00221A                     l6406:
  3532   00221A  501E               	movf	___awmod@divisor^0,w,c
  3533   00221C  101F               	iorwf	(___awmod@divisor+1)^0,w,c
  3534   00221E  B4D8               	btfsc	status,2,c
  3535   002220  EF14  F011         	goto	u5211
  3536   002224  EF16  F011         	goto	u5210
  3537   002228                     u5211:
  3538   002228  EF3A  F011         	goto	l6422
  3539   00222C                     u5210:
  3540   00222C  0E01               	movlw	1
  3541   00222E  6E20               	movwf	___awmod@counter^0,c
  3542   002230  EF1E  F011         	goto	l6412
  3543   002234                     l6410:
  3544   002234  90D8               	bcf	status,0,c
  3545   002236  361E               	rlcf	___awmod@divisor^0,f,c
  3546   002238  361F               	rlcf	(___awmod@divisor+1)^0,f,c
  3547   00223A  2A20               	incf	___awmod@counter^0,f,c
  3548   00223C                     l6412:
  3549   00223C  AE1F               	btfss	(___awmod@divisor+1)^0,7,c
  3550   00223E  EF23  F011         	goto	u5221
  3551   002242  EF25  F011         	goto	u5220
  3552   002246                     u5221:
  3553   002246  EF1A  F011         	goto	l6410
  3554   00224A                     u5220:
  3555   00224A                     l6414:
  3556   00224A  501E               	movf	___awmod@divisor^0,w,c
  3557   00224C  5C1C               	subwf	___awmod@dividend^0,w,c
  3558   00224E  501F               	movf	(___awmod@divisor+1)^0,w,c
  3559   002250  581D               	subwfb	(___awmod@dividend+1)^0,w,c
  3560   002252  A0D8               	btfss	status,0,c
  3561   002254  EF2E  F011         	goto	u5231
  3562   002258  EF30  F011         	goto	u5230
  3563   00225C                     u5231:
  3564   00225C  EF34  F011         	goto	l6418
  3565   002260                     u5230:
  3566   002260  501E               	movf	___awmod@divisor^0,w,c
  3567   002262  5E1C               	subwf	___awmod@dividend^0,f,c
  3568   002264  501F               	movf	(___awmod@divisor+1)^0,w,c
  3569   002266  5A1D               	subwfb	(___awmod@dividend+1)^0,f,c
  3570   002268                     l6418:
  3571   002268  90D8               	bcf	status,0,c
  3572   00226A  321F               	rrcf	(___awmod@divisor+1)^0,f,c
  3573   00226C  321E               	rrcf	___awmod@divisor^0,f,c
  3574   00226E  2E20               	decfsz	___awmod@counter^0,f,c
  3575   002270  EF25  F011         	goto	l6414
  3576   002274                     l6422:
  3577   002274  5021               	movf	___awmod@sign^0,w,c
  3578   002276  B4D8               	btfsc	status,2,c
  3579   002278  EF40  F011         	goto	u5241
  3580   00227C  EF42  F011         	goto	u5240
  3581   002280                     u5241:
  3582   002280  EF46  F011         	goto	l6426
  3583   002284                     u5240:
  3584   002284  6C1C               	negf	___awmod@dividend^0,c
  3585   002286  1E1D               	comf	(___awmod@dividend+1)^0,f,c
  3586   002288  B0D8               	btfsc	status,0,c
  3587   00228A  2A1D               	incf	(___awmod@dividend+1)^0,f,c
  3588   00228C                     l6426:
  3589   00228C  C01C  F01C         	movff	___awmod@dividend,?___awmod
  3590   002290  C01D  F01D         	movff	___awmod@dividend+1,?___awmod+1
  3591   002294  0012               	return		;funcret
  3592   002296                     __end_of___awmod:
  3593                           	callstack 0
  3594                           
  3595 ;; *************** function ___awdiv *****************
  3596 ;; Defined at:
  3597 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  3598 ;; Parameters:    Size  Location     Type
  3599 ;;  dividend        2   27[COMRAM] int 
  3600 ;;  divisor         2   29[COMRAM] int 
  3601 ;; Auto vars:     Size  Location     Type
  3602 ;;  quotient        2   33[COMRAM] int 
  3603 ;;  sign            1   32[COMRAM] unsigned char 
  3604 ;;  counter         1   31[COMRAM] unsigned char 
  3605 ;; Return value:  Size  Location     Type
  3606 ;;                  2   27[COMRAM] int 
  3607 ;; Registers used:
  3608 ;;		wreg, status,2, status,0
  3609 ;; Tracked objects:
  3610 ;;		On entry : 0/0
  3611 ;;		On exit  : 0/0
  3612 ;;		Unchanged: 0/0
  3613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3614 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3615 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3617 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3618 ;;Total ram usage:        8 bytes
  3619 ;; Hardware stack levels used: 1
  3620 ;; Hardware stack levels required when called: 7
  3621 ;; This function calls:
  3622 ;;		Nothing
  3623 ;; This function is called by:
  3624 ;;		_print_HS1101_uart
  3625 ;;		_print_bright_uart
  3626 ;;		_print_temp_uart
  3627 ;;		_vfpfcnvrt
  3628 ;; This function uses a non-reentrant model
  3629 ;;
  3630                           
  3631                           	psect	text23
  3632   001FA4                     __ptext23:
  3633                           	callstack 0
  3634   001FA4                     ___awdiv:
  3635                           	callstack 22
  3636   001FA4  0E00               	movlw	0
  3637   001FA6  6E21               	movwf	___awdiv@sign^0,c
  3638   001FA8  BE1F               	btfsc	(___awdiv@divisor+1)^0,7,c
  3639   001FAA  EFDB  F00F         	goto	u5130
  3640   001FAE  EFD9  F00F         	goto	u5131
  3641   001FB2                     u5131:
  3642   001FB2  EFE1  F00F         	goto	l6358
  3643   001FB6                     u5130:
  3644   001FB6  6C1E               	negf	___awdiv@divisor^0,c
  3645   001FB8  1E1F               	comf	(___awdiv@divisor+1)^0,f,c
  3646   001FBA  B0D8               	btfsc	status,0,c
  3647   001FBC  2A1F               	incf	(___awdiv@divisor+1)^0,f,c
  3648   001FBE  0E01               	movlw	1
  3649   001FC0  6E21               	movwf	___awdiv@sign^0,c
  3650   001FC2                     l6358:
  3651   001FC2  BE1D               	btfsc	(___awdiv@dividend+1)^0,7,c
  3652   001FC4  EFE8  F00F         	goto	u5140
  3653   001FC8  EFE6  F00F         	goto	u5141
  3654   001FCC                     u5141:
  3655   001FCC  EFEE  F00F         	goto	l6364
  3656   001FD0                     u5140:
  3657   001FD0  6C1C               	negf	___awdiv@dividend^0,c
  3658   001FD2  1E1D               	comf	(___awdiv@dividend+1)^0,f,c
  3659   001FD4  B0D8               	btfsc	status,0,c
  3660   001FD6  2A1D               	incf	(___awdiv@dividend+1)^0,f,c
  3661   001FD8  0E01               	movlw	1
  3662   001FDA  1A21               	xorwf	___awdiv@sign^0,f,c
  3663   001FDC                     l6364:
  3664   001FDC  0E00               	movlw	0
  3665   001FDE  6E23               	movwf	(___awdiv@quotient+1)^0,c
  3666   001FE0  0E00               	movlw	0
  3667   001FE2  6E22               	movwf	___awdiv@quotient^0,c
  3668   001FE4  501E               	movf	___awdiv@divisor^0,w,c
  3669   001FE6  101F               	iorwf	(___awdiv@divisor+1)^0,w,c
  3670   001FE8  B4D8               	btfsc	status,2,c
  3671   001FEA  EFF9  F00F         	goto	u5151
  3672   001FEE  EFFB  F00F         	goto	u5150
  3673   001FF2                     u5151:
  3674   001FF2  EF23  F010         	goto	l6386
  3675   001FF6                     u5150:
  3676   001FF6  0E01               	movlw	1
  3677   001FF8  6E20               	movwf	___awdiv@counter^0,c
  3678   001FFA  EF03  F010         	goto	l6372
  3679   001FFE                     l6370:
  3680   001FFE  90D8               	bcf	status,0,c
  3681   002000  361E               	rlcf	___awdiv@divisor^0,f,c
  3682   002002  361F               	rlcf	(___awdiv@divisor+1)^0,f,c
  3683   002004  2A20               	incf	___awdiv@counter^0,f,c
  3684   002006                     l6372:
  3685   002006  AE1F               	btfss	(___awdiv@divisor+1)^0,7,c
  3686   002008  EF08  F010         	goto	u5161
  3687   00200C  EF0A  F010         	goto	u5160
  3688   002010                     u5161:
  3689   002010  EFFF  F00F         	goto	l6370
  3690   002014                     u5160:
  3691   002014                     l6374:
  3692   002014  90D8               	bcf	status,0,c
  3693   002016  3622               	rlcf	___awdiv@quotient^0,f,c
  3694   002018  3623               	rlcf	(___awdiv@quotient+1)^0,f,c
  3695   00201A  501E               	movf	___awdiv@divisor^0,w,c
  3696   00201C  5C1C               	subwf	___awdiv@dividend^0,w,c
  3697   00201E  501F               	movf	(___awdiv@divisor+1)^0,w,c
  3698   002020  581D               	subwfb	(___awdiv@dividend+1)^0,w,c
  3699   002022  A0D8               	btfss	status,0,c
  3700   002024  EF16  F010         	goto	u5171
  3701   002028  EF18  F010         	goto	u5170
  3702   00202C                     u5171:
  3703   00202C  EF1D  F010         	goto	l6382
  3704   002030                     u5170:
  3705   002030  501E               	movf	___awdiv@divisor^0,w,c
  3706   002032  5E1C               	subwf	___awdiv@dividend^0,f,c
  3707   002034  501F               	movf	(___awdiv@divisor+1)^0,w,c
  3708   002036  5A1D               	subwfb	(___awdiv@dividend+1)^0,f,c
  3709   002038  8022               	bsf	___awdiv@quotient^0,0,c
  3710   00203A                     l6382:
  3711   00203A  90D8               	bcf	status,0,c
  3712   00203C  321F               	rrcf	(___awdiv@divisor+1)^0,f,c
  3713   00203E  321E               	rrcf	___awdiv@divisor^0,f,c
  3714   002040  2E20               	decfsz	___awdiv@counter^0,f,c
  3715   002042  EF0A  F010         	goto	l6374
  3716   002046                     l6386:
  3717   002046  5021               	movf	___awdiv@sign^0,w,c
  3718   002048  B4D8               	btfsc	status,2,c
  3719   00204A  EF29  F010         	goto	u5181
  3720   00204E  EF2B  F010         	goto	u5180
  3721   002052                     u5181:
  3722   002052  EF2F  F010         	goto	l6390
  3723   002056                     u5180:
  3724   002056  6C22               	negf	___awdiv@quotient^0,c
  3725   002058  1E23               	comf	(___awdiv@quotient+1)^0,f,c
  3726   00205A  B0D8               	btfsc	status,0,c
  3727   00205C  2A23               	incf	(___awdiv@quotient+1)^0,f,c
  3728   00205E                     l6390:
  3729   00205E  C022  F01C         	movff	___awdiv@quotient,?___awdiv
  3730   002062  C023  F01D         	movff	___awdiv@quotient+1,?___awdiv+1
  3731   002066  0012               	return		;funcret
  3732   002068                     __end_of___awdiv:
  3733                           	callstack 0
  3734                           
  3735 ;; *************** function _memset *****************
  3736 ;; Defined at:
  3737 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memset.c"
  3738 ;; Parameters:    Size  Location     Type
  3739 ;;  dest            1   27[COMRAM] PTR void 
  3740 ;;		 -> value_array@TC74$F213(4), value_array@LDR$F189(4), value_array(4), 
  3741 ;;  c               2   28[COMRAM] int 
  3742 ;;  n               2   30[COMRAM] unsigned int 
  3743 ;; Auto vars:     Size  Location     Type
  3744 ;;  p               1   32[COMRAM] PTR unsigned char 
  3745 ;;		 -> value_array@TC74$F213(4), value_array@LDR$F189(4), value_array(4), 
  3746 ;; Return value:  Size  Location     Type
  3747 ;;                  1    wreg      PTR void 
  3748 ;; Registers used:
  3749 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3750 ;; Tracked objects:
  3751 ;;		On entry : 0/0
  3752 ;;		On exit  : 0/0
  3753 ;;		Unchanged: 0/0
  3754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3755 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3756 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3758 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3759 ;;Total ram usage:        6 bytes
  3760 ;; Hardware stack levels used: 1
  3761 ;; Hardware stack levels required when called: 7
  3762 ;; This function calls:
  3763 ;;		Nothing
  3764 ;; This function is called by:
  3765 ;;		_convert_uint8_to_string
  3766 ;; This function uses a non-reentrant model
  3767 ;;
  3768                           
  3769                           	psect	text24
  3770   003026                     __ptext24:
  3771                           	callstack 0
  3772   003026                     _memset:
  3773                           	callstack 21
  3774   003026  C01C  F021         	movff	memset@dest,memset@p
  3775   00302A  EF1D  F018         	goto	l6550
  3776   00302E                     l6546:
  3777   00302E  5021               	movf	memset@p^0,w,c
  3778   003030  6ED9               	movwf	fsr2l,c
  3779   003032  6ADA               	clrf	fsr2h,c
  3780   003034  C01D  FFDF         	movff	memset@c,indf2
  3781   003038  2A21               	incf	memset@p^0,f,c
  3782   00303A                     l6550:
  3783   00303A  061F               	decf	memset@n^0,f,c
  3784   00303C  A0D8               	btfss	status,0,c
  3785   00303E  0620               	decf	(memset@n+1)^0,f,c
  3786   003040  281F               	incf	memset@n^0,w,c
  3787   003042  E106               	bnz	u5411
  3788   003044  2820               	incf	(memset@n+1)^0,w,c
  3789   003046  A4D8               	btfss	status,2,c
  3790   003048  EF28  F018         	goto	u5411
  3791   00304C  EF2A  F018         	goto	u5410
  3792   003050                     u5411:
  3793   003050  EF17  F018         	goto	l6546
  3794   003054                     u5410:
  3795   003054  0012               	return		;funcret
  3796   003056                     __end_of_memset:
  3797                           	callstack 0
  3798                           
  3799 ;; *************** function _SYSTEM_Initialize *****************
  3800 ;; Defined at:
  3801 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;		None
  3804 ;; Auto vars:     Size  Location     Type
  3805 ;;		None
  3806 ;; Return value:  Size  Location     Type
  3807 ;;                  1    wreg      void 
  3808 ;; Registers used:
  3809 ;;		wreg, status,2, status,0, cstack
  3810 ;; Tracked objects:
  3811 ;;		On entry : 0/0
  3812 ;;		On exit  : 0/0
  3813 ;;		Unchanged: 0/0
  3814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3819 ;;Total ram usage:        0 bytes
  3820 ;; Hardware stack levels used: 1
  3821 ;; Hardware stack levels required when called: 10
  3822 ;; This function calls:
  3823 ;;		_ADC_Initialize
  3824 ;;		_EUSART_Initialize
  3825 ;;		_I2C_Initialize
  3826 ;;		_INTERRUPT_Initialize
  3827 ;;		_OSCILLATOR_Initialize
  3828 ;;		_PIN_MANAGER_Initialize
  3829 ;;		_lcd_4bits_initialize
  3830 ;; This function is called by:
  3831 ;;		_main
  3832 ;; This function uses a non-reentrant model
  3833 ;;
  3834                           
  3835                           	psect	text25
  3836   003236                     __ptext25:
  3837                           	callstack 0
  3838   003236                     _SYSTEM_Initialize:
  3839                           	callstack 20
  3840   003236                     
  3841                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  3842   003236  EC27  F01A         	call	_INTERRUPT_Initialize	;wreg free
  3843   00323A                     
  3844                           ;mcc_generated_files/mcc.c: 54:     I2C_Initialize();
  3845   00323A  EC96  F019         	call	_I2C_Initialize	;wreg free
  3846   00323E                     
  3847                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  3848   00323E  ECFA  F017         	call	_PIN_MANAGER_Initialize	;wreg free
  3849   003242                     
  3850                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  3851   003242  ECCC  F019         	call	_OSCILLATOR_Initialize	;wreg free
  3852   003246                     
  3853                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  3854   003246  ECC3  F018         	call	_ADC_Initialize	;wreg free
  3855   00324A                     
  3856                           ;mcc_generated_files/mcc.c: 58:     EUSART_Initialize();
  3857   00324A  EC7E  F014         	call	_EUSART_Initialize	;wreg free
  3858   00324E                     
  3859                           ;mcc_generated_files/mcc.c: 59:     lcd_4bits_initialize();
  3860   00324E  EC2E  F016         	call	_lcd_4bits_initialize	;wreg free
  3861   003252  0012               	return		;funcret
  3862   003254                     __end_of_SYSTEM_Initialize:
  3863                           	callstack 0
  3864                           
  3865 ;; *************** function _lcd_4bits_initialize *****************
  3866 ;; Defined at:
  3867 ;;		line 16 in file "ECUAL/Char_LCD/char_lcd.c"
  3868 ;; Parameters:    Size  Location     Type
  3869 ;;		None
  3870 ;; Auto vars:     Size  Location     Type
  3871 ;;		None
  3872 ;; Return value:  Size  Location     Type
  3873 ;;                  1    wreg      void 
  3874 ;; Registers used:
  3875 ;;		wreg, status,2, status,0, cstack
  3876 ;; Tracked objects:
  3877 ;;		On entry : 0/0
  3878 ;;		On exit  : 0/0
  3879 ;;		Unchanged: 0/0
  3880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3883 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3884 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3885 ;;Total ram usage:        1 bytes
  3886 ;; Hardware stack levels used: 1
  3887 ;; Hardware stack levels required when called: 9
  3888 ;; This function calls:
  3889 ;;		_lcd_4bits_send_command
  3890 ;; This function is called by:
  3891 ;;		_SYSTEM_Initialize
  3892 ;; This function uses a non-reentrant model
  3893 ;;
  3894                           
  3895                           	psect	text26
  3896   002C5C                     __ptext26:
  3897                           	callstack 0
  3898   002C5C                     _lcd_4bits_initialize:
  3899                           	callstack 20
  3900   002C5C                     
  3901                           ;ECUAL/Char_LCD/char_lcd.c: 18:     _delay((unsigned long)((20)*(4000000/4000.0)));
  3902   002C5C  0E1A               	movlw	26
  3903   002C5E  6E1F               	movwf	??_lcd_4bits_initialize^0,c
  3904   002C60  0EF8               	movlw	248
  3905   002C62                     u5577:
  3906   002C62  2EE8               	decfsz	wreg,f,c
  3907   002C64  D7FE               	bra	u5577
  3908   002C66  2E1F               	decfsz	??_lcd_4bits_initialize^0,f,c
  3909   002C68  D7FC               	bra	u5577
  3910   002C6A  F000 F000          	nop2	
  3911   002C6E                     
  3912                           ;ECUAL/Char_LCD/char_lcd.c: 19:     lcd_4bits_send_command(0x38);
  3913   002C6E  0E38               	movlw	56
  3914   002C70  EC38  F019         	call	_lcd_4bits_send_command
  3915   002C74                     
  3916                           ;ECUAL/Char_LCD/char_lcd.c: 20:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3917   002C74  0E07               	movlw	7
  3918   002C76  6E1F               	movwf	??_lcd_4bits_initialize^0,c
  3919   002C78  0E7D               	movlw	125
  3920   002C7A                     u5587:
  3921   002C7A  2EE8               	decfsz	wreg,f,c
  3922   002C7C  D7FE               	bra	u5587
  3923   002C7E  2E1F               	decfsz	??_lcd_4bits_initialize^0,f,c
  3924   002C80  D7FC               	bra	u5587
  3925   002C82  0000               	nop	
  3926                           
  3927                           ;ECUAL/Char_LCD/char_lcd.c: 21:     lcd_4bits_send_command(0x38);
  3928   002C84  0E38               	movlw	56
  3929   002C86  EC38  F019         	call	_lcd_4bits_send_command
  3930   002C8A                     
  3931                           ;ECUAL/Char_LCD/char_lcd.c: 22:     _delay((unsigned long)((150)*(4000000/4000000.0)));
  3932   002C8A  0E32               	movlw	50
  3933   002C8C                     u5597:
  3934   002C8C  2EE8               	decfsz	wreg,f,c
  3935   002C8E  D7FE               	bra	u5597
  3936   002C90                     
  3937                           ;ECUAL/Char_LCD/char_lcd.c: 23:     lcd_4bits_send_command(0x38);
  3938   002C90  0E38               	movlw	56
  3939   002C92  EC38  F019         	call	_lcd_4bits_send_command
  3940   002C96                     
  3941                           ;ECUAL/Char_LCD/char_lcd.c: 24:     lcd_4bits_send_command(0x01);
  3942   002C96  0E01               	movlw	1
  3943   002C98  EC38  F019         	call	_lcd_4bits_send_command
  3944   002C9C                     
  3945                           ;ECUAL/Char_LCD/char_lcd.c: 25:     lcd_4bits_send_command(0x02);
  3946   002C9C  0E02               	movlw	2
  3947   002C9E  EC38  F019         	call	_lcd_4bits_send_command
  3948   002CA2                     
  3949                           ;ECUAL/Char_LCD/char_lcd.c: 26:     lcd_4bits_send_command(0x06);
  3950   002CA2  0E06               	movlw	6
  3951   002CA4  EC38  F019         	call	_lcd_4bits_send_command
  3952   002CA8                     
  3953                           ;ECUAL/Char_LCD/char_lcd.c: 27:     lcd_4bits_send_command(0x0C);
  3954   002CA8  0E0C               	movlw	12
  3955   002CAA  EC38  F019         	call	_lcd_4bits_send_command
  3956   002CAE                     
  3957                           ;ECUAL/Char_LCD/char_lcd.c: 28:     lcd_4bits_send_command(0x28);
  3958   002CAE  0E28               	movlw	40
  3959   002CB0  EC38  F019         	call	_lcd_4bits_send_command
  3960   002CB4                     
  3961                           ;ECUAL/Char_LCD/char_lcd.c: 29:     lcd_4bits_send_command(0x80);
  3962   002CB4  0E80               	movlw	128
  3963   002CB6  EC38  F019         	call	_lcd_4bits_send_command
  3964   002CBA  0012               	return		;funcret
  3965   002CBC                     __end_of_lcd_4bits_initialize:
  3966                           	callstack 0
  3967                           
  3968 ;; *************** function _lcd_4bits_send_command *****************
  3969 ;; Defined at:
  3970 ;;		line 33 in file "ECUAL/Char_LCD/char_lcd.c"
  3971 ;; Parameters:    Size  Location     Type
  3972 ;;  command         1    wreg     unsigned char 
  3973 ;; Auto vars:     Size  Location     Type
  3974 ;;  command         1   29[COMRAM] unsigned char 
  3975 ;; Return value:  Size  Location     Type
  3976 ;;                  1    wreg      void 
  3977 ;; Registers used:
  3978 ;;		wreg, status,2, status,0, cstack
  3979 ;; Tracked objects:
  3980 ;;		On entry : 0/0
  3981 ;;		On exit  : 0/0
  3982 ;;		Unchanged: 0/0
  3983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3985 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3987 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3988 ;;Total ram usage:        1 bytes
  3989 ;; Hardware stack levels used: 1
  3990 ;; Hardware stack levels required when called: 8
  3991 ;; This function calls:
  3992 ;;		_lcd_4bits_send_enable
  3993 ;;		_lcd_send_4bits
  3994 ;; This function is called by:
  3995 ;;		_lcd_4bits_initialize
  3996 ;;		_lcd_4bits_pos
  3997 ;;		_main
  3998 ;; This function uses a non-reentrant model
  3999 ;;
  4000                           
  4001                           	psect	text27
  4002   003270                     __ptext27:
  4003                           	callstack 0
  4004   003270                     _lcd_4bits_send_command:
  4005                           	callstack 19
  4006                           
  4007                           ;incstack = 0
  4008                           ;lcd_4bits_send_command@command stored from wreg
  4009   003270  6E1E               	movwf	lcd_4bits_send_command@command^0,c
  4010   003272  988C               	bcf	140,4,c	;volatile
  4011   003274                     
  4012                           ;ECUAL/Char_LCD/char_lcd.c: 35:     lcd_send_4bits(command >> 4);
  4013   003274  381E               	swapf	lcd_4bits_send_command@command^0,w,c
  4014   003276  0B0F               	andlw	15
  4015   003278  ECB8  F014         	call	_lcd_send_4bits
  4016   00327C                     
  4017                           ;ECUAL/Char_LCD/char_lcd.c: 36:     lcd_4bits_send_enable();
  4018   00327C  EC81  F019         	call	_lcd_4bits_send_enable	;wreg free
  4019   003280                     
  4020                           ;ECUAL/Char_LCD/char_lcd.c: 37:     lcd_send_4bits(command);
  4021   003280  501E               	movf	lcd_4bits_send_command@command^0,w,c
  4022   003282  ECB8  F014         	call	_lcd_send_4bits
  4023                           
  4024                           ;ECUAL/Char_LCD/char_lcd.c: 38:     lcd_4bits_send_enable();
  4025   003286  EC81  F019         	call	_lcd_4bits_send_enable	;wreg free
  4026   00328A  0012               	return		;funcret
  4027   00328C                     __end_of_lcd_4bits_send_command:
  4028                           	callstack 0
  4029                           
  4030 ;; *************** function _lcd_send_4bits *****************
  4031 ;; Defined at:
  4032 ;;		line 72 in file "ECUAL/Char_LCD/char_lcd.c"
  4033 ;; Parameters:    Size  Location     Type
  4034 ;;  data            1    wreg     unsigned char 
  4035 ;; Auto vars:     Size  Location     Type
  4036 ;;  data            1   28[COMRAM] unsigned char 
  4037 ;; Return value:  Size  Location     Type
  4038 ;;                  1    wreg      void 
  4039 ;; Registers used:
  4040 ;;		wreg, status,2, status,0
  4041 ;; Tracked objects:
  4042 ;;		On entry : 0/0
  4043 ;;		On exit  : 0/0
  4044 ;;		Unchanged: 0/0
  4045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4047 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4048 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4049 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4050 ;;Total ram usage:        2 bytes
  4051 ;; Hardware stack levels used: 1
  4052 ;; Hardware stack levels required when called: 7
  4053 ;; This function calls:
  4054 ;;		Nothing
  4055 ;; This function is called by:
  4056 ;;		_lcd_4bits_send_command
  4057 ;;		_lcd_4bits_send_char_data
  4058 ;; This function uses a non-reentrant model
  4059 ;;
  4060                           
  4061                           	psect	text28
  4062   002970                     __ptext28:
  4063                           	callstack 0
  4064   002970                     _lcd_send_4bits:
  4065                           	callstack 20
  4066                           
  4067                           ;incstack = 0
  4068                           ;lcd_send_4bits@data stored from wreg
  4069   002970  6E1D               	movwf	lcd_send_4bits@data^0,c
  4070   002972                     
  4071                           ;ECUAL/Char_LCD/char_lcd.c: 73:     LATDbits.LATD0 = (data >> 0) & 0x01;
  4072   002972  C01D  F01C         	movff	lcd_send_4bits@data,??_lcd_send_4bits
  4073   002976  0E01               	movlw	1
  4074   002978  161C               	andwf	??_lcd_send_4bits^0,f,c
  4075   00297A  508C               	movf	140,w,c	;volatile
  4076   00297C  181C               	xorwf	??_lcd_send_4bits^0,w,c
  4077   00297E  0BFE               	andlw	-2
  4078   002980  181C               	xorwf	??_lcd_send_4bits^0,w,c
  4079   002982  6E8C               	movwf	140,c	;volatile
  4080                           
  4081                           ;ECUAL/Char_LCD/char_lcd.c: 74:     LATDbits.LATD1 = (data >> 1) & 0x01;
  4082   002984  C01D  F01C         	movff	lcd_send_4bits@data,??_lcd_send_4bits
  4083   002988  90D8               	bcf	status,0,c
  4084   00298A  321C               	rrcf	??_lcd_send_4bits^0,f,c
  4085   00298C  0E01               	movlw	1
  4086   00298E  161C               	andwf	??_lcd_send_4bits^0,f,c
  4087   002990  461C               	rlncf	??_lcd_send_4bits^0,f,c
  4088   002992  508C               	movf	140,w,c	;volatile
  4089   002994  181C               	xorwf	??_lcd_send_4bits^0,w,c
  4090   002996  0BFD               	andlw	-3
  4091   002998  181C               	xorwf	??_lcd_send_4bits^0,w,c
  4092   00299A  6E8C               	movwf	140,c	;volatile
  4093                           
  4094                           ;ECUAL/Char_LCD/char_lcd.c: 75:     LATDbits.LATD2 = (data >> 2) & 0x01;
  4095   00299C  C01D  F01C         	movff	lcd_send_4bits@data,??_lcd_send_4bits
  4096   0029A0  90D8               	bcf	status,0,c
  4097   0029A2  321C               	rrcf	??_lcd_send_4bits^0,f,c
  4098   0029A4  90D8               	bcf	status,0,c
  4099   0029A6  321C               	rrcf	??_lcd_send_4bits^0,f,c
  4100   0029A8  0E01               	movlw	1
  4101   0029AA  161C               	andwf	??_lcd_send_4bits^0,f,c
  4102   0029AC  461C               	rlncf	??_lcd_send_4bits^0,f,c
  4103   0029AE  461C               	rlncf	??_lcd_send_4bits^0,f,c
  4104   0029B0  508C               	movf	140,w,c	;volatile
  4105   0029B2  181C               	xorwf	??_lcd_send_4bits^0,w,c
  4106   0029B4  0BFB               	andlw	-5
  4107   0029B6  181C               	xorwf	??_lcd_send_4bits^0,w,c
  4108   0029B8  6E8C               	movwf	140,c	;volatile
  4109                           
  4110                           ;ECUAL/Char_LCD/char_lcd.c: 76:     LATDbits.LATD3 = (data >> 3) & 0x01;
  4111   0029BA  C01D  F01C         	movff	lcd_send_4bits@data,??_lcd_send_4bits
  4112   0029BE  90D8               	bcf	status,0,c
  4113   0029C0  321C               	rrcf	??_lcd_send_4bits^0,f,c
  4114   0029C2  90D8               	bcf	status,0,c
  4115   0029C4  321C               	rrcf	??_lcd_send_4bits^0,f,c
  4116   0029C6  90D8               	bcf	status,0,c
  4117   0029C8  321C               	rrcf	??_lcd_send_4bits^0,f,c
  4118   0029CA  0E01               	movlw	1
  4119   0029CC  161C               	andwf	??_lcd_send_4bits^0,f,c
  4120   0029CE  461C               	rlncf	??_lcd_send_4bits^0,f,c
  4121   0029D0  461C               	rlncf	??_lcd_send_4bits^0,f,c
  4122   0029D2  461C               	rlncf	??_lcd_send_4bits^0,f,c
  4123   0029D4  508C               	movf	140,w,c	;volatile
  4124   0029D6  181C               	xorwf	??_lcd_send_4bits^0,w,c
  4125   0029D8  0BF7               	andlw	-9
  4126   0029DA  181C               	xorwf	??_lcd_send_4bits^0,w,c
  4127   0029DC  6E8C               	movwf	140,c	;volatile
  4128   0029DE  0012               	return		;funcret
  4129   0029E0                     __end_of_lcd_send_4bits:
  4130                           	callstack 0
  4131                           
  4132 ;; *************** function _lcd_4bits_send_enable *****************
  4133 ;; Defined at:
  4134 ;;		line 79 in file "ECUAL/Char_LCD/char_lcd.c"
  4135 ;; Parameters:    Size  Location     Type
  4136 ;;		None
  4137 ;; Auto vars:     Size  Location     Type
  4138 ;;		None
  4139 ;; Return value:  Size  Location     Type
  4140 ;;                  1    wreg      void 
  4141 ;; Registers used:
  4142 ;;		wreg
  4143 ;; Tracked objects:
  4144 ;;		On entry : 0/0
  4145 ;;		On exit  : 0/0
  4146 ;;		Unchanged: 0/0
  4147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4150 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4151 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4152 ;;Total ram usage:        1 bytes
  4153 ;; Hardware stack levels used: 1
  4154 ;; Hardware stack levels required when called: 7
  4155 ;; This function calls:
  4156 ;;		Nothing
  4157 ;; This function is called by:
  4158 ;;		_lcd_4bits_send_command
  4159 ;;		_lcd_4bits_send_char_data
  4160 ;; This function uses a non-reentrant model
  4161 ;;
  4162                           
  4163                           	psect	text29
  4164   003302                     __ptext29:
  4165                           	callstack 0
  4166   003302                     _lcd_4bits_send_enable:
  4167                           	callstack 20
  4168   003302  8A8C               	bsf	140,5,c	;volatile
  4169   003304                     
  4170                           ;ECUAL/Char_LCD/char_lcd.c: 81:     _delay((unsigned long)((5)*(4000000/4000.0)));
  4171   003304  0E07               	movlw	7
  4172   003306  6E1C               	movwf	??_lcd_4bits_send_enable^0,c
  4173   003308  0E7D               	movlw	125
  4174   00330A                     u5607:
  4175   00330A  2EE8               	decfsz	wreg,f,c
  4176   00330C  D7FE               	bra	u5607
  4177   00330E  2E1C               	decfsz	??_lcd_4bits_send_enable^0,f,c
  4178   003310  D7FC               	bra	u5607
  4179   003312  0000               	nop	
  4180   003314  9A8C               	bcf	140,5,c	;volatile
  4181   003316  0012               	return		;funcret
  4182   003318                     __end_of_lcd_4bits_send_enable:
  4183                           	callstack 0
  4184                           
  4185 ;; *************** function _PIN_MANAGER_Initialize *****************
  4186 ;; Defined at:
  4187 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4188 ;; Parameters:    Size  Location     Type
  4189 ;;		None
  4190 ;; Auto vars:     Size  Location     Type
  4191 ;;		None
  4192 ;; Return value:  Size  Location     Type
  4193 ;;                  1    wreg      void 
  4194 ;; Registers used:
  4195 ;;		wreg, status,2
  4196 ;; Tracked objects:
  4197 ;;		On entry : 0/0
  4198 ;;		On exit  : 0/0
  4199 ;;		Unchanged: 0/0
  4200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4205 ;;Total ram usage:        0 bytes
  4206 ;; Hardware stack levels used: 1
  4207 ;; Hardware stack levels required when called: 7
  4208 ;; This function calls:
  4209 ;;		Nothing
  4210 ;; This function is called by:
  4211 ;;		_SYSTEM_Initialize
  4212 ;; This function uses a non-reentrant model
  4213 ;;
  4214                           
  4215                           	psect	text30
  4216   002FF4                     __ptext30:
  4217                           	callstack 0
  4218   002FF4                     _PIN_MANAGER_Initialize:
  4219                           	callstack 22
  4220   002FF4                     
  4221                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  4222   002FF4  0E00               	movlw	0
  4223   002FF6  6E8D               	movwf	141,c	;volatile
  4224                           
  4225                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  4226   002FF8  0E00               	movlw	0
  4227   002FFA  6E8C               	movwf	140,c	;volatile
  4228                           
  4229                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  4230   002FFC  0E00               	movlw	0
  4231   002FFE  6E89               	movwf	137,c	;volatile
  4232                           
  4233                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  4234   003000  0E00               	movlw	0
  4235   003002  6E8A               	movwf	138,c	;volatile
  4236                           
  4237                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  4238   003004  0E00               	movlw	0
  4239   003006  6E8B               	movwf	139,c	;volatile
  4240                           
  4241                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  4242   003008  0E07               	movlw	7
  4243   00300A  6E96               	movwf	150,c	;volatile
  4244   00300C                     
  4245                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  4246   00300C  6892               	setf	146,c	;volatile
  4247   00300E                     
  4248                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  4249   00300E  6893               	setf	147,c	;volatile
  4250                           
  4251                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBC;
  4252   003010  0EBC               	movlw	188
  4253   003012  6E94               	movwf	148,c	;volatile
  4254                           
  4255                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x00;
  4256   003014  0E00               	movlw	0
  4257   003016  6E95               	movwf	149,c	;volatile
  4258   003018                     
  4259                           ;mcc_generated_files/pin_manager.c: 78:     ANSEL = 0xFF;
  4260   003018  687E               	setf	126,c	;volatile
  4261                           
  4262                           ;mcc_generated_files/pin_manager.c: 79:     ANSELH = 0x1F;
  4263   00301A  0E1F               	movlw	31
  4264   00301C  6E7F               	movwf	127,c	;volatile
  4265                           
  4266                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
  4267   00301E  0E00               	movlw	0
  4268   003020  6E7C               	movwf	124,c	;volatile
  4269   003022                     
  4270                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
  4271   003022  8EF1               	bsf	241,7,c	;volatile
  4272   003024  0012               	return		;funcret
  4273   003026                     __end_of_PIN_MANAGER_Initialize:
  4274                           	callstack 0
  4275                           
  4276 ;; *************** function _OSCILLATOR_Initialize *****************
  4277 ;; Defined at:
  4278 ;;		line 62 in file "mcc_generated_files/mcc.c"
  4279 ;; Parameters:    Size  Location     Type
  4280 ;;		None
  4281 ;; Auto vars:     Size  Location     Type
  4282 ;;		None
  4283 ;; Return value:  Size  Location     Type
  4284 ;;                  1    wreg      void 
  4285 ;; Registers used:
  4286 ;;		wreg, status,2
  4287 ;; Tracked objects:
  4288 ;;		On entry : 0/0
  4289 ;;		On exit  : 0/0
  4290 ;;		Unchanged: 0/0
  4291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4296 ;;Total ram usage:        0 bytes
  4297 ;; Hardware stack levels used: 1
  4298 ;; Hardware stack levels required when called: 7
  4299 ;; This function calls:
  4300 ;;		Nothing
  4301 ;; This function is called by:
  4302 ;;		_SYSTEM_Initialize
  4303 ;; This function uses a non-reentrant model
  4304 ;;
  4305                           
  4306                           	psect	text31
  4307   003398                     __ptext31:
  4308                           	callstack 0
  4309   003398                     _OSCILLATOR_Initialize:
  4310                           	callstack 22
  4311   003398                     
  4312                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x30;
  4313   003398  0E30               	movlw	48
  4314   00339A  6ED3               	movwf	211,c	;volatile
  4315                           
  4316                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x00;
  4317   00339C  0E00               	movlw	0
  4318   00339E  6E9B               	movwf	155,c	;volatile
  4319   0033A0  0012               	return		;funcret
  4320   0033A2                     __end_of_OSCILLATOR_Initialize:
  4321                           	callstack 0
  4322                           
  4323 ;; *************** function _INTERRUPT_Initialize *****************
  4324 ;; Defined at:
  4325 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4326 ;; Parameters:    Size  Location     Type
  4327 ;;		None
  4328 ;; Auto vars:     Size  Location     Type
  4329 ;;		None
  4330 ;; Return value:  Size  Location     Type
  4331 ;;                  1    wreg      void 
  4332 ;; Registers used:
  4333 ;;		None
  4334 ;; Tracked objects:
  4335 ;;		On entry : 0/0
  4336 ;;		On exit  : 0/0
  4337 ;;		Unchanged: 0/0
  4338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4343 ;;Total ram usage:        0 bytes
  4344 ;; Hardware stack levels used: 1
  4345 ;; Hardware stack levels required when called: 7
  4346 ;; This function calls:
  4347 ;;		Nothing
  4348 ;; This function is called by:
  4349 ;;		_SYSTEM_Initialize
  4350 ;; This function uses a non-reentrant model
  4351 ;;
  4352                           
  4353                           	psect	text32
  4354   00344E                     __ptext32:
  4355                           	callstack 0
  4356   00344E                     _INTERRUPT_Initialize:
  4357                           	callstack 22
  4358   00344E                     
  4359                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  4360   00344E  9ED0               	bcf	208,7,c	;volatile
  4361   003450  0012               	return		;funcret
  4362   003452                     __end_of_INTERRUPT_Initialize:
  4363                           	callstack 0
  4364                           
  4365 ;; *************** function _I2C_Initialize *****************
  4366 ;; Defined at:
  4367 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  4368 ;; Parameters:    Size  Location     Type
  4369 ;;		None
  4370 ;; Auto vars:     Size  Location     Type
  4371 ;;		None
  4372 ;; Return value:  Size  Location     Type
  4373 ;;                  1    wreg      void 
  4374 ;; Registers used:
  4375 ;;		wreg, status,2
  4376 ;; Tracked objects:
  4377 ;;		On entry : 0/0
  4378 ;;		On exit  : 0/0
  4379 ;;		Unchanged: 0/0
  4380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4385 ;;Total ram usage:        0 bytes
  4386 ;; Hardware stack levels used: 1
  4387 ;; Hardware stack levels required when called: 7
  4388 ;; This function calls:
  4389 ;;		Nothing
  4390 ;; This function is called by:
  4391 ;;		_SYSTEM_Initialize
  4392 ;; This function uses a non-reentrant model
  4393 ;;
  4394                           
  4395                           	psect	text33
  4396   00332C                     __ptext33:
  4397                           	callstack 0
  4398   00332C                     _I2C_Initialize:
  4399                           	callstack 22
  4400   00332C                     
  4401                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0x80;
  4402   00332C  0E80               	movlw	128
  4403   00332E  6EC7               	movwf	199,c	;volatile
  4404                           
  4405                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
  4406   003330  0E08               	movlw	8
  4407   003332  6EC6               	movwf	198,c	;volatile
  4408                           
  4409                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
  4410   003334  0E00               	movlw	0
  4411   003336  6EC5               	movwf	197,c	;volatile
  4412                           
  4413                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x09;
  4414   003338  0E09               	movlw	9
  4415   00333A  6EC8               	movwf	200,c	;volatile
  4416   00333C                     
  4417                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
  4418   00333C  9AC6               	bcf	198,5,c	;volatile
  4419   00333E  0012               	return		;funcret
  4420   003340                     __end_of_I2C_Initialize:
  4421                           	callstack 0
  4422                           
  4423 ;; *************** function _EUSART_Initialize *****************
  4424 ;; Defined at:
  4425 ;;		line 88 in file "mcc_generated_files/eusart.c"
  4426 ;; Parameters:    Size  Location     Type
  4427 ;;		None
  4428 ;; Auto vars:     Size  Location     Type
  4429 ;;		None
  4430 ;; Return value:  Size  Location     Type
  4431 ;;                  1    wreg      void 
  4432 ;; Registers used:
  4433 ;;		wreg, status,2, status,0, cstack
  4434 ;; Tracked objects:
  4435 ;;		On entry : 0/0
  4436 ;;		On exit  : 0/0
  4437 ;;		Unchanged: 0/0
  4438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4443 ;;Total ram usage:        0 bytes
  4444 ;; Hardware stack levels used: 1
  4445 ;; Hardware stack levels required when called: 8
  4446 ;; This function calls:
  4447 ;;		_EUSART_SetErrorHandler
  4448 ;;		_EUSART_SetFramingErrorHandler
  4449 ;;		_EUSART_SetOverrunErrorHandler
  4450 ;;		_EUSART_SetRxInterruptHandler
  4451 ;;		_EUSART_SetTxInterruptHandler
  4452 ;; This function is called by:
  4453 ;;		_SYSTEM_Initialize
  4454 ;; This function uses a non-reentrant model
  4455 ;;
  4456                           
  4457                           	psect	text34
  4458   0028FC                     __ptext34:
  4459                           	callstack 0
  4460   0028FC                     _EUSART_Initialize:
  4461                           	callstack 21
  4462   0028FC                     
  4463                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RC1IE = 0;
  4464   0028FC  9A9D               	bcf	157,5,c	;volatile
  4465   0028FE                     
  4466                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  4467   0028FE  0E96               	movlw	low _EUSART_Receive_ISR
  4468   002900  6E1C               	movwf	EUSART_SetRxInterruptHandler@interruptHandler^0,c
  4469   002902  0E22               	movlw	high _EUSART_Receive_ISR
  4470   002904  6E1D               	movwf	(EUSART_SetRxInterruptHandler@interruptHandler+1)^0,c
  4471   002906  ECD6  F019         	call	_EUSART_SetRxInterruptHandler	;wreg free
  4472   00290A                     
  4473                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TX1IE = 0;
  4474   00290A  989D               	bcf	157,4,c	;volatile
  4475                           
  4476                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  4477   00290C  0EA8               	movlw	low _EUSART_Transmit_ISR
  4478   00290E  6E1C               	movwf	EUSART_SetTxInterruptHandler@interruptHandler^0,c
  4479   002910  0E2E               	movlw	high _EUSART_Transmit_ISR
  4480   002912  6E1D               	movwf	(EUSART_SetTxInterruptHandler@interruptHandler+1)^0,c
  4481   002914  ECD1  F019         	call	_EUSART_SetTxInterruptHandler	;wreg free
  4482   002918                     
  4483                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x18;
  4484   002918  0E18               	movlw	24
  4485   00291A  6EB8               	movwf	184,c	;volatile
  4486   00291C                     
  4487                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  4488   00291C  0E90               	movlw	144
  4489   00291E  6EAB               	movwf	171,c	;volatile
  4490   002920                     
  4491                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  4492   002920  0E24               	movlw	36
  4493   002922  6EAC               	movwf	172,c	;volatile
  4494   002924                     
  4495                           ;mcc_generated_files/eusart.c: 107:     SPBRG = 0x67;
  4496   002924  0E67               	movlw	103
  4497   002926  6EAF               	movwf	175,c	;volatile
  4498   002928                     
  4499                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x00;
  4500   002928  0E00               	movlw	0
  4501   00292A  6EB0               	movwf	176,c	;volatile
  4502   00292C                     
  4503                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  4504   00292C  0E88               	movlw	low _EUSART_DefaultFramingErrorHandler
  4505   00292E  6E1C               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^0,c
  4506   002930  0E34               	movlw	high _EUSART_DefaultFramingErrorHandler
  4507   002932  6E1D               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^0,c
  4508   002934  ECE0  F019         	call	_EUSART_SetFramingErrorHandler	;wreg free
  4509   002938                     
  4510                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  4511   002938  0E42               	movlw	low _EUSART_DefaultOverrunErrorHandler
  4512   00293A  6E1C               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^0,c
  4513   00293C  0E34               	movlw	high _EUSART_DefaultOverrunErrorHandler
  4514   00293E  6E1D               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^0,c
  4515   002940  ECDB  F019         	call	_EUSART_SetOverrunErrorHandler	;wreg free
  4516   002944                     
  4517                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  4518   002944  0E48               	movlw	low _EUSART_DefaultErrorHandler
  4519   002946  6E1C               	movwf	EUSART_SetErrorHandler@interruptHandler^0,c
  4520   002948  0E34               	movlw	high _EUSART_DefaultErrorHandler
  4521   00294A  6E1D               	movwf	(EUSART_SetErrorHandler@interruptHandler+1)^0,c
  4522   00294C  ECE5  F019         	call	_EUSART_SetErrorHandler	;wreg free
  4523                           
  4524                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  4525   002950  0E00               	movlw	0
  4526   002952  6E2F               	movwf	_eusartRxLastError^0,c	;volatile
  4527                           
  4528                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  4529   002954  0E00               	movlw	0
  4530   002956  6E35               	movwf	_eusartTxHead^0,c	;volatile
  4531                           
  4532                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  4533   002958  0E00               	movlw	0
  4534   00295A  6E34               	movwf	_eusartTxTail^0,c	;volatile
  4535                           
  4536                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  4537   00295C  0E08               	movlw	8
  4538   00295E  6E33               	movwf	_eusartTxBufferRemaining^0,c	;volatile
  4539                           
  4540                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  4541   002960  0E00               	movlw	0
  4542   002962  6E32               	movwf	_eusartRxHead^0,c	;volatile
  4543                           
  4544                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  4545   002964  0E00               	movlw	0
  4546   002966  6E31               	movwf	_eusartRxTail^0,c	;volatile
  4547                           
  4548                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  4549   002968  0E00               	movlw	0
  4550   00296A  6E30               	movwf	_eusartRxCount^0,c	;volatile
  4551   00296C                     
  4552                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RC1IE = 1;
  4553   00296C  8A9D               	bsf	157,5,c	;volatile
  4554   00296E  0012               	return		;funcret
  4555   002970                     __end_of_EUSART_Initialize:
  4556                           	callstack 0
  4557                           
  4558 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  4559 ;; Defined at:
  4560 ;;		line 276 in file "mcc_generated_files/eusart.c"
  4561 ;; Parameters:    Size  Location     Type
  4562 ;;  interruptHan    2   27[COMRAM] PTR FTN()void 
  4563 ;;		 -> EUSART_Transmit_ISR(1), 
  4564 ;; Auto vars:     Size  Location     Type
  4565 ;;		None
  4566 ;; Return value:  Size  Location     Type
  4567 ;;                  1    wreg      void 
  4568 ;; Registers used:
  4569 ;;		wreg, status,2, status,0
  4570 ;; Tracked objects:
  4571 ;;		On entry : 0/0
  4572 ;;		On exit  : 0/0
  4573 ;;		Unchanged: 0/0
  4574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4575 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4578 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4579 ;;Total ram usage:        2 bytes
  4580 ;; Hardware stack levels used: 1
  4581 ;; Hardware stack levels required when called: 7
  4582 ;; This function calls:
  4583 ;;		Nothing
  4584 ;; This function is called by:
  4585 ;;		_EUSART_Initialize
  4586 ;; This function uses a non-reentrant model
  4587 ;;
  4588                           
  4589                           	psect	text35
  4590   0033A2                     __ptext35:
  4591                           	callstack 0
  4592   0033A2                     _EUSART_SetTxInterruptHandler:
  4593                           	callstack 21
  4594   0033A2                     
  4595                           ;mcc_generated_files/eusart.c: 277:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  4596   0033A2  C01C  F042         	movff	EUSART_SetTxInterruptHandler@interruptHandler,_EUSART_TxDefaultInterruptHandler
  4597   0033A6  C01D  F043         	movff	EUSART_SetTxInterruptHandler@interruptHandler+1,_EUSART_TxDefaultInterruptHandler
      +                          +1
  4598   0033AA  0012               	return		;funcret
  4599   0033AC                     __end_of_EUSART_SetTxInterruptHandler:
  4600                           	callstack 0
  4601                           
  4602 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  4603 ;; Defined at:
  4604 ;;		line 280 in file "mcc_generated_files/eusart.c"
  4605 ;; Parameters:    Size  Location     Type
  4606 ;;  interruptHan    2   27[COMRAM] PTR FTN()void 
  4607 ;;		 -> EUSART_Receive_ISR(1), 
  4608 ;; Auto vars:     Size  Location     Type
  4609 ;;		None
  4610 ;; Return value:  Size  Location     Type
  4611 ;;                  1    wreg      void 
  4612 ;; Registers used:
  4613 ;;		wreg, status,2, status,0
  4614 ;; Tracked objects:
  4615 ;;		On entry : 0/0
  4616 ;;		On exit  : 0/0
  4617 ;;		Unchanged: 0/0
  4618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4619 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4622 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4623 ;;Total ram usage:        2 bytes
  4624 ;; Hardware stack levels used: 1
  4625 ;; Hardware stack levels required when called: 7
  4626 ;; This function calls:
  4627 ;;		Nothing
  4628 ;; This function is called by:
  4629 ;;		_EUSART_Initialize
  4630 ;; This function uses a non-reentrant model
  4631 ;;
  4632                           
  4633                           	psect	text36
  4634   0033AC                     __ptext36:
  4635                           	callstack 0
  4636   0033AC                     _EUSART_SetRxInterruptHandler:
  4637                           	callstack 21
  4638   0033AC                     
  4639                           ;mcc_generated_files/eusart.c: 281:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  4640   0033AC  C01C  F0FE         	movff	EUSART_SetRxInterruptHandler@interruptHandler,_EUSART_RxDefaultInterruptHandler
  4641   0033B0  C01D  F0FF         	movff	EUSART_SetRxInterruptHandler@interruptHandler+1,_EUSART_RxDefaultInterruptHandler
      +                          +1
  4642   0033B4  0012               	return		;funcret
  4643   0033B6                     __end_of_EUSART_SetRxInterruptHandler:
  4644                           	callstack 0
  4645                           
  4646 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  4647 ;; Defined at:
  4648 ;;		line 268 in file "mcc_generated_files/eusart.c"
  4649 ;; Parameters:    Size  Location     Type
  4650 ;;  interruptHan    2   27[COMRAM] PTR FTN()void 
  4651 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  4652 ;; Auto vars:     Size  Location     Type
  4653 ;;		None
  4654 ;; Return value:  Size  Location     Type
  4655 ;;                  1    wreg      void 
  4656 ;; Registers used:
  4657 ;;		wreg, status,2, status,0
  4658 ;; Tracked objects:
  4659 ;;		On entry : 0/0
  4660 ;;		On exit  : 0/0
  4661 ;;		Unchanged: 0/0
  4662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4663 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4666 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4667 ;;Total ram usage:        2 bytes
  4668 ;; Hardware stack levels used: 1
  4669 ;; Hardware stack levels required when called: 7
  4670 ;; This function calls:
  4671 ;;		Nothing
  4672 ;; This function is called by:
  4673 ;;		_EUSART_Initialize
  4674 ;; This function uses a non-reentrant model
  4675 ;;
  4676                           
  4677                           	psect	text37
  4678   0033B6                     __ptext37:
  4679                           	callstack 0
  4680   0033B6                     _EUSART_SetOverrunErrorHandler:
  4681                           	callstack 21
  4682   0033B6                     
  4683                           ;mcc_generated_files/eusart.c: 269:     EUSART_OverrunErrorHandler = interruptHandler;
  4684   0033B6  C01C  F0FA         	movff	EUSART_SetOverrunErrorHandler@interruptHandler,_EUSART_OverrunErrorHandler
  4685   0033BA  C01D  F0FB         	movff	EUSART_SetOverrunErrorHandler@interruptHandler+1,_EUSART_OverrunErrorHandler+1
  4686   0033BE  0012               	return		;funcret
  4687   0033C0                     __end_of_EUSART_SetOverrunErrorHandler:
  4688                           	callstack 0
  4689                           
  4690 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  4691 ;; Defined at:
  4692 ;;		line 264 in file "mcc_generated_files/eusart.c"
  4693 ;; Parameters:    Size  Location     Type
  4694 ;;  interruptHan    2   27[COMRAM] PTR FTN()void 
  4695 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  4696 ;; Auto vars:     Size  Location     Type
  4697 ;;		None
  4698 ;; Return value:  Size  Location     Type
  4699 ;;                  1    wreg      void 
  4700 ;; Registers used:
  4701 ;;		wreg, status,2, status,0
  4702 ;; Tracked objects:
  4703 ;;		On entry : 0/0
  4704 ;;		On exit  : 0/0
  4705 ;;		Unchanged: 0/0
  4706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4707 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4710 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4711 ;;Total ram usage:        2 bytes
  4712 ;; Hardware stack levels used: 1
  4713 ;; Hardware stack levels required when called: 7
  4714 ;; This function calls:
  4715 ;;		Nothing
  4716 ;; This function is called by:
  4717 ;;		_EUSART_Initialize
  4718 ;; This function uses a non-reentrant model
  4719 ;;
  4720                           
  4721                           	psect	text38
  4722   0033C0                     __ptext38:
  4723                           	callstack 0
  4724   0033C0                     _EUSART_SetFramingErrorHandler:
  4725                           	callstack 21
  4726   0033C0                     
  4727                           ;mcc_generated_files/eusart.c: 265:     EUSART_FramingErrorHandler = interruptHandler;
  4728   0033C0  C01C  F0FC         	movff	EUSART_SetFramingErrorHandler@interruptHandler,_EUSART_FramingErrorHandler
  4729   0033C4  C01D  F0FD         	movff	EUSART_SetFramingErrorHandler@interruptHandler+1,_EUSART_FramingErrorHandler+1
  4730   0033C8  0012               	return		;funcret
  4731   0033CA                     __end_of_EUSART_SetFramingErrorHandler:
  4732                           	callstack 0
  4733                           
  4734 ;; *************** function _EUSART_SetErrorHandler *****************
  4735 ;; Defined at:
  4736 ;;		line 272 in file "mcc_generated_files/eusart.c"
  4737 ;; Parameters:    Size  Location     Type
  4738 ;;  interruptHan    2   27[COMRAM] PTR FTN()void 
  4739 ;;		 -> EUSART_DefaultErrorHandler(1), 
  4740 ;; Auto vars:     Size  Location     Type
  4741 ;;		None
  4742 ;; Return value:  Size  Location     Type
  4743 ;;                  1    wreg      void 
  4744 ;; Registers used:
  4745 ;;		wreg, status,2, status,0
  4746 ;; Tracked objects:
  4747 ;;		On entry : 0/0
  4748 ;;		On exit  : 0/0
  4749 ;;		Unchanged: 0/0
  4750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4751 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4754 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4755 ;;Total ram usage:        2 bytes
  4756 ;; Hardware stack levels used: 1
  4757 ;; Hardware stack levels required when called: 7
  4758 ;; This function calls:
  4759 ;;		Nothing
  4760 ;; This function is called by:
  4761 ;;		_EUSART_Initialize
  4762 ;; This function uses a non-reentrant model
  4763 ;;
  4764                           
  4765                           	psect	text39
  4766   0033CA                     __ptext39:
  4767                           	callstack 0
  4768   0033CA                     _EUSART_SetErrorHandler:
  4769                           	callstack 21
  4770   0033CA                     
  4771                           ;mcc_generated_files/eusart.c: 273:     EUSART_ErrorHandler = interruptHandler;
  4772   0033CA  C01C  F0F8         	movff	EUSART_SetErrorHandler@interruptHandler,_EUSART_ErrorHandler
  4773   0033CE  C01D  F0F9         	movff	EUSART_SetErrorHandler@interruptHandler+1,_EUSART_ErrorHandler+1
  4774   0033D2  0012               	return		;funcret
  4775   0033D4                     __end_of_EUSART_SetErrorHandler:
  4776                           	callstack 0
  4777                           
  4778 ;; *************** function _ADC_Initialize *****************
  4779 ;; Defined at:
  4780 ;;		line 62 in file "mcc_generated_files/adc.c"
  4781 ;; Parameters:    Size  Location     Type
  4782 ;;		None
  4783 ;; Auto vars:     Size  Location     Type
  4784 ;;		None
  4785 ;; Return value:  Size  Location     Type
  4786 ;;                  1    wreg      void 
  4787 ;; Registers used:
  4788 ;;		wreg, status,2, status,0, cstack
  4789 ;; Tracked objects:
  4790 ;;		On entry : 0/0
  4791 ;;		On exit  : 0/0
  4792 ;;		Unchanged: 0/0
  4793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4798 ;;Total ram usage:        0 bytes
  4799 ;; Hardware stack levels used: 1
  4800 ;; Hardware stack levels required when called: 8
  4801 ;; This function calls:
  4802 ;;		_ADC_SetInterruptHandler
  4803 ;; This function is called by:
  4804 ;;		_SYSTEM_Initialize
  4805 ;; This function uses a non-reentrant model
  4806 ;;
  4807                           
  4808                           	psect	text40
  4809   003186                     __ptext40:
  4810                           	callstack 0
  4811   003186                     _ADC_Initialize:
  4812                           	callstack 21
  4813   003186                     
  4814                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
  4815   003186  0E00               	movlw	0
  4816   003188  6EC1               	movwf	193,c	;volatile
  4817                           
  4818                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x84;
  4819   00318A  0E84               	movlw	132
  4820   00318C  6EC0               	movwf	192,c	;volatile
  4821                           
  4822                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
  4823   00318E  0E00               	movlw	0
  4824   003190  6EC3               	movwf	195,c	;volatile
  4825                           
  4826                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  4827   003192  0E00               	movlw	0
  4828   003194  6EC4               	movwf	196,c	;volatile
  4829                           
  4830                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x01;
  4831   003196  0E01               	movlw	1
  4832   003198  6EC2               	movwf	194,c	;volatile
  4833   00319A                     
  4834                           ;mcc_generated_files/adc.c: 82:     PIE1bits.ADIE = 1;
  4835   00319A  8C9D               	bsf	157,6,c	;volatile
  4836   00319C                     
  4837                           ;mcc_generated_files/adc.c: 85:     ADC_SetInterruptHandler(ADC_DefaultInterruptHandler)
      +                          ;
  4838   00319C  0E8A               	movlw	low _ADC_DefaultInterruptHandler
  4839   00319E  6E1C               	movwf	ADC_SetInterruptHandler@InterruptHandler^0,c
  4840   0031A0  0E34               	movlw	high _ADC_DefaultInterruptHandler
  4841   0031A2  6E1D               	movwf	(ADC_SetInterruptHandler@InterruptHandler+1)^0,c
  4842   0031A4  ECEA  F019         	call	_ADC_SetInterruptHandler	;wreg free
  4843   0031A8  0012               	return		;funcret
  4844   0031AA                     __end_of_ADC_Initialize:
  4845                           	callstack 0
  4846                           
  4847 ;; *************** function _ADC_SetInterruptHandler *****************
  4848 ;; Defined at:
  4849 ;;		line 151 in file "mcc_generated_files/adc.c"
  4850 ;; Parameters:    Size  Location     Type
  4851 ;;  InterruptHan    2   27[COMRAM] PTR FTN()void 
  4852 ;;		 -> ADC_DefaultInterruptHandler(1), 
  4853 ;; Auto vars:     Size  Location     Type
  4854 ;;		None
  4855 ;; Return value:  Size  Location     Type
  4856 ;;                  1    wreg      void 
  4857 ;; Registers used:
  4858 ;;		wreg, status,2, status,0
  4859 ;; Tracked objects:
  4860 ;;		On entry : 0/0
  4861 ;;		On exit  : 0/0
  4862 ;;		Unchanged: 0/0
  4863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4864 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4867 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4868 ;;Total ram usage:        2 bytes
  4869 ;; Hardware stack levels used: 1
  4870 ;; Hardware stack levels required when called: 7
  4871 ;; This function calls:
  4872 ;;		Nothing
  4873 ;; This function is called by:
  4874 ;;		_ADC_Initialize
  4875 ;; This function uses a non-reentrant model
  4876 ;;
  4877                           
  4878                           	psect	text41
  4879   0033D4                     __ptext41:
  4880                           	callstack 0
  4881   0033D4                     _ADC_SetInterruptHandler:
  4882                           	callstack 21
  4883   0033D4                     
  4884                           ;mcc_generated_files/adc.c: 152:     ADC_InterruptHandler = InterruptHandler;
  4885   0033D4  C01C  F040         	movff	ADC_SetInterruptHandler@InterruptHandler,_ADC_InterruptHandler
  4886   0033D8  C01D  F041         	movff	ADC_SetInterruptHandler@InterruptHandler+1,_ADC_InterruptHandler+1
  4887   0033DC  0012               	return		;funcret
  4888   0033DE                     __end_of_ADC_SetInterruptHandler:
  4889                           	callstack 0
  4890                           
  4891 ;; *************** function _Read_TC74 *****************
  4892 ;; Defined at:
  4893 ;;		line 17 in file "ECUAL/TC74/TC74.c"
  4894 ;; Parameters:    Size  Location     Type
  4895 ;;  address         1    wreg     unsigned char 
  4896 ;; Auto vars:     Size  Location     Type
  4897 ;;  address         1    0[BANK0 ] unsigned char 
  4898 ;;  value           1    1[BANK0 ] unsigned char 
  4899 ;; Return value:  Size  Location     Type
  4900 ;;                  1    wreg      unsigned char 
  4901 ;; Registers used:
  4902 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4903 ;; Tracked objects:
  4904 ;;		On entry : 0/0
  4905 ;;		On exit  : 0/0
  4906 ;;		Unchanged: 0/0
  4907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4909 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4911 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4912 ;;Total ram usage:        2 bytes
  4913 ;; Hardware stack levels used: 1
  4914 ;; Hardware stack levels required when called: 11
  4915 ;; This function calls:
  4916 ;;		_I2C_Read1ByteRegister
  4917 ;; This function is called by:
  4918 ;;		_main
  4919 ;; This function uses a non-reentrant model
  4920 ;;
  4921                           
  4922                           	psect	text42
  4923   00328C                     __ptext42:
  4924                           	callstack 0
  4925   00328C                     _Read_TC74:
  4926                           	callstack 19
  4927                           
  4928                           ;incstack = 0
  4929                           ;Read_TC74@address stored from wreg
  4930   00328C  0100               	movlb	0	; () banked
  4931   00328E  6FD7               	movwf	Read_TC74@address& (0+255),b
  4932   003290                     
  4933                           ;ECUAL/TC74/TC74.c: 20:     value = I2C_Read1ByteRegister(address, 0x00);
  4934   003290  0E00               	movlw	0
  4935   003292  6E25               	movwf	I2C_Read1ByteRegister@reg^0,c
  4936   003294  0100               	movlb	0	; () banked
  4937   003296  51D7               	movf	Read_TC74@address& (0+255),w,b
  4938   003298  ECF0  F014         	call	_I2C_Read1ByteRegister
  4939   00329C  0100               	movlb	0	; () banked
  4940   00329E  6FD8               	movwf	Read_TC74@value& (0+255),b
  4941   0032A0                     
  4942                           ; BSR set to: 0
  4943                           ;ECUAL/TC74/TC74.c: 25:     return value;
  4944   0032A0  51D8               	movf	Read_TC74@value& (0+255),w,b
  4945   0032A2                     
  4946                           ; BSR set to: 0
  4947   0032A2  0012               	return		;funcret
  4948   0032A4                     __end_of_Read_TC74:
  4949                           	callstack 0
  4950                           
  4951 ;; *************** function _I2C_Read1ByteRegister *****************
  4952 ;; Defined at:
  4953 ;;		line 63 in file "mcc_generated_files/examples/i2c_master_example.c"
  4954 ;; Parameters:    Size  Location     Type
  4955 ;;  address         1    wreg     unsigned char 
  4956 ;;  reg             1   36[COMRAM] unsigned char 
  4957 ;; Auto vars:     Size  Location     Type
  4958 ;;  address         1   37[COMRAM] unsigned char 
  4959 ;;  returnValue     1   38[COMRAM] unsigned char 
  4960 ;; Return value:  Size  Location     Type
  4961 ;;                  1    wreg      unsigned char 
  4962 ;; Registers used:
  4963 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4964 ;; Tracked objects:
  4965 ;;		On entry : 0/0
  4966 ;;		On exit  : 0/0
  4967 ;;		Unchanged: 0/0
  4968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4969 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4970 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4972 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4973 ;;Total ram usage:        3 bytes
  4974 ;; Hardware stack levels used: 1
  4975 ;; Hardware stack levels required when called: 10
  4976 ;; This function calls:
  4977 ;;		_I2C_Close
  4978 ;;		_I2C_MasterWrite
  4979 ;;		_I2C_Open
  4980 ;;		_I2C_SetAddressNackCallback
  4981 ;;		_I2C_SetBuffer
  4982 ;;		_I2C_SetDataCompleteCallback
  4983 ;; This function is called by:
  4984 ;;		_Read_TC74
  4985 ;; This function uses a non-reentrant model
  4986 ;;
  4987                           
  4988                           	psect	text43
  4989   0029E0                     __ptext43:
  4990                           	callstack 0
  4991   0029E0                     _I2C_Read1ByteRegister:
  4992                           	callstack 19
  4993                           
  4994                           ; BSR set to: 0
  4995                           ;incstack = 0
  4996                           ;I2C_Read1ByteRegister@address stored from wreg
  4997   0029E0  6E26               	movwf	I2C_Read1ByteRegister@address^0,c
  4998   0029E2                     
  4999                           ;mcc_generated_files/examples/i2c_master_example.c: 63: uint8_t I2C_Read1ByteRegister(i2
      +                          c_address_t address, uint8_t reg);mcc_generated_files/examples/i2c_master_example.c: 64:
      +                           {;mcc_generated_files/examples/i2c_master_example.c: 65:     uint8_t returnValue = 0x00
      +                          ;
  5000   0029E2  0E00               	movlw	0
  5001   0029E4  6E27               	movwf	I2C_Read1ByteRegister@returnValue^0,c
  5002   0029E6                     l5746:
  5003   0029E6  5026               	movf	I2C_Read1ByteRegister@address^0,w,c
  5004   0029E8  EC47  F012         	call	_I2C_Open
  5005   0029EC  0900               	iorlw	0
  5006   0029EE  B4D8               	btfsc	status,2,c
  5007   0029F0  EFFC  F014         	goto	u4541
  5008   0029F4  EFFE  F014         	goto	u4540
  5009   0029F8                     u4541:
  5010   0029F8  EFF3  F014         	goto	l5746
  5011   0029FC                     u4540:
  5012   0029FC                     
  5013                           ;mcc_generated_files/examples/i2c_master_example.c: 68:     I2C_SetDataCompleteCallback(
      +                          rd1RegCompleteHandler,&returnValue);
  5014   0029FC  0E08               	movlw	low _rd1RegCompleteHandler
  5015   0029FE  6E21               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  5016   002A00  0E31               	movlw	high _rd1RegCompleteHandler
  5017   002A02  6E22               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  5018   002A04  0E27               	movlw	low I2C_Read1ByteRegister@returnValue
  5019   002A06  6E23               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  5020   002A08  6A24               	clrf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  5021   002A0A  EC52  F019         	call	_I2C_SetDataCompleteCallback	;wreg free
  5022   002A0E                     
  5023                           ;mcc_generated_files/examples/i2c_master_example.c: 69:     I2C_SetBuffer(&reg,1);
  5024   002A0E  0E25               	movlw	low I2C_Read1ByteRegister@reg
  5025   002A10  6E1C               	movwf	I2C_SetBuffer@buffer^0,c
  5026   002A12  6A1D               	clrf	(I2C_SetBuffer@buffer+1)^0,c
  5027   002A14  0E00               	movlw	0
  5028   002A16  6E1F               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  5029   002A18  0E01               	movlw	1
  5030   002A1A  6E1E               	movwf	I2C_SetBuffer@bufferSize^0,c
  5031   002A1C  ECD5  F018         	call	_I2C_SetBuffer	;wreg free
  5032   002A20                     
  5033                           ;mcc_generated_files/examples/i2c_master_example.c: 70:     I2C_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
  5034   002A20  0E00               	movlw	0
  5035   002A22  6E21               	movwf	I2C_SetAddressNackCallback@cb^0,c
  5036   002A24  0E00               	movlw	0
  5037   002A26  6E22               	movwf	(I2C_SetAddressNackCallback@cb+1)^0,c
  5038   002A28  0E00               	movlw	0
  5039   002A2A  6E23               	movwf	I2C_SetAddressNackCallback@ptr^0,c
  5040   002A2C  0E00               	movlw	0
  5041   002A2E  6E24               	movwf	(I2C_SetAddressNackCallback@ptr+1)^0,c
  5042   002A30  EC5E  F019         	call	_I2C_SetAddressNackCallback	;wreg free
  5043   002A34                     
  5044                           ;mcc_generated_files/examples/i2c_master_example.c: 71:     I2C_MasterWrite();
  5045   002A34  ECF4  F019         	call	_I2C_MasterWrite	;wreg free
  5046   002A38                     l5756:
  5047   002A38  EC42  F018         	call	_I2C_Close	;wreg free
  5048   002A3C  06E8               	decf	wreg,f,c
  5049   002A3E  B4D8               	btfsc	status,2,c
  5050   002A40  EF24  F015         	goto	u4551
  5051   002A44  EF26  F015         	goto	u4550
  5052   002A48                     u4551:
  5053   002A48  EF1C  F015         	goto	l5756
  5054   002A4C                     u4550:
  5055   002A4C                     
  5056                           ;mcc_generated_files/examples/i2c_master_example.c: 74:     return returnValue;
  5057   002A4C  5027               	movf	I2C_Read1ByteRegister@returnValue^0,w,c
  5058   002A4E  0012               	return		;funcret
  5059   002A50                     __end_of_I2C_Read1ByteRegister:
  5060                           	callstack 0
  5061                           
  5062 ;; *************** function _I2C_SetDataCompleteCallback *****************
  5063 ;; Defined at:
  5064 ;;		line 274 in file "mcc_generated_files/i2c_master.c"
  5065 ;; Parameters:    Size  Location     Type
  5066 ;;  cb              2   32[COMRAM] PTR FTN(PTR void ,)enum 
  5067 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  5068 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  5069 ;;  ptr             2   34[COMRAM] PTR void 
  5070 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5071 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  5072 ;; Auto vars:     Size  Location     Type
  5073 ;;		None
  5074 ;; Return value:  Size  Location     Type
  5075 ;;                  1    wreg      void 
  5076 ;; Registers used:
  5077 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5078 ;; Tracked objects:
  5079 ;;		On entry : 0/0
  5080 ;;		On exit  : 0/0
  5081 ;;		Unchanged: 0/0
  5082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5083 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5086 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5087 ;;Total ram usage:        4 bytes
  5088 ;; Hardware stack levels used: 1
  5089 ;; Hardware stack levels required when called: 8
  5090 ;; This function calls:
  5091 ;;		_I2C_SetCallback
  5092 ;; This function is called by:
  5093 ;;		_I2C_Read1ByteRegister
  5094 ;;		_I2C_Read2ByteRegister
  5095 ;;		_I2C_Write1ByteRegister
  5096 ;;		_I2C_Write2ByteRegister
  5097 ;;		_I2C_ReadDataBlock
  5098 ;; This function uses a non-reentrant model
  5099 ;;
  5100                           
  5101                           	psect	text44
  5102   0032A4                     __ptext44:
  5103                           	callstack 0
  5104   0032A4                     _I2C_SetDataCompleteCallback:
  5105                           	callstack 20
  5106   0032A4                     
  5107                           ;mcc_generated_files/i2c_master.c: 274: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 275: {;mcc_generated_files/i2c_master.c
      +                          : 276:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
  5108   0032A4  C021  F01C         	movff	I2C_SetDataCompleteCallback@cb,I2C_SetCallback@cb
  5109   0032A8  C022  F01D         	movff	I2C_SetDataCompleteCallback@cb+1,I2C_SetCallback@cb+1
  5110   0032AC  C023  F01E         	movff	I2C_SetDataCompleteCallback@ptr,I2C_SetCallback@ptr
  5111   0032B0  C024  F01F         	movff	I2C_SetDataCompleteCallback@ptr+1,I2C_SetCallback@ptr+1
  5112   0032B4  0E00               	movlw	0
  5113   0032B6  EC95  F015         	call	_I2C_SetCallback
  5114   0032BA  0012               	return		;funcret
  5115   0032BC                     __end_of_I2C_SetDataCompleteCallback:
  5116                           	callstack 0
  5117                           
  5118 ;; *************** function _I2C_SetBuffer *****************
  5119 ;; Defined at:
  5120 ;;		line 264 in file "mcc_generated_files/i2c_master.c"
  5121 ;; Parameters:    Size  Location     Type
  5122 ;;  buffer          2   27[COMRAM] PTR void 
  5123 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegiste
      +r@data(2), 
  5124 ;;		 -> I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegist
      +er@returnValue(2), 
  5125 ;;		 -> NULL(0), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), 
  5126 ;;  bufferSize      2   29[COMRAM] unsigned int 
  5127 ;; Auto vars:     Size  Location     Type
  5128 ;;		None
  5129 ;; Return value:  Size  Location     Type
  5130 ;;                  1    wreg      void 
  5131 ;; Registers used:
  5132 ;;		wreg, status,2, status,0
  5133 ;; Tracked objects:
  5134 ;;		On entry : 0/0
  5135 ;;		On exit  : 0/0
  5136 ;;		Unchanged: 0/0
  5137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5138 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5141 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5142 ;;Total ram usage:        4 bytes
  5143 ;; Hardware stack levels used: 1
  5144 ;; Hardware stack levels required when called: 7
  5145 ;; This function calls:
  5146 ;;		Nothing
  5147 ;; This function is called by:
  5148 ;;		_I2C_Read1ByteRegister
  5149 ;;		_I2C_Read2ByteRegister
  5150 ;;		_I2C_Write1ByteRegister
  5151 ;;		_I2C_Write2ByteRegister
  5152 ;;		_I2C_WriteNBytes
  5153 ;;		_I2C_ReadNBytes
  5154 ;;		_I2C_ReadDataBlock
  5155 ;; This function uses a non-reentrant model
  5156 ;;
  5157                           
  5158                           	psect	text45
  5159   0031AA                     __ptext45:
  5160                           	callstack 0
  5161   0031AA                     _I2C_SetBuffer:
  5162                           	callstack 21
  5163   0031AA                     
  5164                           ;mcc_generated_files/i2c_master.c: 264: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 265: {;mcc_generated_files/i2c_master.c: 266:     
      +                          if(I2C_Status.bufferFree)
  5165   0031AA  0100               	movlb	0	; () banked
  5166   0031AC  A783               	btfss	(_I2C_Status+35)& (0+255),3,b
  5167   0031AE  EFDB  F018         	goto	u4081
  5168   0031B2  EFDD  F018         	goto	u4080
  5169   0031B6                     u4081:
  5170   0031B6  EFE6  F018         	goto	l467
  5171   0031BA                     u4080:
  5172   0031BA                     
  5173                           ; BSR set to: 0
  5174                           ;mcc_generated_files/i2c_master.c: 267:     {;mcc_generated_files/i2c_master.c: 268:    
      +                               I2C_Status.data_ptr = buffer;
  5175   0031BA  C01C  F07D         	movff	I2C_SetBuffer@buffer,_I2C_Status+29
  5176   0031BE  C01D  F07E         	movff	I2C_SetBuffer@buffer+1,_I2C_Status+30
  5177   0031C2                     
  5178                           ; BSR set to: 0
  5179                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.data_length = bufferSize;
  5180   0031C2  C01E  F07F         	movff	I2C_SetBuffer@bufferSize,_I2C_Status+31
  5181   0031C6  C01F  F080         	movff	I2C_SetBuffer@bufferSize+1,_I2C_Status+32
  5182   0031CA                     
  5183                           ; BSR set to: 0
  5184                           ;mcc_generated_files/i2c_master.c: 270:         I2C_Status.bufferFree = 0;
  5185   0031CA  9783               	bcf	(_I2C_Status+35)& (0+255),3,b
  5186   0031CC                     l467:
  5187                           
  5188                           ; BSR set to: 0
  5189   0031CC  0012               	return		;funcret
  5190   0031CE                     __end_of_I2C_SetBuffer:
  5191                           	callstack 0
  5192                           
  5193 ;; *************** function _I2C_SetAddressNackCallback *****************
  5194 ;; Defined at:
  5195 ;;		line 284 in file "mcc_generated_files/i2c_master.c"
  5196 ;; Parameters:    Size  Location     Type
  5197 ;;  cb              2   32[COMRAM] PTR FTN(PTR void ,)enum 
  5198 ;;		 -> NULL(1), 
  5199 ;;  ptr             2   34[COMRAM] PTR void 
  5200 ;;		 -> NULL(0), 
  5201 ;; Auto vars:     Size  Location     Type
  5202 ;;		None
  5203 ;; Return value:  Size  Location     Type
  5204 ;;                  1    wreg      void 
  5205 ;; Registers used:
  5206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5207 ;; Tracked objects:
  5208 ;;		On entry : 0/0
  5209 ;;		On exit  : 0/0
  5210 ;;		Unchanged: 0/0
  5211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5212 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5215 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5216 ;;Total ram usage:        4 bytes
  5217 ;; Hardware stack levels used: 1
  5218 ;; Hardware stack levels required when called: 8
  5219 ;; This function calls:
  5220 ;;		_I2C_SetCallback
  5221 ;; This function is called by:
  5222 ;;		_I2C_Read1ByteRegister
  5223 ;;		_I2C_Read2ByteRegister
  5224 ;;		_I2C_Write1ByteRegister
  5225 ;;		_I2C_Write2ByteRegister
  5226 ;;		_I2C_WriteNBytes
  5227 ;;		_I2C_ReadDataBlock
  5228 ;; This function uses a non-reentrant model
  5229 ;;
  5230                           
  5231                           	psect	text46
  5232   0032BC                     __ptext46:
  5233                           	callstack 0
  5234   0032BC                     _I2C_SetAddressNackCallback:
  5235                           	callstack 20
  5236   0032BC                     
  5237                           ;mcc_generated_files/i2c_master.c: 284: void I2C_SetAddressNackCallback(i2c_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c_master.c: 285: {;mcc_generated_files/i2c_master.c:
      +                           286:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
  5238   0032BC  C021  F01C         	movff	I2C_SetAddressNackCallback@cb,I2C_SetCallback@cb
  5239   0032C0  C022  F01D         	movff	I2C_SetAddressNackCallback@cb+1,I2C_SetCallback@cb+1
  5240   0032C4  C023  F01E         	movff	I2C_SetAddressNackCallback@ptr,I2C_SetCallback@ptr
  5241   0032C8  C024  F01F         	movff	I2C_SetAddressNackCallback@ptr+1,I2C_SetCallback@ptr+1
  5242   0032CC  0E02               	movlw	2
  5243   0032CE  EC95  F015         	call	_I2C_SetCallback
  5244   0032D2  0012               	return		;funcret
  5245   0032D4                     __end_of_I2C_SetAddressNackCallback:
  5246                           	callstack 0
  5247                           
  5248 ;; *************** function _I2C_SetCallback *****************
  5249 ;; Defined at:
  5250 ;;		line 304 in file "mcc_generated_files/i2c_master.c"
  5251 ;; Parameters:    Size  Location     Type
  5252 ;;  idx             1    wreg     enum E3152
  5253 ;;  cb              2   27[COMRAM] PTR FTN(PTR void ,)enum 
  5254 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  5255 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  5256 ;;  ptr             2   29[COMRAM] PTR void 
  5257 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5258 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  5259 ;; Auto vars:     Size  Location     Type
  5260 ;;  idx             1   31[COMRAM] enum E3152
  5261 ;; Return value:  Size  Location     Type
  5262 ;;                  1    wreg      void 
  5263 ;; Registers used:
  5264 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5265 ;; Tracked objects:
  5266 ;;		On entry : 0/0
  5267 ;;		On exit  : 0/0
  5268 ;;		Unchanged: 0/0
  5269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5270 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5271 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5273 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5274 ;;Total ram usage:        5 bytes
  5275 ;; Hardware stack levels used: 1
  5276 ;; Hardware stack levels required when called: 7
  5277 ;; This function calls:
  5278 ;;		Nothing
  5279 ;; This function is called by:
  5280 ;;		_I2C_SetDataCompleteCallback
  5281 ;;		_I2C_SetAddressNackCallback
  5282 ;;		_I2C_SetWriteCollisionCallback
  5283 ;;		_I2C_SetDataNackCallback
  5284 ;;		_I2C_SetTimeoutCallback
  5285 ;; This function uses a non-reentrant model
  5286 ;;
  5287                           
  5288                           	psect	text47
  5289   002B2A                     __ptext47:
  5290                           	callstack 0
  5291   002B2A                     _I2C_SetCallback:
  5292                           	callstack 20
  5293                           
  5294                           ;incstack = 0
  5295                           ;I2C_SetCallback@idx stored from wreg
  5296   002B2A  6E20               	movwf	I2C_SetCallback@idx^0,c
  5297   002B2C                     
  5298                           ;mcc_generated_files/i2c_master.c: 304: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 305: {;mcc_generate
      +                          d_files/i2c_master.c: 306:     if(cb)
  5299   002B2C  501C               	movf	I2C_SetCallback@cb^0,w,c
  5300   002B2E  101D               	iorwf	(I2C_SetCallback@cb+1)^0,w,c
  5301   002B30  B4D8               	btfsc	status,2,c
  5302   002B32  EF9D  F015         	goto	u4041
  5303   002B36  EF9F  F015         	goto	u4040
  5304   002B3A                     u4041:
  5305   002B3A  EFB5  F015         	goto	l5348
  5306   002B3E                     u4040:
  5307   002B3E                     
  5308                           ;mcc_generated_files/i2c_master.c: 307:     {;mcc_generated_files/i2c_master.c: 308:    
      +                               I2C_Status.callbackTable[idx] = cb;
  5309   002B3E  5020               	movf	I2C_SetCallback@idx^0,w,c
  5310   002B40  0D02               	mullw	2
  5311   002B42  50F3               	movf	243,w,c
  5312   002B44  0F60               	addlw	low _I2C_Status
  5313   002B46  6ED9               	movwf	fsr2l,c
  5314   002B48  6ADA               	clrf	fsr2h,c
  5315   002B4A  C01C  FFDE         	movff	I2C_SetCallback@cb,postinc2
  5316   002B4E  C01D  FFDD         	movff	I2C_SetCallback@cb+1,postdec2
  5317                           
  5318                           ;mcc_generated_files/i2c_master.c: 309:         I2C_Status.callbackPayload[idx] = ptr;
  5319   002B52  5020               	movf	I2C_SetCallback@idx^0,w,c
  5320   002B54  0D02               	mullw	2
  5321   002B56  50F3               	movf	243,w,c
  5322   002B58  0F6C               	addlw	low (_I2C_Status+12)
  5323   002B5A  6ED9               	movwf	fsr2l,c
  5324   002B5C  6ADA               	clrf	fsr2h,c
  5325   002B5E  C01E  FFDE         	movff	I2C_SetCallback@ptr,postinc2
  5326   002B62  C01F  FFDD         	movff	I2C_SetCallback@ptr+1,postdec2
  5327                           
  5328                           ;mcc_generated_files/i2c_master.c: 310:     }
  5329   002B66  EFC7  F015         	goto	l490
  5330   002B6A                     l5348:
  5331                           
  5332                           ;mcc_generated_files/i2c_master.c: 312:     {;mcc_generated_files/i2c_master.c: 313:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
  5333   002B6A  5020               	movf	I2C_SetCallback@idx^0,w,c
  5334   002B6C  0D02               	mullw	2
  5335   002B6E  50F3               	movf	243,w,c
  5336   002B70  0F60               	addlw	low _I2C_Status
  5337   002B72  6ED9               	movwf	fsr2l,c
  5338   002B74  6ADA               	clrf	fsr2h,c
  5339   002B76  0E7A               	movlw	low _I2C_CallbackReturnStop
  5340   002B78  6EDE               	movwf	postinc2,c
  5341   002B7A  0E34               	movlw	high _I2C_CallbackReturnStop
  5342   002B7C  6EDD               	movwf	postdec2,c
  5343                           
  5344                           ;mcc_generated_files/i2c_master.c: 314:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
  5345   002B7E  5020               	movf	I2C_SetCallback@idx^0,w,c
  5346   002B80  0D02               	mullw	2
  5347   002B82  50F3               	movf	243,w,c
  5348   002B84  0F6C               	addlw	low (_I2C_Status+12)
  5349   002B86  6ED9               	movwf	fsr2l,c
  5350   002B88  6ADA               	clrf	fsr2h,c
  5351   002B8A  6ADE               	clrf	postinc2,c
  5352   002B8C  6ADD               	clrf	postdec2,c
  5353   002B8E                     l490:
  5354   002B8E  0012               	return		;funcret
  5355   002B90                     __end_of_I2C_SetCallback:
  5356                           	callstack 0
  5357                           
  5358 ;; *************** function _I2C_Open *****************
  5359 ;; Defined at:
  5360 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
  5361 ;; Parameters:    Size  Location     Type
  5362 ;;  address         1    wreg     unsigned char 
  5363 ;; Auto vars:     Size  Location     Type
  5364 ;;  address         1   29[COMRAM] unsigned char 
  5365 ;;  returnValue     1   30[COMRAM] enum E358
  5366 ;; Return value:  Size  Location     Type
  5367 ;;                  1    wreg      enum E358
  5368 ;; Registers used:
  5369 ;;		wreg, status,2, status,0, cstack
  5370 ;; Tracked objects:
  5371 ;;		On entry : 0/0
  5372 ;;		On exit  : 0/0
  5373 ;;		Unchanged: 0/0
  5374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5376 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5378 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5379 ;;Total ram usage:        2 bytes
  5380 ;; Hardware stack levels used: 1
  5381 ;; Hardware stack levels required when called: 8
  5382 ;; This function calls:
  5383 ;;		_I2C_MasterClearIrq
  5384 ;;		_I2C_MasterEnableIrq
  5385 ;;		_I2C_MasterOpen
  5386 ;;		_I2C_SetInterruptHandler
  5387 ;; This function is called by:
  5388 ;;		_I2C_Read1ByteRegister
  5389 ;;		_I2C_Read2ByteRegister
  5390 ;;		_I2C_Write1ByteRegister
  5391 ;;		_I2C_Write2ByteRegister
  5392 ;;		_I2C_WriteNBytes
  5393 ;;		_I2C_ReadNBytes
  5394 ;;		_I2C_ReadDataBlock
  5395 ;; This function uses a non-reentrant model
  5396 ;;
  5397                           
  5398                           	psect	text48
  5399   00248E                     __ptext48:
  5400                           	callstack 0
  5401   00248E                     _I2C_Open:
  5402                           	callstack 20
  5403                           
  5404                           ;incstack = 0
  5405                           ;I2C_Open@address stored from wreg
  5406   00248E  6E1E               	movwf	I2C_Open@address^0,c
  5407   002490                     
  5408                           ;mcc_generated_files/i2c_master.c: 176: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 177: {;mcc_generated_files/i2c_master.c: 178:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  5409   002490  0E01               	movlw	1
  5410   002492  6E1F               	movwf	I2C_Open@returnValue^0,c
  5411   002494                     
  5412                           ;mcc_generated_files/i2c_master.c: 180:     if(!I2C_Status.inUse)
  5413   002494  0100               	movlb	0	; () banked
  5414   002496  B583               	btfsc	(_I2C_Status+35)& (0+255),2,b
  5415   002498  EF50  F012         	goto	u4071
  5416   00249C  EF52  F012         	goto	u4070
  5417   0024A0                     u4071:
  5418   0024A0  EF94  F012         	goto	l5452
  5419   0024A4                     u4070:
  5420   0024A4                     
  5421                           ; BSR set to: 0
  5422                           ;mcc_generated_files/i2c_master.c: 181:     {;mcc_generated_files/i2c_master.c: 182:    
      +                               I2C_Status.address = address;
  5423   0024A4  C01E  F07C         	movff	I2C_Open@address,_I2C_Status+28
  5424   0024A8                     
  5425                           ; BSR set to: 0
  5426                           ;mcc_generated_files/i2c_master.c: 183:         I2C_Status.busy = 0;
  5427   0024A8  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
  5428   0024AA                     
  5429                           ; BSR set to: 0
  5430                           ;mcc_generated_files/i2c_master.c: 184:         I2C_Status.inUse = 1;
  5431   0024AA  8583               	bsf	(_I2C_Status+35)& (0+255),2,b
  5432   0024AC                     
  5433                           ; BSR set to: 0
  5434                           ;mcc_generated_files/i2c_master.c: 185:         I2C_Status.addressNackCheck = 0;
  5435   0024AC  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  5436   0024AE                     
  5437                           ; BSR set to: 0
  5438                           ;mcc_generated_files/i2c_master.c: 186:         I2C_Status.state = I2C_RESET;
  5439   0024AE  0E0E               	movlw	14
  5440   0024B0  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  5441   0024B2                     
  5442                           ; BSR set to: 0
  5443                           ;mcc_generated_files/i2c_master.c: 187:         I2C_Status.time_out_value = 500;
  5444   0024B2  0E01               	movlw	1
  5445   0024B4  6F7B               	movwf	(_I2C_Status+27)& (0+255),b
  5446   0024B6  0EF4               	movlw	244
  5447   0024B8  6F7A               	movwf	(_I2C_Status+26)& (0+255),b
  5448   0024BA                     
  5449                           ; BSR set to: 0
  5450                           ;mcc_generated_files/i2c_master.c: 188:         I2C_Status.bufferFree = 1;
  5451   0024BA  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
  5452   0024BC                     
  5453                           ; BSR set to: 0
  5454                           ;mcc_generated_files/i2c_master.c: 191:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
  5455   0024BC  0E7A               	movlw	low _I2C_CallbackReturnStop
  5456   0024BE  6F60               	movwf	_I2C_Status& (0+255),b
  5457   0024C0  0E34               	movlw	high _I2C_CallbackReturnStop
  5458   0024C2  6F61               	movwf	(_I2C_Status+1)& (0+255),b
  5459   0024C4                     
  5460                           ; BSR set to: 0
  5461                           ;mcc_generated_files/i2c_master.c: 192:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
  5462   0024C4  0E00               	movlw	0
  5463   0024C6  6F6C               	movwf	(_I2C_Status+12)& (0+255),b
  5464   0024C8  0E00               	movlw	0
  5465   0024CA  6F6D               	movwf	(_I2C_Status+13)& (0+255),b
  5466   0024CC                     
  5467                           ; BSR set to: 0
  5468                           ;mcc_generated_files/i2c_master.c: 193:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
  5469   0024CC  0E7A               	movlw	low _I2C_CallbackReturnStop
  5470   0024CE  6F62               	movwf	(_I2C_Status+2)& (0+255),b
  5471   0024D0  0E34               	movlw	high _I2C_CallbackReturnStop
  5472   0024D2  6F63               	movwf	(_I2C_Status+3)& (0+255),b
  5473   0024D4                     
  5474                           ; BSR set to: 0
  5475                           ;mcc_generated_files/i2c_master.c: 194:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
  5476   0024D4  0E00               	movlw	0
  5477   0024D6  6F6E               	movwf	(_I2C_Status+14)& (0+255),b
  5478   0024D8  0E00               	movlw	0
  5479   0024DA  6F6F               	movwf	(_I2C_Status+15)& (0+255),b
  5480   0024DC                     
  5481                           ; BSR set to: 0
  5482                           ;mcc_generated_files/i2c_master.c: 195:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
  5483   0024DC  0E7A               	movlw	low _I2C_CallbackReturnStop
  5484   0024DE  6F64               	movwf	(_I2C_Status+4)& (0+255),b
  5485   0024E0  0E34               	movlw	high _I2C_CallbackReturnStop
  5486   0024E2  6F65               	movwf	(_I2C_Status+5)& (0+255),b
  5487   0024E4                     
  5488                           ; BSR set to: 0
  5489                           ;mcc_generated_files/i2c_master.c: 196:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
  5490   0024E4  0E00               	movlw	0
  5491   0024E6  6F70               	movwf	(_I2C_Status+16)& (0+255),b
  5492   0024E8  0E00               	movlw	0
  5493   0024EA  6F71               	movwf	(_I2C_Status+17)& (0+255),b
  5494   0024EC                     
  5495                           ; BSR set to: 0
  5496                           ;mcc_generated_files/i2c_master.c: 197:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
  5497   0024EC  0E7A               	movlw	low _I2C_CallbackReturnStop
  5498   0024EE  6F66               	movwf	(_I2C_Status+6)& (0+255),b
  5499   0024F0  0E34               	movlw	high _I2C_CallbackReturnStop
  5500   0024F2  6F67               	movwf	(_I2C_Status+7)& (0+255),b
  5501   0024F4                     
  5502                           ; BSR set to: 0
  5503                           ;mcc_generated_files/i2c_master.c: 198:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
  5504   0024F4  0E00               	movlw	0
  5505   0024F6  6F72               	movwf	(_I2C_Status+18)& (0+255),b
  5506   0024F8  0E00               	movlw	0
  5507   0024FA  6F73               	movwf	(_I2C_Status+19)& (0+255),b
  5508   0024FC                     
  5509                           ; BSR set to: 0
  5510                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
  5511   0024FC  0E76               	movlw	low _I2C_CallbackReturnReset
  5512   0024FE  6F68               	movwf	(_I2C_Status+8)& (0+255),b
  5513   002500  0E34               	movlw	high _I2C_CallbackReturnReset
  5514   002502  6F69               	movwf	(_I2C_Status+9)& (0+255),b
  5515   002504                     
  5516                           ; BSR set to: 0
  5517                           ;mcc_generated_files/i2c_master.c: 200:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
  5518   002504  0E00               	movlw	0
  5519   002506  6F74               	movwf	(_I2C_Status+20)& (0+255),b
  5520   002508  0E00               	movlw	0
  5521   00250A  6F75               	movwf	(_I2C_Status+21)& (0+255),b
  5522   00250C                     
  5523                           ; BSR set to: 0
  5524                           ;mcc_generated_files/i2c_master.c: 202:         I2C_SetInterruptHandler(I2C_MasterIsr);
  5525   00250C  0E30               	movlw	low _I2C_MasterIsr
  5526   00250E  6E1C               	movwf	I2C_SetInterruptHandler@InterruptHandler^0,c
  5527   002510  0E34               	movlw	high _I2C_MasterIsr
  5528   002512  6E1D               	movwf	(I2C_SetInterruptHandler@InterruptHandler+1)^0,c
  5529   002514  ECEF  F019         	call	_I2C_SetInterruptHandler	;wreg free
  5530   002518                     
  5531                           ;mcc_generated_files/i2c_master.c: 203:         I2C_MasterClearIrq();
  5532   002518  EC31  F01A         	call	_I2C_MasterClearIrq	;wreg free
  5533   00251C                     
  5534                           ;mcc_generated_files/i2c_master.c: 204:         I2C_MasterOpen();
  5535   00251C  EC0A  F019         	call	_I2C_MasterOpen	;wreg free
  5536   002520                     
  5537                           ;mcc_generated_files/i2c_master.c: 205:         I2C_MasterEnableIrq();
  5538   002520  EC29  F01A         	call	_I2C_MasterEnableIrq	;wreg free
  5539   002524                     
  5540                           ;mcc_generated_files/i2c_master.c: 206:         returnValue = I2C_NOERR;
  5541   002524  0E00               	movlw	0
  5542   002526  6E1F               	movwf	I2C_Open@returnValue^0,c
  5543   002528                     l5452:
  5544                           
  5545                           ;mcc_generated_files/i2c_master.c: 208:     return returnValue;
  5546   002528  501F               	movf	I2C_Open@returnValue^0,w,c
  5547   00252A  0012               	return		;funcret
  5548   00252C                     __end_of_I2C_Open:
  5549                           	callstack 0
  5550                           
  5551 ;; *************** function _I2C_SetInterruptHandler *****************
  5552 ;; Defined at:
  5553 ;;		line 299 in file "mcc_generated_files/i2c_master.c"
  5554 ;; Parameters:    Size  Location     Type
  5555 ;;  InterruptHan    2   27[COMRAM] PTR FTN()void 
  5556 ;;		 -> I2C_MasterIsr(1), 
  5557 ;; Auto vars:     Size  Location     Type
  5558 ;;		None
  5559 ;; Return value:  Size  Location     Type
  5560 ;;                  1    wreg      void 
  5561 ;; Registers used:
  5562 ;;		wreg, status,2, status,0
  5563 ;; Tracked objects:
  5564 ;;		On entry : 0/0
  5565 ;;		On exit  : 0/0
  5566 ;;		Unchanged: 0/0
  5567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5568 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5571 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5572 ;;Total ram usage:        2 bytes
  5573 ;; Hardware stack levels used: 1
  5574 ;; Hardware stack levels required when called: 7
  5575 ;; This function calls:
  5576 ;;		Nothing
  5577 ;; This function is called by:
  5578 ;;		_I2C_Open
  5579 ;; This function uses a non-reentrant model
  5580 ;;
  5581                           
  5582                           	psect	text49
  5583   0033DE                     __ptext49:
  5584                           	callstack 0
  5585   0033DE                     _I2C_SetInterruptHandler:
  5586                           	callstack 20
  5587   0033DE                     
  5588                           ;mcc_generated_files/i2c_master.c: 299: void I2C_SetInterruptHandler(void (* InterruptHa
      +                          ndler)(void));mcc_generated_files/i2c_master.c: 300: {;mcc_generated_files/i2c_master.c:
      +                           301:     MSSP_InterruptHandler = InterruptHandler;
  5589   0033DE  C01C  F02C         	movff	I2C_SetInterruptHandler@InterruptHandler,_MSSP_InterruptHandler
  5590   0033E2  C01D  F02D         	movff	I2C_SetInterruptHandler@InterruptHandler+1,_MSSP_InterruptHandler+1
  5591   0033E6  0012               	return		;funcret
  5592   0033E8                     __end_of_I2C_SetInterruptHandler:
  5593                           	callstack 0
  5594                           
  5595 ;; *************** function _I2C_MasterOpen *****************
  5596 ;; Defined at:
  5597 ;;		line 544 in file "mcc_generated_files/i2c_master.c"
  5598 ;; Parameters:    Size  Location     Type
  5599 ;;		None
  5600 ;; Auto vars:     Size  Location     Type
  5601 ;;		None
  5602 ;; Return value:  Size  Location     Type
  5603 ;;                  1    wreg      _Bool 
  5604 ;; Registers used:
  5605 ;;		wreg, status,2
  5606 ;; Tracked objects:
  5607 ;;		On entry : 0/0
  5608 ;;		On exit  : 0/0
  5609 ;;		Unchanged: 0/0
  5610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5615 ;;Total ram usage:        0 bytes
  5616 ;; Hardware stack levels used: 1
  5617 ;; Hardware stack levels required when called: 7
  5618 ;; This function calls:
  5619 ;;		Nothing
  5620 ;; This function is called by:
  5621 ;;		_I2C_Open
  5622 ;; This function uses a non-reentrant model
  5623 ;;
  5624                           
  5625                           	psect	text50
  5626   003214                     __ptext50:
  5627                           	callstack 0
  5628   003214                     _I2C_MasterOpen:
  5629                           	callstack 20
  5630   003214                     
  5631                           ;mcc_generated_files/i2c_master.c: 546:     if(!SSPCON1bits.SSPEN)
  5632   003214  BAC6               	btfsc	198,5,c	;volatile
  5633   003216  EF0F  F019         	goto	u4011
  5634   00321A  EF11  F019         	goto	u4010
  5635   00321E                     u4011:
  5636   00321E  EF1A  F019         	goto	l609
  5637   003222                     u4010:
  5638   003222                     
  5639                           ;mcc_generated_files/i2c_master.c: 547:     {;mcc_generated_files/i2c_master.c: 548:    
      +                               SSPSTAT = 0x80;
  5640   003222  0E80               	movlw	128
  5641   003224  6EC7               	movwf	199,c	;volatile
  5642                           
  5643                           ;mcc_generated_files/i2c_master.c: 549:         SSPCON1 = 0x08;
  5644   003226  0E08               	movlw	8
  5645   003228  6EC6               	movwf	198,c	;volatile
  5646                           
  5647                           ;mcc_generated_files/i2c_master.c: 550:         SSPCON2 = 0x00;
  5648   00322A  0E00               	movlw	0
  5649   00322C  6EC5               	movwf	197,c	;volatile
  5650                           
  5651                           ;mcc_generated_files/i2c_master.c: 551:         SSPADD = 0x09;
  5652   00322E  0E09               	movlw	9
  5653   003230  6EC8               	movwf	200,c	;volatile
  5654   003232                     
  5655                           ;mcc_generated_files/i2c_master.c: 552:         SSPCON1bits.SSPEN = 1;
  5656   003232  8AC6               	bsf	198,5,c	;volatile
  5657   003234                     l609:
  5658   003234  0012               	return		;funcret
  5659   003236                     __end_of_I2C_MasterOpen:
  5660                           	callstack 0
  5661                           
  5662 ;; *************** function _I2C_MasterEnableIrq *****************
  5663 ;; Defined at:
  5664 ;;		line 627 in file "mcc_generated_files/i2c_master.c"
  5665 ;; Parameters:    Size  Location     Type
  5666 ;;		None
  5667 ;; Auto vars:     Size  Location     Type
  5668 ;;		None
  5669 ;; Return value:  Size  Location     Type
  5670 ;;                  1    wreg      void 
  5671 ;; Registers used:
  5672 ;;		None
  5673 ;; Tracked objects:
  5674 ;;		On entry : 0/0
  5675 ;;		On exit  : 0/0
  5676 ;;		Unchanged: 0/0
  5677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5682 ;;Total ram usage:        0 bytes
  5683 ;; Hardware stack levels used: 1
  5684 ;; Hardware stack levels required when called: 7
  5685 ;; This function calls:
  5686 ;;		Nothing
  5687 ;; This function is called by:
  5688 ;;		_I2C_Open
  5689 ;;		_I2C_SetTimeOut
  5690 ;; This function uses a non-reentrant model
  5691 ;;
  5692                           
  5693                           	psect	text51
  5694   003452                     __ptext51:
  5695                           	callstack 0
  5696   003452                     _I2C_MasterEnableIrq:
  5697                           	callstack 20
  5698   003452                     
  5699                           ;mcc_generated_files/i2c_master.c: 629:     PIE1bits.SSPIE = 1;
  5700   003452  869D               	bsf	157,3,c	;volatile
  5701   003454  0012               	return		;funcret
  5702   003456                     __end_of_I2C_MasterEnableIrq:
  5703                           	callstack 0
  5704                           
  5705 ;; *************** function _I2C_MasterWrite *****************
  5706 ;; Defined at:
  5707 ;;		line 252 in file "mcc_generated_files/i2c_master.c"
  5708 ;; Parameters:    Size  Location     Type
  5709 ;;		None
  5710 ;; Auto vars:     Size  Location     Type
  5711 ;;		None
  5712 ;; Return value:  Size  Location     Type
  5713 ;;                  1    wreg      enum E358
  5714 ;; Registers used:
  5715 ;;		wreg, status,2, cstack
  5716 ;; Tracked objects:
  5717 ;;		On entry : 0/0
  5718 ;;		On exit  : 0/0
  5719 ;;		Unchanged: 0/0
  5720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5725 ;;Total ram usage:        0 bytes
  5726 ;; Hardware stack levels used: 1
  5727 ;; Hardware stack levels required when called: 9
  5728 ;; This function calls:
  5729 ;;		_I2C_MasterOperation
  5730 ;; This function is called by:
  5731 ;;		_I2C_Read1ByteRegister
  5732 ;;		_I2C_Read2ByteRegister
  5733 ;;		_I2C_Write1ByteRegister
  5734 ;;		_I2C_Write2ByteRegister
  5735 ;;		_I2C_WriteNBytes
  5736 ;;		_I2C_ReadDataBlock
  5737 ;; This function uses a non-reentrant model
  5738 ;;
  5739                           
  5740                           	psect	text52
  5741   0033E8                     __ptext52:
  5742                           	callstack 0
  5743   0033E8                     _I2C_MasterWrite:
  5744                           	callstack 19
  5745   0033E8                     
  5746                           ;mcc_generated_files/i2c_master.c: 254:     return I2C_MasterOperation(0);;	Return value
      +                           of _I2C_MasterWrite is never used
  5747   0033E8  0E00               	movlw	0
  5748   0033EA  EC34  F017         	call	_I2C_MasterOperation
  5749   0033EE  0012               	return		;funcret
  5750   0033F0                     __end_of_I2C_MasterWrite:
  5751                           	callstack 0
  5752                           
  5753 ;; *************** function _I2C_MasterOperation *****************
  5754 ;; Defined at:
  5755 ;;		line 226 in file "mcc_generated_files/i2c_master.c"
  5756 ;; Parameters:    Size  Location     Type
  5757 ;;  read            1    wreg     _Bool 
  5758 ;; Auto vars:     Size  Location     Type
  5759 ;;  read            1   27[COMRAM] _Bool 
  5760 ;;  returnValue     1   28[COMRAM] enum E358
  5761 ;; Return value:  Size  Location     Type
  5762 ;;                  1    wreg      enum E358
  5763 ;; Registers used:
  5764 ;;		wreg, status,2, cstack
  5765 ;; Tracked objects:
  5766 ;;		On entry : 0/0
  5767 ;;		On exit  : 0/0
  5768 ;;		Unchanged: 0/0
  5769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5771 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5773 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5774 ;;Total ram usage:        2 bytes
  5775 ;; Hardware stack levels used: 1
  5776 ;; Hardware stack levels required when called: 8
  5777 ;; This function calls:
  5778 ;;		_I2C_MasterStart
  5779 ;; This function is called by:
  5780 ;;		_I2C_MasterWrite
  5781 ;;		_I2C_MasterRead
  5782 ;; This function uses a non-reentrant model
  5783 ;;
  5784                           
  5785                           	psect	text53
  5786   002E68                     __ptext53:
  5787                           	callstack 0
  5788   002E68                     _I2C_MasterOperation:
  5789                           	callstack 19
  5790                           
  5791                           ;incstack = 0
  5792                           ;I2C_MasterOperation@read stored from wreg
  5793   002E68  6E1C               	movwf	I2C_MasterOperation@read^0,c
  5794   002E6A                     
  5795                           ;mcc_generated_files/i2c_master.c: 226: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 227: {;mcc_generated_files/i2c_master.c: 228:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  5796   002E6A  0E01               	movlw	1
  5797   002E6C  6E1D               	movwf	I2C_MasterOperation@returnValue^0,c
  5798   002E6E                     
  5799                           ;mcc_generated_files/i2c_master.c: 229:     if(!I2C_Status.busy)
  5800   002E6E  0100               	movlb	0	; () banked
  5801   002E70  B383               	btfsc	(_I2C_Status+35)& (0+255),1,b
  5802   002E72  EF3D  F017         	goto	u4021
  5803   002E76  EF3F  F017         	goto	u4020
  5804   002E7A                     u4021:
  5805   002E7A  EF52  F017         	goto	l5340
  5806   002E7E                     u4020:
  5807   002E7E                     
  5808                           ; BSR set to: 0
  5809                           ;mcc_generated_files/i2c_master.c: 230:     {;mcc_generated_files/i2c_master.c: 231:    
      +                               I2C_Status.busy = 1;
  5810   002E7E  8383               	bsf	(_I2C_Status+35)& (0+255),1,b
  5811   002E80                     
  5812                           ; BSR set to: 0
  5813                           ;mcc_generated_files/i2c_master.c: 232:         returnValue = I2C_NOERR;
  5814   002E80  0E00               	movlw	0
  5815   002E82  6E1D               	movwf	I2C_MasterOperation@returnValue^0,c
  5816   002E84                     
  5817                           ; BSR set to: 0
  5818                           ;mcc_generated_files/i2c_master.c: 234:         if(read)
  5819   002E84  501C               	movf	I2C_MasterOperation@read^0,w,c
  5820   002E86  B4D8               	btfsc	status,2,c
  5821   002E88  EF48  F017         	goto	u4031
  5822   002E8C  EF4A  F017         	goto	u4030
  5823   002E90                     u4031:
  5824   002E90  EF4E  F017         	goto	l5336
  5825   002E94                     u4030:
  5826   002E94                     
  5827                           ; BSR set to: 0
  5828                           ;mcc_generated_files/i2c_master.c: 235:         {;mcc_generated_files/i2c_master.c: 236:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
  5829   002E94  0E01               	movlw	1
  5830   002E96  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  5831                           
  5832                           ;mcc_generated_files/i2c_master.c: 237:         }
  5833   002E98  EF50  F017         	goto	l5338
  5834   002E9C                     l5336:
  5835                           
  5836                           ; BSR set to: 0
  5837                           ;mcc_generated_files/i2c_master.c: 239:         {;mcc_generated_files/i2c_master.c: 240:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
  5838   002E9C  0E02               	movlw	2
  5839   002E9E  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  5840   002EA0                     l5338:
  5841                           
  5842                           ; BSR set to: 0
  5843                           ;mcc_generated_files/i2c_master.c: 242:         I2C_MasterStart();
  5844   002EA0  EC2B  F01A         	call	_I2C_MasterStart	;wreg free
  5845   002EA4                     l5340:
  5846                           
  5847                           ;mcc_generated_files/i2c_master.c: 244:     return returnValue;
  5848   002EA4  501D               	movf	I2C_MasterOperation@returnValue^0,w,c
  5849   002EA6  0012               	return		;funcret
  5850   002EA8                     __end_of_I2C_MasterOperation:
  5851                           	callstack 0
  5852                           
  5853 ;; *************** function _I2C_MasterStart *****************
  5854 ;; Defined at:
  5855 ;;		line 589 in file "mcc_generated_files/i2c_master.c"
  5856 ;; Parameters:    Size  Location     Type
  5857 ;;		None
  5858 ;; Auto vars:     Size  Location     Type
  5859 ;;		None
  5860 ;; Return value:  Size  Location     Type
  5861 ;;                  1    wreg      void 
  5862 ;; Registers used:
  5863 ;;		None
  5864 ;; Tracked objects:
  5865 ;;		On entry : 0/0
  5866 ;;		On exit  : 0/0
  5867 ;;		Unchanged: 0/0
  5868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5873 ;;Total ram usage:        0 bytes
  5874 ;; Hardware stack levels used: 1
  5875 ;; Hardware stack levels required when called: 7
  5876 ;; This function calls:
  5877 ;;		Nothing
  5878 ;; This function is called by:
  5879 ;;		_I2C_MasterOperation
  5880 ;; This function uses a non-reentrant model
  5881 ;;
  5882                           
  5883                           	psect	text54
  5884   003456                     __ptext54:
  5885                           	callstack 0
  5886   003456                     _I2C_MasterStart:
  5887                           	callstack 19
  5888   003456                     
  5889                           ;mcc_generated_files/i2c_master.c: 591:     SSPCON2bits.SEN = 1;
  5890   003456  80C5               	bsf	197,0,c	;volatile
  5891   003458  0012               	return		;funcret
  5892   00345A                     __end_of_I2C_MasterStart:
  5893                           	callstack 0
  5894                           
  5895 ;; *************** function _I2C_Close *****************
  5896 ;; Defined at:
  5897 ;;		line 211 in file "mcc_generated_files/i2c_master.c"
  5898 ;; Parameters:    Size  Location     Type
  5899 ;;		None
  5900 ;; Auto vars:     Size  Location     Type
  5901 ;;  returnValue     1   27[COMRAM] enum E358
  5902 ;; Return value:  Size  Location     Type
  5903 ;;                  1    wreg      enum E358
  5904 ;; Registers used:
  5905 ;;		wreg, status,2, cstack
  5906 ;; Tracked objects:
  5907 ;;		On entry : 0/0
  5908 ;;		On exit  : 0/0
  5909 ;;		Unchanged: 0/0
  5910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5912 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5914 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5915 ;;Total ram usage:        1 bytes
  5916 ;; Hardware stack levels used: 1
  5917 ;; Hardware stack levels required when called: 8
  5918 ;; This function calls:
  5919 ;;		_I2C_MasterClearIrq
  5920 ;;		_I2C_MasterClose
  5921 ;;		_I2C_MasterDisableIrq
  5922 ;; This function is called by:
  5923 ;;		_I2C_Read1ByteRegister
  5924 ;;		_I2C_Read2ByteRegister
  5925 ;;		_I2C_Write1ByteRegister
  5926 ;;		_I2C_Write2ByteRegister
  5927 ;;		_I2C_WriteNBytes
  5928 ;;		_I2C_ReadNBytes
  5929 ;;		_I2C_ReadDataBlock
  5930 ;; This function uses a non-reentrant model
  5931 ;;
  5932                           
  5933                           	psect	text55
  5934   003084                     __ptext55:
  5935                           	callstack 0
  5936   003084                     _I2C_Close:
  5937                           	callstack 20
  5938   003084                     
  5939                           ;mcc_generated_files/i2c_master.c: 213:     i2c_error_t returnValue = I2C_BUSY;
  5940   003084  0E01               	movlw	1
  5941   003086  6E1C               	movwf	I2C_Close@returnValue^0,c
  5942   003088                     
  5943                           ;mcc_generated_files/i2c_master.c: 214:     if(!I2C_Status.busy)
  5944   003088  0100               	movlb	0	; () banked
  5945   00308A  B383               	btfsc	(_I2C_Status+35)& (0+255),1,b
  5946   00308C  EF4A  F018         	goto	u4091
  5947   003090  EF4C  F018         	goto	u4090
  5948   003094                     u4091:
  5949   003094  EF56  F018         	goto	l5482
  5950   003098                     u4090:
  5951   003098                     
  5952                           ; BSR set to: 0
  5953                           ;mcc_generated_files/i2c_master.c: 215:     {;mcc_generated_files/i2c_master.c: 216:    
      +                               I2C_Status.inUse = 0;
  5954   003098  9583               	bcf	(_I2C_Status+35)& (0+255),2,b
  5955                           
  5956                           ;mcc_generated_files/i2c_master.c: 217:         I2C_Status.address = 0xff;
  5957   00309A  697C               	setf	(_I2C_Status+28)& (0+255),b
  5958   00309C                     
  5959                           ; BSR set to: 0
  5960                           ;mcc_generated_files/i2c_master.c: 218:         I2C_MasterClearIrq();
  5961   00309C  EC31  F01A         	call	_I2C_MasterClearIrq	;wreg free
  5962                           
  5963                           ;mcc_generated_files/i2c_master.c: 219:         I2C_MasterDisableIrq();
  5964   0030A0  EC2D  F01A         	call	_I2C_MasterDisableIrq	;wreg free
  5965                           
  5966                           ;mcc_generated_files/i2c_master.c: 220:         I2C_MasterClose();
  5967   0030A4  EC2F  F01A         	call	_I2C_MasterClose	;wreg free
  5968   0030A8                     
  5969                           ;mcc_generated_files/i2c_master.c: 221:         returnValue = I2C_Status.error;
  5970   0030A8  C082  F01C         	movff	_I2C_Status+34,I2C_Close@returnValue
  5971   0030AC                     l5482:
  5972                           
  5973                           ;mcc_generated_files/i2c_master.c: 223:     return returnValue;
  5974   0030AC  501C               	movf	I2C_Close@returnValue^0,w,c
  5975   0030AE  0012               	return		;funcret
  5976   0030B0                     __end_of_I2C_Close:
  5977                           	callstack 0
  5978                           
  5979 ;; *************** function _I2C_MasterDisableIrq *****************
  5980 ;; Defined at:
  5981 ;;		line 637 in file "mcc_generated_files/i2c_master.c"
  5982 ;; Parameters:    Size  Location     Type
  5983 ;;		None
  5984 ;; Auto vars:     Size  Location     Type
  5985 ;;		None
  5986 ;; Return value:  Size  Location     Type
  5987 ;;                  1    wreg      void 
  5988 ;; Registers used:
  5989 ;;		None
  5990 ;; Tracked objects:
  5991 ;;		On entry : 0/0
  5992 ;;		On exit  : 0/0
  5993 ;;		Unchanged: 0/0
  5994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5999 ;;Total ram usage:        0 bytes
  6000 ;; Hardware stack levels used: 1
  6001 ;; Hardware stack levels required when called: 7
  6002 ;; This function calls:
  6003 ;;		Nothing
  6004 ;; This function is called by:
  6005 ;;		_I2C_Close
  6006 ;;		_I2C_SetTimeOut
  6007 ;; This function uses a non-reentrant model
  6008 ;;
  6009                           
  6010                           	psect	text56
  6011   00345A                     __ptext56:
  6012                           	callstack 0
  6013   00345A                     _I2C_MasterDisableIrq:
  6014                           	callstack 20
  6015   00345A                     
  6016                           ;mcc_generated_files/i2c_master.c: 639:     PIE1bits.SSPIE = 0;
  6017   00345A  969D               	bcf	157,3,c	;volatile
  6018   00345C  0012               	return		;funcret
  6019   00345E                     __end_of_I2C_MasterDisableIrq:
  6020                           	callstack 0
  6021                           
  6022 ;; *************** function _I2C_MasterClose *****************
  6023 ;; Defined at:
  6024 ;;		line 558 in file "mcc_generated_files/i2c_master.c"
  6025 ;; Parameters:    Size  Location     Type
  6026 ;;		None
  6027 ;; Auto vars:     Size  Location     Type
  6028 ;;		None
  6029 ;; Return value:  Size  Location     Type
  6030 ;;                  1    wreg      void 
  6031 ;; Registers used:
  6032 ;;		None
  6033 ;; Tracked objects:
  6034 ;;		On entry : 0/0
  6035 ;;		On exit  : 0/0
  6036 ;;		Unchanged: 0/0
  6037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6042 ;;Total ram usage:        0 bytes
  6043 ;; Hardware stack levels used: 1
  6044 ;; Hardware stack levels required when called: 7
  6045 ;; This function calls:
  6046 ;;		Nothing
  6047 ;; This function is called by:
  6048 ;;		_I2C_Close
  6049 ;; This function uses a non-reentrant model
  6050 ;;
  6051                           
  6052                           	psect	text57
  6053   00345E                     __ptext57:
  6054                           	callstack 0
  6055   00345E                     _I2C_MasterClose:
  6056                           	callstack 20
  6057   00345E                     
  6058                           ;mcc_generated_files/i2c_master.c: 561:     SSPCON1bits.SSPEN = 0;
  6059   00345E  9AC6               	bcf	198,5,c	;volatile
  6060   003460  0012               	return		;funcret
  6061   003462                     __end_of_I2C_MasterClose:
  6062                           	callstack 0
  6063                           
  6064 ;; *************** function _I2C_MasterClearIrq *****************
  6065 ;; Defined at:
  6066 ;;		line 642 in file "mcc_generated_files/i2c_master.c"
  6067 ;; Parameters:    Size  Location     Type
  6068 ;;		None
  6069 ;; Auto vars:     Size  Location     Type
  6070 ;;		None
  6071 ;; Return value:  Size  Location     Type
  6072 ;;                  1    wreg      void 
  6073 ;; Registers used:
  6074 ;;		None
  6075 ;; Tracked objects:
  6076 ;;		On entry : 0/0
  6077 ;;		On exit  : 0/0
  6078 ;;		Unchanged: 0/0
  6079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6084 ;;Total ram usage:        0 bytes
  6085 ;; Hardware stack levels used: 1
  6086 ;; Hardware stack levels required when called: 7
  6087 ;; This function calls:
  6088 ;;		Nothing
  6089 ;; This function is called by:
  6090 ;;		_I2C_Open
  6091 ;;		_I2C_Close
  6092 ;; This function uses a non-reentrant model
  6093 ;;
  6094                           
  6095                           	psect	text58
  6096   003462                     __ptext58:
  6097                           	callstack 0
  6098   003462                     _I2C_MasterClearIrq:
  6099                           	callstack 20
  6100   003462                     
  6101                           ;mcc_generated_files/i2c_master.c: 644:     PIR1bits.SSPIF = 0;
  6102   003462  969E               	bcf	158,3,c	;volatile
  6103   003464  0012               	return		;funcret
  6104   003466                     __end_of_I2C_MasterClearIrq:
  6105                           	callstack 0
  6106                           
  6107 ;; *************** function _LDR_reading *****************
  6108 ;; Defined at:
  6109 ;;		line 15 in file "ECUAL/LDR/LDR.c"
  6110 ;; Parameters:    Size  Location     Type
  6111 ;;  AN_channel      1    wreg     enum E3336
  6112 ;; Auto vars:     Size  Location     Type
  6113 ;;  AN_channel      1   16[BANK1 ] enum E3336
  6114 ;;  bright          2   17[BANK1 ] unsigned short 
  6115 ;; Return value:  Size  Location     Type
  6116 ;;                  2   12[BANK1 ] unsigned short 
  6117 ;; Registers used:
  6118 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6119 ;; Tracked objects:
  6120 ;;		On entry : 0/0
  6121 ;;		On exit  : 0/0
  6122 ;;		Unchanged: 0/0
  6123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6124 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6125 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6126 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6127 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6128 ;;Total ram usage:        7 bytes
  6129 ;; Hardware stack levels used: 1
  6130 ;; Hardware stack levels required when called: 9
  6131 ;; This function calls:
  6132 ;;		_ADC_GetConversion
  6133 ;;		___flmul
  6134 ;;		___flsub
  6135 ;;		___fltol
  6136 ;;		___xxtofl
  6137 ;; This function is called by:
  6138 ;;		_main
  6139 ;; This function uses a non-reentrant model
  6140 ;;
  6141                           
  6142                           	psect	text59
  6143   002340                     __ptext59:
  6144                           	callstack 0
  6145   002340                     _LDR_reading:
  6146                           	callstack 21
  6147                           
  6148                           ;incstack = 0
  6149                           ;LDR_reading@AN_channel stored from wreg
  6150   002340  0101               	movlb	1	; () banked
  6151   002342  6F10               	movwf	LDR_reading@AN_channel& (0+255),b
  6152   002344                     
  6153                           ;ECUAL/LDR/LDR.c: 19:     bright = ADC_GetConversion (AN_channel);
  6154   002344  0101               	movlb	1	; () banked
  6155   002346  5110               	movf	LDR_reading@AN_channel& (0+255),w,b
  6156   002348  EC72  F017         	call	_ADC_GetConversion
  6157   00234C  C01C  F111         	movff	?_ADC_GetConversion,LDR_reading@bright
  6158   002350  C01D  F112         	movff	?_ADC_GetConversion+1,LDR_reading@bright+1
  6159   002354                     
  6160                           ;ECUAL/LDR/LDR.c: 22:     bright = (uint8_t)(100 - ((bright - 49) * 0.102));
  6161   002354  0E60               	movlw	96
  6162   002356  0100               	movlb	0	; () banked
  6163   002358  6FE1               	movwf	___flmul@a& (0+255),b
  6164   00235A  0EE5               	movlw	229
  6165   00235C  6FE2               	movwf	(___flmul@a+1)& (0+255),b
  6166   00235E  0ED0               	movlw	208
  6167   002360  6FE3               	movwf	(___flmul@a+2)& (0+255),b
  6168   002362  0E3D               	movlw	61
  6169   002364  6FE4               	movwf	(___flmul@a+3)& (0+255),b
  6170   002366  0ECF               	movlw	207
  6171   002368  0101               	movlb	1	; () banked
  6172   00236A  2511               	addwf	LDR_reading@bright& (0+255),w,b
  6173   00236C  6F0E               	movwf	??_LDR_reading& (0+255),b
  6174   00236E  0EFF               	movlw	255
  6175   002370  2112               	addwfc	(LDR_reading@bright+1)& (0+255),w,b
  6176   002372  6F0F               	movwf	(??_LDR_reading+1)& (0+255),b
  6177   002374  C10E  F01C         	movff	??_LDR_reading,___xxtofl@val
  6178   002378  C10F  F01D         	movff	??_LDR_reading+1,___xxtofl@val+1
  6179   00237C  6A1E               	clrf	(___xxtofl@val+2)^0,c
  6180   00237E  6A1F               	clrf	(___xxtofl@val+3)^0,c
  6181   002380  0E00               	movlw	0
  6182   002382  EC99  F00D         	call	___xxtofl
  6183   002386  C01C  F0DD         	movff	?___xxtofl,___flmul@b
  6184   00238A  C01D  F0DE         	movff	?___xxtofl+1,___flmul@b+1
  6185   00238E  C01E  F0DF         	movff	?___xxtofl+2,___flmul@b+2
  6186   002392  C01F  F0E0         	movff	?___xxtofl+3,___flmul@b+3
  6187   002396  EC9F  F00A         	call	___flmul	;wreg free
  6188   00239A  C0DD  F104         	movff	?___flmul,___flsub@a
  6189   00239E  C0DE  F105         	movff	?___flmul+1,___flsub@a+1
  6190   0023A2  C0DF  F106         	movff	?___flmul+2,___flsub@a+2
  6191   0023A6  C0E0  F107         	movff	?___flmul+3,___flsub@a+3
  6192   0023AA  0E00               	movlw	0
  6193   0023AC  0101               	movlb	1	; () banked
  6194   0023AE  6F00               	movwf	___flsub@b& (0+255),b
  6195   0023B0  0E00               	movlw	0
  6196   0023B2  6F01               	movwf	(___flsub@b+1)& (0+255),b
  6197   0023B4  0EC8               	movlw	200
  6198   0023B6  6F02               	movwf	(___flsub@b+2)& (0+255),b
  6199   0023B8  0E42               	movlw	66
  6200   0023BA  6F03               	movwf	(___flsub@b+3)& (0+255),b
  6201   0023BC  ECAD  F016         	call	___flsub	;wreg free
  6202   0023C0  C100  F0F2         	movff	?___flsub,___fltol@f1
  6203   0023C4  C101  F0F3         	movff	?___flsub+1,___fltol@f1+1
  6204   0023C8  C102  F0F4         	movff	?___flsub+2,___fltol@f1+2
  6205   0023CC  C103  F0F5         	movff	?___flsub+3,___fltol@f1+3
  6206   0023D0  EC4C  F00F         	call	___fltol	;wreg free
  6207   0023D4  0100               	movlb	0	; () banked
  6208   0023D6  51F2               	movf	?___fltol& (0+255),w,b
  6209   0023D8  0101               	movlb	1	; () banked
  6210   0023DA  6F11               	movwf	LDR_reading@bright& (0+255),b
  6211   0023DC  6B12               	clrf	(LDR_reading@bright+1)& (0+255),b
  6212   0023DE                     
  6213                           ; BSR set to: 1
  6214                           ;ECUAL/LDR/LDR.c: 24:     return bright;
  6215   0023DE  C111  F10C         	movff	LDR_reading@bright,?_LDR_reading
  6216   0023E2  C112  F10D         	movff	LDR_reading@bright+1,?_LDR_reading+1
  6217   0023E6                     
  6218                           ; BSR set to: 1
  6219   0023E6  0012               	return		;funcret
  6220   0023E8                     __end_of_LDR_reading:
  6221                           	callstack 0
  6222                           
  6223 ;; *************** function ___xxtofl *****************
  6224 ;; Defined at:
  6225 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  6226 ;; Parameters:    Size  Location     Type
  6227 ;;  sign            1    wreg     unsigned char 
  6228 ;;  val             4   27[COMRAM] long 
  6229 ;; Auto vars:     Size  Location     Type
  6230 ;;  sign            1    0[BANK0 ] unsigned char 
  6231 ;;  arg             4    2[BANK0 ] unsigned long 
  6232 ;;  exp             1    1[BANK0 ] unsigned char 
  6233 ;; Return value:  Size  Location     Type
  6234 ;;                  4   27[COMRAM] unsigned char 
  6235 ;; Registers used:
  6236 ;;		wreg, status,2, status,0
  6237 ;; Tracked objects:
  6238 ;;		On entry : 0/0
  6239 ;;		On exit  : 0/0
  6240 ;;		Unchanged: 0/0
  6241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6242 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6243 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6244 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6245 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6246 ;;Total ram usage:       14 bytes
  6247 ;; Hardware stack levels used: 1
  6248 ;; Hardware stack levels required when called: 7
  6249 ;; This function calls:
  6250 ;;		Nothing
  6251 ;; This function is called by:
  6252 ;;		_read_HS1101_moist_percent
  6253 ;;		_LDR_reading
  6254 ;; This function uses a non-reentrant model
  6255 ;;
  6256                           
  6257                           	psect	text60
  6258   001B32                     __ptext60:
  6259                           	callstack 0
  6260   001B32                     ___xxtofl:
  6261                           	callstack 22
  6262                           
  6263                           ; BSR set to: 1
  6264                           ;incstack = 0
  6265                           ;___xxtofl@sign stored from wreg
  6266   001B32  0100               	movlb	0	; () banked
  6267   001B34  6FD7               	movwf	___xxtofl@sign& (0+255),b
  6268   001B36  0100               	movlb	0	; () banked
  6269   001B38  51D7               	movf	___xxtofl@sign& (0+255),w,b
  6270   001B3A  B4D8               	btfsc	status,2,c
  6271   001B3C  EFA2  F00D         	goto	u4821
  6272   001B40  EFA4  F00D         	goto	u4820
  6273   001B44                     u4821:
  6274   001B44  EFC6  F00D         	goto	l1649
  6275   001B48                     u4820:
  6276   001B48                     
  6277                           ; BSR set to: 0
  6278   001B48  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
  6279   001B4A  EFAB  F00D         	goto	u4830
  6280   001B4E  EFA9  F00D         	goto	u4831
  6281   001B52                     u4831:
  6282   001B52  EFC6  F00D         	goto	l1649
  6283   001B56                     u4830:
  6284   001B56                     
  6285                           ; BSR set to: 0
  6286   001B56  C01C  F020         	movff	___xxtofl@val,??___xxtofl
  6287   001B5A  C01D  F021         	movff	___xxtofl@val+1,??___xxtofl+1
  6288   001B5E  C01E  F022         	movff	___xxtofl@val+2,??___xxtofl+2
  6289   001B62  C01F  F023         	movff	___xxtofl@val+3,??___xxtofl+3
  6290   001B66  1E20               	comf	??___xxtofl^0,f,c
  6291   001B68  1E21               	comf	(??___xxtofl+1)^0,f,c
  6292   001B6A  1E22               	comf	(??___xxtofl+2)^0,f,c
  6293   001B6C  1E23               	comf	(??___xxtofl+3)^0,f,c
  6294   001B6E  2A20               	incf	??___xxtofl^0,f,c
  6295   001B70  0E00               	movlw	0
  6296   001B72  2221               	addwfc	(??___xxtofl+1)^0,f,c
  6297   001B74  2222               	addwfc	(??___xxtofl+2)^0,f,c
  6298   001B76  2223               	addwfc	(??___xxtofl+3)^0,f,c
  6299   001B78  C020  F0D9         	movff	??___xxtofl,___xxtofl@arg
  6300   001B7C  C021  F0DA         	movff	??___xxtofl+1,___xxtofl@arg+1
  6301   001B80  C022  F0DB         	movff	??___xxtofl+2,___xxtofl@arg+2
  6302   001B84  C023  F0DC         	movff	??___xxtofl+3,___xxtofl@arg+3
  6303   001B88  EFCE  F00D         	goto	l5948
  6304   001B8C                     l1649:
  6305                           
  6306                           ; BSR set to: 0
  6307   001B8C  C01C  F0D9         	movff	___xxtofl@val,___xxtofl@arg
  6308   001B90  C01D  F0DA         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6309   001B94  C01E  F0DB         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6310   001B98  C01F  F0DC         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6311   001B9C                     l5948:
  6312                           
  6313                           ; BSR set to: 0
  6314   001B9C  501C               	movf	___xxtofl@val^0,w,c
  6315   001B9E  101D               	iorwf	(___xxtofl@val+1)^0,w,c
  6316   001BA0  101E               	iorwf	(___xxtofl@val+2)^0,w,c
  6317   001BA2  101F               	iorwf	(___xxtofl@val+3)^0,w,c
  6318   001BA4  A4D8               	btfss	status,2,c
  6319   001BA6  EFD7  F00D         	goto	u4841
  6320   001BAA  EFD9  F00D         	goto	u4840
  6321   001BAE                     u4841:
  6322   001BAE  EFE3  F00D         	goto	l5954
  6323   001BB2                     u4840:
  6324   001BB2                     
  6325                           ; BSR set to: 0
  6326   001BB2  0E00               	movlw	0
  6327   001BB4  6E1C               	movwf	?___xxtofl^0,c
  6328   001BB6  0E00               	movlw	0
  6329   001BB8  6E1D               	movwf	(?___xxtofl+1)^0,c
  6330   001BBA  0E00               	movlw	0
  6331   001BBC  6E1E               	movwf	(?___xxtofl+2)^0,c
  6332   001BBE  0E00               	movlw	0
  6333   001BC0  6E1F               	movwf	(?___xxtofl+3)^0,c
  6334   001BC2  EF74  F00E         	goto	l1652
  6335   001BC6                     l5954:
  6336                           
  6337                           ; BSR set to: 0
  6338   001BC6  0E96               	movlw	150
  6339   001BC8  6FD8               	movwf	___xxtofl@exp& (0+255),b
  6340   001BCA  EFED  F00D         	goto	l5958
  6341   001BCE                     l5956:
  6342                           
  6343                           ; BSR set to: 0
  6344   001BCE  2BD8               	incf	___xxtofl@exp& (0+255),f,b
  6345   001BD0  90D8               	bcf	status,0,c
  6346   001BD2  33DC               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6347   001BD4  33DB               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6348   001BD6  33DA               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6349   001BD8  33D9               	rrcf	___xxtofl@arg& (0+255),f,b
  6350   001BDA                     l5958:
  6351                           
  6352                           ; BSR set to: 0
  6353   001BDA  0E00               	movlw	0
  6354   001BDC  15D9               	andwf	___xxtofl@arg& (0+255),w,b
  6355   001BDE  6E20               	movwf	??___xxtofl^0,c
  6356   001BE0  0E00               	movlw	0
  6357   001BE2  15DA               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6358   001BE4  6E21               	movwf	(??___xxtofl+1)^0,c
  6359   001BE6  0E00               	movlw	0
  6360   001BE8  15DB               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6361   001BEA  6E22               	movwf	(??___xxtofl+2)^0,c
  6362   001BEC  0EFE               	movlw	254
  6363   001BEE  15DC               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6364   001BF0  6E23               	movwf	(??___xxtofl+3)^0,c
  6365   001BF2  5020               	movf	??___xxtofl^0,w,c
  6366   001BF4  1021               	iorwf	(??___xxtofl+1)^0,w,c
  6367   001BF6  1022               	iorwf	(??___xxtofl+2)^0,w,c
  6368   001BF8  1023               	iorwf	(??___xxtofl+3)^0,w,c
  6369   001BFA  A4D8               	btfss	status,2,c
  6370   001BFC  EF02  F00E         	goto	u4851
  6371   001C00  EF04  F00E         	goto	u4850
  6372   001C04                     u4851:
  6373   001C04  EFE7  F00D         	goto	l5956
  6374   001C08                     u4850:
  6375   001C08  EF12  F00E         	goto	l1656
  6376   001C0C                     l5960:
  6377                           
  6378                           ; BSR set to: 0
  6379   001C0C  2BD8               	incf	___xxtofl@exp& (0+255),f,b
  6380   001C0E                     
  6381                           ; BSR set to: 0
  6382   001C0E  0E01               	movlw	1
  6383   001C10  27D9               	addwf	___xxtofl@arg& (0+255),f,b
  6384   001C12  0E00               	movlw	0
  6385   001C14  23DA               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  6386   001C16  23DB               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  6387   001C18  23DC               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  6388   001C1A                     
  6389                           ; BSR set to: 0
  6390   001C1A  90D8               	bcf	status,0,c
  6391   001C1C  33DC               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6392   001C1E  33DB               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6393   001C20  33DA               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6394   001C22  33D9               	rrcf	___xxtofl@arg& (0+255),f,b
  6395   001C24                     l1656:
  6396                           
  6397                           ; BSR set to: 0
  6398   001C24  0E00               	movlw	0
  6399   001C26  15D9               	andwf	___xxtofl@arg& (0+255),w,b
  6400   001C28  6E20               	movwf	??___xxtofl^0,c
  6401   001C2A  0E00               	movlw	0
  6402   001C2C  15DA               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6403   001C2E  6E21               	movwf	(??___xxtofl+1)^0,c
  6404   001C30  0E00               	movlw	0
  6405   001C32  15DB               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6406   001C34  6E22               	movwf	(??___xxtofl+2)^0,c
  6407   001C36  0EFF               	movlw	255
  6408   001C38  15DC               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6409   001C3A  6E23               	movwf	(??___xxtofl+3)^0,c
  6410   001C3C  5020               	movf	??___xxtofl^0,w,c
  6411   001C3E  1021               	iorwf	(??___xxtofl+1)^0,w,c
  6412   001C40  1022               	iorwf	(??___xxtofl+2)^0,w,c
  6413   001C42  1023               	iorwf	(??___xxtofl+3)^0,w,c
  6414   001C44  A4D8               	btfss	status,2,c
  6415   001C46  EF27  F00E         	goto	u4861
  6416   001C4A  EF29  F00E         	goto	u4860
  6417   001C4E                     u4861:
  6418   001C4E  EF06  F00E         	goto	l5960
  6419   001C52                     u4860:
  6420   001C52  EF31  F00E         	goto	l5968
  6421   001C56                     l5966:
  6422                           
  6423                           ; BSR set to: 0
  6424   001C56  07D8               	decf	___xxtofl@exp& (0+255),f,b
  6425   001C58  90D8               	bcf	status,0,c
  6426   001C5A  37D9               	rlcf	___xxtofl@arg& (0+255),f,b
  6427   001C5C  37DA               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  6428   001C5E  37DB               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  6429   001C60  37DC               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  6430   001C62                     l5968:
  6431                           
  6432                           ; BSR set to: 0
  6433   001C62  BFDB               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  6434   001C64  EF36  F00E         	goto	u4871
  6435   001C68  EF38  F00E         	goto	u4870
  6436   001C6C                     u4871:
  6437   001C6C  EF40  F00E         	goto	l1663
  6438   001C70                     u4870:
  6439   001C70                     
  6440                           ; BSR set to: 0
  6441   001C70  0E02               	movlw	2
  6442   001C72  61D8               	cpfslt	___xxtofl@exp& (0+255),b
  6443   001C74  EF3E  F00E         	goto	u4881
  6444   001C78  EF40  F00E         	goto	u4880
  6445   001C7C                     u4881:
  6446   001C7C  EF2B  F00E         	goto	l5966
  6447   001C80                     u4880:
  6448   001C80                     l1663:
  6449                           
  6450                           ; BSR set to: 0
  6451   001C80  B1D8               	btfsc	___xxtofl@exp& (0+255),0,b
  6452   001C82  EF45  F00E         	goto	u4891
  6453   001C86  EF47  F00E         	goto	u4890
  6454   001C8A                     u4891:
  6455   001C8A  EF48  F00E         	goto	l5974
  6456   001C8E                     u4890:
  6457   001C8E                     
  6458                           ; BSR set to: 0
  6459   001C8E  9FDB               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  6460   001C90                     l5974:
  6461                           
  6462                           ; BSR set to: 0
  6463   001C90  90D8               	bcf	status,0,c
  6464   001C92  33D8               	rrcf	___xxtofl@exp& (0+255),f,b
  6465   001C94                     
  6466                           ; BSR set to: 0
  6467   001C94  C0D8  F020         	movff	___xxtofl@exp,??___xxtofl
  6468   001C98  6A21               	clrf	(??___xxtofl+1)^0,c
  6469   001C9A  6A22               	clrf	(??___xxtofl+2)^0,c
  6470   001C9C  6A23               	clrf	(??___xxtofl+3)^0,c
  6471   001C9E  C020  F023         	movff	??___xxtofl,??___xxtofl+3
  6472   001CA2  6A22               	clrf	(??___xxtofl+2)^0,c
  6473   001CA4  6A21               	clrf	(??___xxtofl+1)^0,c
  6474   001CA6  6A20               	clrf	??___xxtofl^0,c
  6475   001CA8  5020               	movf	??___xxtofl^0,w,c
  6476   001CAA  13D9               	iorwf	___xxtofl@arg& (0+255),f,b
  6477   001CAC  5021               	movf	(??___xxtofl+1)^0,w,c
  6478   001CAE  13DA               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  6479   001CB0  5022               	movf	(??___xxtofl+2)^0,w,c
  6480   001CB2  13DB               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  6481   001CB4  5023               	movf	(??___xxtofl+3)^0,w,c
  6482   001CB6  13DC               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  6483   001CB8                     
  6484                           ; BSR set to: 0
  6485   001CB8  51D7               	movf	___xxtofl@sign& (0+255),w,b
  6486   001CBA  B4D8               	btfsc	status,2,c
  6487   001CBC  EF62  F00E         	goto	u4901
  6488   001CC0  EF64  F00E         	goto	u4900
  6489   001CC4                     u4901:
  6490   001CC4  EF6C  F00E         	goto	l5984
  6491   001CC8                     u4900:
  6492   001CC8                     
  6493                           ; BSR set to: 0
  6494   001CC8  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
  6495   001CCA  EF6B  F00E         	goto	u4910
  6496   001CCE  EF69  F00E         	goto	u4911
  6497   001CD2                     u4911:
  6498   001CD2  EF6C  F00E         	goto	l5984
  6499   001CD6                     u4910:
  6500   001CD6                     
  6501                           ; BSR set to: 0
  6502   001CD6  8FDC               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  6503   001CD8                     l5984:
  6504                           
  6505                           ; BSR set to: 0
  6506   001CD8  C0D9  F01C         	movff	___xxtofl@arg,?___xxtofl
  6507   001CDC  C0DA  F01D         	movff	___xxtofl@arg+1,?___xxtofl+1
  6508   001CE0  C0DB  F01E         	movff	___xxtofl@arg+2,?___xxtofl+2
  6509   001CE4  C0DC  F01F         	movff	___xxtofl@arg+3,?___xxtofl+3
  6510   001CE8                     l1652:
  6511                           
  6512                           ; BSR set to: 0
  6513   001CE8  0012               	return		;funcret
  6514   001CEA                     __end_of___xxtofl:
  6515                           	callstack 0
  6516                           
  6517 ;; *************** function ___fltol *****************
  6518 ;; Defined at:
  6519 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  6520 ;; Parameters:    Size  Location     Type
  6521 ;;  f1              4   27[BANK0 ] unsigned char 
  6522 ;; Auto vars:     Size  Location     Type
  6523 ;;  exp1            1   32[BANK0 ] unsigned char 
  6524 ;;  sign1           1   31[BANK0 ] unsigned char 
  6525 ;; Return value:  Size  Location     Type
  6526 ;;                  4   27[BANK0 ] long 
  6527 ;; Registers used:
  6528 ;;		wreg, status,2, status,0
  6529 ;; Tracked objects:
  6530 ;;		On entry : 0/0
  6531 ;;		On exit  : 0/0
  6532 ;;		Unchanged: 0/0
  6533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6534 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6535 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6536 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6537 ;;      Totals:         0       6       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6538 ;;Total ram usage:       10 bytes
  6539 ;; Hardware stack levels used: 1
  6540 ;; Hardware stack levels required when called: 7
  6541 ;; This function calls:
  6542 ;;		Nothing
  6543 ;; This function is called by:
  6544 ;;		_read_HS1101_moist_percent
  6545 ;;		_LDR_reading
  6546 ;; This function uses a non-reentrant model
  6547 ;;
  6548                           
  6549                           	psect	text61
  6550   001E98                     __ptext61:
  6551                           	callstack 0
  6552   001E98                     ___fltol:
  6553                           	callstack 22
  6554   001E98  0100               	movlb	0	; () banked
  6555   001E9A  35F4               	rlcf	(___fltol@f1+2)& (0+255),w,b
  6556   001E9C  35F5               	rlcf	(___fltol@f1+3)& (0+255),w,b
  6557   001E9E  6FF7               	movwf	___fltol@exp1& (0+255),b
  6558   001EA0  51F7               	movf	___fltol@exp1& (0+255),w,b
  6559   001EA2  A4D8               	btfss	status,2,c
  6560   001EA4  EF56  F00F         	goto	u4751
  6561   001EA8  EF58  F00F         	goto	u4750
  6562   001EAC                     u4751:
  6563   001EAC  EF62  F00F         	goto	l5904
  6564   001EB0                     u4750:
  6565   001EB0                     l5900:
  6566                           
  6567                           ; BSR set to: 0
  6568   001EB0  0E00               	movlw	0
  6569   001EB2  6FF2               	movwf	?___fltol& (0+255),b
  6570   001EB4  0E00               	movlw	0
  6571   001EB6  6FF3               	movwf	(?___fltol+1)& (0+255),b
  6572   001EB8  0E00               	movlw	0
  6573   001EBA  6FF4               	movwf	(?___fltol+2)& (0+255),b
  6574   001EBC  0E00               	movlw	0
  6575   001EBE  6FF5               	movwf	(?___fltol+3)& (0+255),b
  6576   001EC0  EFD1  F00F         	goto	l1291
  6577   001EC4                     l5904:
  6578                           
  6579                           ; BSR set to: 0
  6580   001EC4  C0F2  F108         	movff	___fltol@f1,??___fltol
  6581   001EC8  C0F3  F109         	movff	___fltol@f1+1,??___fltol+1
  6582   001ECC  C0F4  F10A         	movff	___fltol@f1+2,??___fltol+2
  6583   001ED0  C0F5  F10B         	movff	___fltol@f1+3,??___fltol+3
  6584   001ED4  0E20               	movlw	32
  6585   001ED6  EF73  F00F         	goto	u4760
  6586   001EDA                     u4765:
  6587   001EDA  0101               	movlb	1	; () banked
  6588   001EDC  90D8               	bcf	status,0,c
  6589   001EDE  330B               	rrcf	(??___fltol+3)& (0+255),f,b
  6590   001EE0  330A               	rrcf	(??___fltol+2)& (0+255),f,b
  6591   001EE2  3309               	rrcf	(??___fltol+1)& (0+255),f,b
  6592   001EE4  3308               	rrcf	??___fltol& (0+255),f,b
  6593   001EE6                     u4760:
  6594   001EE6  2EE8               	decfsz	wreg,f,c
  6595   001EE8  EF6D  F00F         	goto	u4765
  6596   001EEC  5108               	movf	??___fltol& (0+255),w,b
  6597   001EEE  0100               	movlb	0	; () banked
  6598   001EF0  6FF6               	movwf	___fltol@sign1& (0+255),b
  6599   001EF2                     
  6600                           ; BSR set to: 0
  6601   001EF2  8FF4               	bsf	(___fltol@f1+2)& (0+255),7,b
  6602   001EF4                     
  6603                           ; BSR set to: 0
  6604   001EF4  0EFF               	movlw	255
  6605   001EF6  17F2               	andwf	___fltol@f1& (0+255),f,b
  6606   001EF8  0EFF               	movlw	255
  6607   001EFA  17F3               	andwf	(___fltol@f1+1)& (0+255),f,b
  6608   001EFC  0EFF               	movlw	255
  6609   001EFE  17F4               	andwf	(___fltol@f1+2)& (0+255),f,b
  6610   001F00  0E00               	movlw	0
  6611   001F02  17F5               	andwf	(___fltol@f1+3)& (0+255),f,b
  6612   001F04                     
  6613                           ; BSR set to: 0
  6614   001F04  0E96               	movlw	150
  6615   001F06  5FF7               	subwf	___fltol@exp1& (0+255),f,b
  6616   001F08                     
  6617                           ; BSR set to: 0
  6618   001F08  BFF7               	btfsc	___fltol@exp1& (0+255),7,b
  6619   001F0A  EF8B  F00F         	goto	u4770
  6620   001F0E  EF89  F00F         	goto	u4771
  6621   001F12                     u4771:
  6622   001F12  EFA1  F00F         	goto	l5924
  6623   001F16                     u4770:
  6624   001F16                     
  6625                           ; BSR set to: 0
  6626   001F16  51F7               	movf	___fltol@exp1& (0+255),w,b
  6627   001F18  0A80               	xorlw	128
  6628   001F1A  0F97               	addlw	151
  6629   001F1C  B0D8               	btfsc	status,0,c
  6630   001F1E  EF93  F00F         	goto	u4781
  6631   001F22  EF95  F00F         	goto	u4780
  6632   001F26                     u4781:
  6633   001F26  EF97  F00F         	goto	l5920
  6634   001F2A                     u4780:
  6635   001F2A  EF58  F00F         	goto	l5900
  6636   001F2E                     l5920:
  6637                           
  6638                           ; BSR set to: 0
  6639   001F2E  90D8               	bcf	status,0,c
  6640   001F30  33F5               	rrcf	(___fltol@f1+3)& (0+255),f,b
  6641   001F32  33F4               	rrcf	(___fltol@f1+2)& (0+255),f,b
  6642   001F34  33F3               	rrcf	(___fltol@f1+1)& (0+255),f,b
  6643   001F36  33F2               	rrcf	___fltol@f1& (0+255),f,b
  6644   001F38                     
  6645                           ; BSR set to: 0
  6646   001F38  3FF7               	incfsz	___fltol@exp1& (0+255),f,b
  6647   001F3A  EF97  F00F         	goto	l5920
  6648   001F3E  EFB9  F00F         	goto	l5934
  6649   001F42                     l5924:
  6650                           
  6651                           ; BSR set to: 0
  6652   001F42  0E1F               	movlw	31
  6653   001F44  65F7               	cpfsgt	___fltol@exp1& (0+255),b
  6654   001F46  EFA7  F00F         	goto	u4791
  6655   001F4A  EFA9  F00F         	goto	u4790
  6656   001F4E                     u4791:
  6657   001F4E  EFB1  F00F         	goto	l5932
  6658   001F52                     u4790:
  6659   001F52  EF58  F00F         	goto	l5900
  6660   001F56                     l5930:
  6661                           
  6662                           ; BSR set to: 0
  6663   001F56  90D8               	bcf	status,0,c
  6664   001F58  37F2               	rlcf	___fltol@f1& (0+255),f,b
  6665   001F5A  37F3               	rlcf	(___fltol@f1+1)& (0+255),f,b
  6666   001F5C  37F4               	rlcf	(___fltol@f1+2)& (0+255),f,b
  6667   001F5E  37F5               	rlcf	(___fltol@f1+3)& (0+255),f,b
  6668   001F60  07F7               	decf	___fltol@exp1& (0+255),f,b
  6669   001F62                     l5932:
  6670                           
  6671                           ; BSR set to: 0
  6672   001F62  51F7               	movf	___fltol@exp1& (0+255),w,b
  6673   001F64  A4D8               	btfss	status,2,c
  6674   001F66  EFB7  F00F         	goto	u4801
  6675   001F6A  EFB9  F00F         	goto	u4800
  6676   001F6E                     u4801:
  6677   001F6E  EFAB  F00F         	goto	l5930
  6678   001F72                     u4800:
  6679   001F72                     l5934:
  6680                           
  6681                           ; BSR set to: 0
  6682   001F72  51F6               	movf	___fltol@sign1& (0+255),w,b
  6683   001F74  B4D8               	btfsc	status,2,c
  6684   001F76  EFBF  F00F         	goto	u4811
  6685   001F7A  EFC1  F00F         	goto	u4810
  6686   001F7E                     u4811:
  6687   001F7E  EFC9  F00F         	goto	l5938
  6688   001F82                     u4810:
  6689   001F82                     
  6690                           ; BSR set to: 0
  6691   001F82  1FF5               	comf	(___fltol@f1+3)& (0+255),f,b
  6692   001F84  1FF4               	comf	(___fltol@f1+2)& (0+255),f,b
  6693   001F86  1FF3               	comf	(___fltol@f1+1)& (0+255),f,b
  6694   001F88  6DF2               	negf	___fltol@f1& (0+255),b
  6695   001F8A  0E00               	movlw	0
  6696   001F8C  23F3               	addwfc	(___fltol@f1+1)& (0+255),f,b
  6697   001F8E  23F4               	addwfc	(___fltol@f1+2)& (0+255),f,b
  6698   001F90  23F5               	addwfc	(___fltol@f1+3)& (0+255),f,b
  6699   001F92                     l5938:
  6700                           
  6701                           ; BSR set to: 0
  6702   001F92  C0F2  F0F2         	movff	___fltol@f1,?___fltol
  6703   001F96  C0F3  F0F3         	movff	___fltol@f1+1,?___fltol+1
  6704   001F9A  C0F4  F0F4         	movff	___fltol@f1+2,?___fltol+2
  6705   001F9E  C0F5  F0F5         	movff	___fltol@f1+3,?___fltol+3
  6706   001FA2                     l1291:
  6707                           
  6708                           ; BSR set to: 0
  6709   001FA2  0012               	return		;funcret
  6710   001FA4                     __end_of___fltol:
  6711                           	callstack 0
  6712                           
  6713 ;; *************** function ___flsub *****************
  6714 ;; Defined at:
  6715 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  6716 ;; Parameters:    Size  Location     Type
  6717 ;;  b               4    0[BANK1 ] long 
  6718 ;;  a               4    4[BANK1 ] long 
  6719 ;; Auto vars:     Size  Location     Type
  6720 ;;		None
  6721 ;; Return value:  Size  Location     Type
  6722 ;;                  4    0[BANK1 ] long 
  6723 ;; Registers used:
  6724 ;;		wreg, status,2, status,0, cstack
  6725 ;; Tracked objects:
  6726 ;;		On entry : 0/0
  6727 ;;		On exit  : 0/0
  6728 ;;		Unchanged: 0/0
  6729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6730 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6733 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6734 ;;Total ram usage:        8 bytes
  6735 ;; Hardware stack levels used: 1
  6736 ;; Hardware stack levels required when called: 8
  6737 ;; This function calls:
  6738 ;;		___fladd
  6739 ;; This function is called by:
  6740 ;;		_read_HS1101_moist_percent
  6741 ;;		_LDR_reading
  6742 ;; This function uses a non-reentrant model
  6743 ;;
  6744                           
  6745                           	psect	text62
  6746   002D5A                     __ptext62:
  6747                           	callstack 0
  6748   002D5A                     ___flsub:
  6749                           	callstack 21
  6750   002D5A  0E00               	movlw	0
  6751   002D5C  0101               	movlb	1	; () banked
  6752   002D5E  1B04               	xorwf	___flsub@a& (0+255),f,b
  6753   002D60  0E00               	movlw	0
  6754   002D62  1B05               	xorwf	(___flsub@a+1)& (0+255),f,b
  6755   002D64  0E00               	movlw	0
  6756   002D66  1B06               	xorwf	(___flsub@a+2)& (0+255),f,b
  6757   002D68  0E80               	movlw	128
  6758   002D6A  1B07               	xorwf	(___flsub@a+3)& (0+255),f,b
  6759   002D6C                     
  6760                           ; BSR set to: 1
  6761   002D6C  C100  F01C         	movff	___flsub@b,___fladd@b
  6762   002D70  C101  F01D         	movff	___flsub@b+1,___fladd@b+1
  6763   002D74  C102  F01E         	movff	___flsub@b+2,___fladd@b+2
  6764   002D78  C103  F01F         	movff	___flsub@b+3,___fladd@b+3
  6765   002D7C  C104  F020         	movff	___flsub@a,___fladd@a
  6766   002D80  C105  F021         	movff	___flsub@a+1,___fladd@a+1
  6767   002D84  C106  F022         	movff	___flsub@a+2,___fladd@a+2
  6768   002D88  C107  F023         	movff	___flsub@a+3,___fladd@a+3
  6769   002D8C  EC3E  F008         	call	___fladd	;wreg free
  6770   002D90  C01C  F100         	movff	?___fladd,?___flsub
  6771   002D94  C01D  F101         	movff	?___fladd+1,?___flsub+1
  6772   002D98  C01E  F102         	movff	?___fladd+2,?___flsub+2
  6773   002D9C  C01F  F103         	movff	?___fladd+3,?___flsub+3
  6774   002DA0  0012               	return		;funcret
  6775   002DA2                     __end_of___flsub:
  6776                           	callstack 0
  6777                           
  6778 ;; *************** function ___fladd *****************
  6779 ;; Defined at:
  6780 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  6781 ;; Parameters:    Size  Location     Type
  6782 ;;  b               4   27[COMRAM] long 
  6783 ;;  a               4   31[COMRAM] long 
  6784 ;; Auto vars:     Size  Location     Type
  6785 ;;  grs             1    3[BANK0 ] unsigned char 
  6786 ;;  bexp            1    2[BANK0 ] unsigned char 
  6787 ;;  aexp            1    1[BANK0 ] unsigned char 
  6788 ;;  signs           1    0[BANK0 ] unsigned char 
  6789 ;; Return value:  Size  Location     Type
  6790 ;;                  4   27[COMRAM] unsigned char 
  6791 ;; Registers used:
  6792 ;;		wreg, status,2, status,0
  6793 ;; Tracked objects:
  6794 ;;		On entry : 0/0
  6795 ;;		On exit  : 0/0
  6796 ;;		Unchanged: 0/0
  6797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6798 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6799 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6800 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6801 ;;      Totals:        12       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6802 ;;Total ram usage:       16 bytes
  6803 ;; Hardware stack levels used: 1
  6804 ;; Hardware stack levels required when called: 7
  6805 ;; This function calls:
  6806 ;;		Nothing
  6807 ;; This function is called by:
  6808 ;;		___flsub
  6809 ;; This function uses a non-reentrant model
  6810 ;;
  6811                           
  6812                           	psect	text63
  6813   00107C                     __ptext63:
  6814                           	callstack 0
  6815   00107C                     ___fladd:
  6816                           	callstack 21
  6817   00107C  501F               	movf	(___fladd@b+3)^0,w,c
  6818   00107E  0B80               	andlw	128
  6819   001080  0100               	movlb	0	; () banked
  6820   001082  6FD7               	movwf	___fladd@signs& (0+255),b
  6821   001084  501F               	movf	(___fladd@b+3)^0,w,c
  6822   001086  241F               	addwf	(___fladd@b+3)^0,w,c
  6823   001088  6FD9               	movwf	___fladd@bexp& (0+255),b
  6824   00108A                     
  6825                           ; BSR set to: 0
  6826   00108A  AE1E               	btfss	(___fladd@b+2)^0,7,c
  6827   00108C  EF4A  F008         	goto	u4101
  6828   001090  EF4C  F008         	goto	u4100
  6829   001094                     u4101:
  6830   001094  EF4D  F008         	goto	l5492
  6831   001098                     u4100:
  6832   001098                     
  6833                           ; BSR set to: 0
  6834   001098  81D9               	bsf	___fladd@bexp& (0+255),0,b
  6835   00109A                     l5492:
  6836                           
  6837                           ; BSR set to: 0
  6838   00109A  51D9               	movf	___fladd@bexp& (0+255),w,b
  6839   00109C  B4D8               	btfsc	status,2,c
  6840   00109E  EF53  F008         	goto	u4111
  6841   0010A2  EF55  F008         	goto	u4110
  6842   0010A6                     u4111:
  6843   0010A6  EF6A  F008         	goto	l5502
  6844   0010AA                     u4110:
  6845   0010AA                     
  6846                           ; BSR set to: 0
  6847   0010AA  29D9               	incf	___fladd@bexp& (0+255),w,b
  6848   0010AC  A4D8               	btfss	status,2,c
  6849   0010AE  EF5B  F008         	goto	u4121
  6850   0010B2  EF5D  F008         	goto	u4120
  6851   0010B6                     u4121:
  6852   0010B6  EF65  F008         	goto	l5498
  6853   0010BA                     u4120:
  6854   0010BA                     
  6855                           ; BSR set to: 0
  6856   0010BA  0E00               	movlw	0
  6857   0010BC  6E1C               	movwf	___fladd@b^0,c
  6858   0010BE  0E00               	movlw	0
  6859   0010C0  6E1D               	movwf	(___fladd@b+1)^0,c
  6860   0010C2  0E00               	movlw	0
  6861   0010C4  6E1E               	movwf	(___fladd@b+2)^0,c
  6862   0010C6  0E00               	movlw	0
  6863   0010C8  6E1F               	movwf	(___fladd@b+3)^0,c
  6864   0010CA                     l5498:
  6865                           
  6866                           ; BSR set to: 0
  6867   0010CA  8E1E               	bsf	(___fladd@b+2)^0,7,c
  6868   0010CC                     
  6869                           ; BSR set to: 0
  6870   0010CC  0E00               	movlw	0
  6871   0010CE  6E1F               	movwf	(___fladd@b+3)^0,c
  6872   0010D0  EF72  F008         	goto	l5504
  6873   0010D4                     l5502:
  6874                           
  6875                           ; BSR set to: 0
  6876   0010D4  0E00               	movlw	0
  6877   0010D6  6E1C               	movwf	___fladd@b^0,c
  6878   0010D8  0E00               	movlw	0
  6879   0010DA  6E1D               	movwf	(___fladd@b+1)^0,c
  6880   0010DC  0E00               	movlw	0
  6881   0010DE  6E1E               	movwf	(___fladd@b+2)^0,c
  6882   0010E0  0E00               	movlw	0
  6883   0010E2  6E1F               	movwf	(___fladd@b+3)^0,c
  6884   0010E4                     l5504:
  6885                           
  6886                           ; BSR set to: 0
  6887   0010E4  5023               	movf	(___fladd@a+3)^0,w,c
  6888   0010E6  0B80               	andlw	128
  6889   0010E8  6FD8               	movwf	___fladd@aexp& (0+255),b
  6890   0010EA                     
  6891                           ; BSR set to: 0
  6892   0010EA  51D7               	movf	___fladd@signs& (0+255),w,b
  6893   0010EC  19D8               	xorwf	___fladd@aexp& (0+255),w,b
  6894   0010EE  B4D8               	btfsc	status,2,c
  6895   0010F0  EF7C  F008         	goto	u4131
  6896   0010F4  EF7E  F008         	goto	u4130
  6897   0010F8                     u4131:
  6898   0010F8  EF7F  F008         	goto	l5510
  6899   0010FC                     u4130:
  6900   0010FC                     
  6901                           ; BSR set to: 0
  6902   0010FC  8DD7               	bsf	___fladd@signs& (0+255),6,b
  6903   0010FE                     l5510:
  6904                           
  6905                           ; BSR set to: 0
  6906   0010FE  5023               	movf	(___fladd@a+3)^0,w,c
  6907   001100  2423               	addwf	(___fladd@a+3)^0,w,c
  6908   001102  6FD8               	movwf	___fladd@aexp& (0+255),b
  6909   001104                     
  6910                           ; BSR set to: 0
  6911   001104  AE22               	btfss	(___fladd@a+2)^0,7,c
  6912   001106  EF87  F008         	goto	u4141
  6913   00110A  EF89  F008         	goto	u4140
  6914   00110E                     u4141:
  6915   00110E  EF8A  F008         	goto	l5516
  6916   001112                     u4140:
  6917   001112                     
  6918                           ; BSR set to: 0
  6919   001112  81D8               	bsf	___fladd@aexp& (0+255),0,b
  6920   001114                     l5516:
  6921                           
  6922                           ; BSR set to: 0
  6923   001114  51D8               	movf	___fladd@aexp& (0+255),w,b
  6924   001116  B4D8               	btfsc	status,2,c
  6925   001118  EF90  F008         	goto	u4151
  6926   00111C  EF92  F008         	goto	u4150
  6927   001120                     u4151:
  6928   001120  EFA7  F008         	goto	l5526
  6929   001124                     u4150:
  6930   001124                     
  6931                           ; BSR set to: 0
  6932   001124  29D8               	incf	___fladd@aexp& (0+255),w,b
  6933   001126  A4D8               	btfss	status,2,c
  6934   001128  EF98  F008         	goto	u4161
  6935   00112C  EF9A  F008         	goto	u4160
  6936   001130                     u4161:
  6937   001130  EFA2  F008         	goto	l5522
  6938   001134                     u4160:
  6939   001134                     
  6940                           ; BSR set to: 0
  6941   001134  0E00               	movlw	0
  6942   001136  6E20               	movwf	___fladd@a^0,c
  6943   001138  0E00               	movlw	0
  6944   00113A  6E21               	movwf	(___fladd@a+1)^0,c
  6945   00113C  0E00               	movlw	0
  6946   00113E  6E22               	movwf	(___fladd@a+2)^0,c
  6947   001140  0E00               	movlw	0
  6948   001142  6E23               	movwf	(___fladd@a+3)^0,c
  6949   001144                     l5522:
  6950                           
  6951                           ; BSR set to: 0
  6952   001144  8E22               	bsf	(___fladd@a+2)^0,7,c
  6953   001146                     
  6954                           ; BSR set to: 0
  6955   001146  0E00               	movlw	0
  6956   001148  6E23               	movwf	(___fladd@a+3)^0,c
  6957   00114A  EFAF  F008         	goto	l5528
  6958   00114E                     l5526:
  6959                           
  6960                           ; BSR set to: 0
  6961   00114E  0E00               	movlw	0
  6962   001150  6E20               	movwf	___fladd@a^0,c
  6963   001152  0E00               	movlw	0
  6964   001154  6E21               	movwf	(___fladd@a+1)^0,c
  6965   001156  0E00               	movlw	0
  6966   001158  6E22               	movwf	(___fladd@a+2)^0,c
  6967   00115A  0E00               	movlw	0
  6968   00115C  6E23               	movwf	(___fladd@a+3)^0,c
  6969   00115E                     l5528:
  6970                           
  6971                           ; BSR set to: 0
  6972   00115E  51D9               	movf	___fladd@bexp& (0+255),w,b
  6973   001160  5DD8               	subwf	___fladd@aexp& (0+255),w,b
  6974   001162  B0D8               	btfsc	status,0,c
  6975   001164  EFB6  F008         	goto	u4171
  6976   001168  EFB8  F008         	goto	u4170
  6977   00116C                     u4171:
  6978   00116C  EFDF  F008         	goto	l5564
  6979   001170                     u4170:
  6980   001170                     
  6981                           ; BSR set to: 0
  6982   001170  ADD7               	btfss	___fladd@signs& (0+255),6,b
  6983   001172  EFBD  F008         	goto	u4181
  6984   001176  EFBF  F008         	goto	u4180
  6985   00117A                     u4181:
  6986   00117A  EFC1  F008         	goto	l5534
  6987   00117E                     u4180:
  6988   00117E                     
  6989                           ; BSR set to: 0
  6990   00117E  0E80               	movlw	128
  6991   001180  1BD7               	xorwf	___fladd@signs& (0+255),f,b
  6992   001182                     l5534:
  6993                           
  6994                           ; BSR set to: 0
  6995   001182  C0D9  F0DA         	movff	___fladd@bexp,___fladd@grs
  6996   001186                     
  6997                           ; BSR set to: 0
  6998   001186  C0D8  F0D9         	movff	___fladd@aexp,___fladd@bexp
  6999   00118A                     
  7000                           ; BSR set to: 0
  7001   00118A  C0DA  F0D8         	movff	___fladd@grs,___fladd@aexp
  7002   00118E                     
  7003                           ; BSR set to: 0
  7004   00118E  C01C  F0DA         	movff	___fladd@b,___fladd@grs
  7005   001192                     
  7006                           ; BSR set to: 0
  7007   001192  C020  F01C         	movff	___fladd@a,___fladd@b
  7008   001196                     
  7009                           ; BSR set to: 0
  7010   001196  C0DA  F020         	movff	___fladd@grs,___fladd@a
  7011   00119A                     
  7012                           ; BSR set to: 0
  7013   00119A  C01D  F0DA         	movff	___fladd@b+1,___fladd@grs
  7014   00119E                     
  7015                           ; BSR set to: 0
  7016   00119E  C021  F01D         	movff	___fladd@a+1,___fladd@b+1
  7017   0011A2                     
  7018                           ; BSR set to: 0
  7019   0011A2  C0DA  F021         	movff	___fladd@grs,___fladd@a+1
  7020   0011A6                     
  7021                           ; BSR set to: 0
  7022   0011A6  C01E  F0DA         	movff	___fladd@b+2,___fladd@grs
  7023   0011AA                     
  7024                           ; BSR set to: 0
  7025   0011AA  C022  F01E         	movff	___fladd@a+2,___fladd@b+2
  7026   0011AE                     
  7027                           ; BSR set to: 0
  7028   0011AE  C0DA  F022         	movff	___fladd@grs,___fladd@a+2
  7029   0011B2                     
  7030                           ; BSR set to: 0
  7031   0011B2  C01F  F0DA         	movff	___fladd@b+3,___fladd@grs
  7032   0011B6                     
  7033                           ; BSR set to: 0
  7034   0011B6  C023  F01F         	movff	___fladd@a+3,___fladd@b+3
  7035   0011BA                     
  7036                           ; BSR set to: 0
  7037   0011BA  C0DA  F023         	movff	___fladd@grs,___fladd@a+3
  7038   0011BE                     l5564:
  7039                           
  7040                           ; BSR set to: 0
  7041   0011BE  0E00               	movlw	0
  7042   0011C0  6FDA               	movwf	___fladd@grs& (0+255),b
  7043   0011C2                     
  7044                           ; BSR set to: 0
  7045   0011C2  51D9               	movf	___fladd@bexp& (0+255),w,b
  7046   0011C4  C0D8  F024         	movff	___fladd@aexp,??___fladd
  7047   0011C8  6A25               	clrf	(??___fladd+1)^0,c
  7048   0011CA  5E24               	subwf	??___fladd^0,f,c
  7049   0011CC  0E00               	movlw	0
  7050   0011CE  5A25               	subwfb	(??___fladd+1)^0,f,c
  7051   0011D0  BE25               	btfsc	(??___fladd+1)^0,7,c
  7052   0011D2  EFF4  F008         	goto	u4191
  7053   0011D6  5025               	movf	(??___fladd+1)^0,w,c
  7054   0011D8  E109               	bnz	u4190
  7055   0011DA  0E1A               	movlw	26
  7056   0011DC  5C24               	subwf	??___fladd^0,w,c
  7057   0011DE  A0D8               	btfss	status,0,c
  7058   0011E0  EFF4  F008         	goto	u4191
  7059   0011E4  EFF6  F008         	goto	u4190
  7060   0011E8                     u4191:
  7061   0011E8  EF2D  F009         	goto	l1523
  7062   0011EC                     u4190:
  7063   0011EC                     
  7064                           ; BSR set to: 0
  7065   0011EC  501C               	movf	___fladd@b^0,w,c
  7066   0011EE  101D               	iorwf	(___fladd@b+1)^0,w,c
  7067   0011F0  101E               	iorwf	(___fladd@b+2)^0,w,c
  7068   0011F2  101F               	iorwf	(___fladd@b+3)^0,w,c
  7069   0011F4  A4D8               	btfss	status,2,c
  7070   0011F6  EFFF  F008         	goto	u4201
  7071   0011FA  EF02  F009         	goto	u4200
  7072   0011FE                     u4201:
  7073   0011FE  0E01               	movlw	1
  7074   001200  EF03  F009         	goto	u4210
  7075   001204                     u4200:
  7076   001204  0E00               	movlw	0
  7077   001206                     u4210:
  7078   001206  6FDA               	movwf	___fladd@grs& (0+255),b
  7079   001208                     
  7080                           ; BSR set to: 0
  7081   001208  0E00               	movlw	0
  7082   00120A  6E1C               	movwf	___fladd@b^0,c
  7083   00120C  0E00               	movlw	0
  7084   00120E  6E1D               	movwf	(___fladd@b+1)^0,c
  7085   001210  0E00               	movlw	0
  7086   001212  6E1E               	movwf	(___fladd@b+2)^0,c
  7087   001214  0E00               	movlw	0
  7088   001216  6E1F               	movwf	(___fladd@b+3)^0,c
  7089   001218                     
  7090                           ; BSR set to: 0
  7091   001218  C0D8  F0D9         	movff	___fladd@aexp,___fladd@bexp
  7092   00121C  EF36  F009         	goto	l1522
  7093   001220                     l1524:
  7094                           
  7095                           ; BSR set to: 0
  7096   001220  A1DA               	btfss	___fladd@grs& (0+255),0,b
  7097   001222  EF15  F009         	goto	u4221
  7098   001226  EF17  F009         	goto	u4220
  7099   00122A                     u4221:
  7100   00122A  EF1D  F009         	goto	l5576
  7101   00122E                     u4220:
  7102   00122E                     
  7103                           ; BSR set to: 0
  7104   00122E  90D8               	bcf	status,0,c
  7105   001230  31DA               	rrcf	___fladd@grs& (0+255),w,b
  7106   001232  0901               	iorlw	1
  7107   001234  6FDA               	movwf	___fladd@grs& (0+255),b
  7108   001236  EF1F  F009         	goto	l5578
  7109   00123A                     l5576:
  7110                           
  7111                           ; BSR set to: 0
  7112   00123A  90D8               	bcf	status,0,c
  7113   00123C  33DA               	rrcf	___fladd@grs& (0+255),f,b
  7114   00123E                     l5578:
  7115                           
  7116                           ; BSR set to: 0
  7117   00123E  A01C               	btfss	___fladd@b^0,0,c
  7118   001240  EF24  F009         	goto	u4231
  7119   001244  EF26  F009         	goto	u4230
  7120   001248                     u4231:
  7121   001248  EF27  F009         	goto	l5582
  7122   00124C                     u4230:
  7123   00124C                     
  7124                           ; BSR set to: 0
  7125   00124C  8FDA               	bsf	___fladd@grs& (0+255),7,b
  7126   00124E                     l5582:
  7127                           
  7128                           ; BSR set to: 0
  7129   00124E  341F               	rlcf	(___fladd@b+3)^0,w,c
  7130   001250  321F               	rrcf	(___fladd@b+3)^0,f,c
  7131   001252  321E               	rrcf	(___fladd@b+2)^0,f,c
  7132   001254  321D               	rrcf	(___fladd@b+1)^0,f,c
  7133   001256  321C               	rrcf	___fladd@b^0,f,c
  7134   001258                     
  7135                           ; BSR set to: 0
  7136   001258  2BD9               	incf	___fladd@bexp& (0+255),f,b
  7137   00125A                     l1523:
  7138                           
  7139                           ; BSR set to: 0
  7140   00125A  51D8               	movf	___fladd@aexp& (0+255),w,b
  7141   00125C  5DD9               	subwf	___fladd@bexp& (0+255),w,b
  7142   00125E  A0D8               	btfss	status,0,c
  7143   001260  EF34  F009         	goto	u4241
  7144   001264  EF36  F009         	goto	u4240
  7145   001268                     u4241:
  7146   001268  EF10  F009         	goto	l1524
  7147   00126C                     u4240:
  7148   00126C                     l1522:
  7149                           
  7150                           ; BSR set to: 0
  7151   00126C  BDD7               	btfsc	___fladd@signs& (0+255),6,b
  7152   00126E  EF3B  F009         	goto	u4251
  7153   001272  EF3D  F009         	goto	u4250
  7154   001276                     u4251:
  7155   001276  EF7D  F009         	goto	l5610
  7156   00127A                     u4250:
  7157   00127A                     
  7158                           ; BSR set to: 0
  7159   00127A  51D9               	movf	___fladd@bexp& (0+255),w,b
  7160   00127C  A4D8               	btfss	status,2,c
  7161   00127E  EF43  F009         	goto	u4261
  7162   001282  EF45  F009         	goto	u4260
  7163   001286                     u4261:
  7164   001286  EF4F  F009         	goto	l5592
  7165   00128A                     u4260:
  7166   00128A                     
  7167                           ; BSR set to: 0
  7168   00128A  0E00               	movlw	0
  7169   00128C  6E1C               	movwf	?___fladd^0,c
  7170   00128E  0E00               	movlw	0
  7171   001290  6E1D               	movwf	(?___fladd+1)^0,c
  7172   001292  0E00               	movlw	0
  7173   001294  6E1E               	movwf	(?___fladd+2)^0,c
  7174   001296  0E00               	movlw	0
  7175   001298  6E1F               	movwf	(?___fladd+3)^0,c
  7176   00129A  EF9E  F00A         	goto	l1531
  7177   00129E                     l5592:
  7178                           
  7179                           ; BSR set to: 0
  7180   00129E  5020               	movf	___fladd@a^0,w,c
  7181   0012A0  261C               	addwf	___fladd@b^0,f,c
  7182   0012A2  5021               	movf	(___fladd@a+1)^0,w,c
  7183   0012A4  221D               	addwfc	(___fladd@b+1)^0,f,c
  7184   0012A6  5022               	movf	(___fladd@a+2)^0,w,c
  7185   0012A8  221E               	addwfc	(___fladd@b+2)^0,f,c
  7186   0012AA  5023               	movf	(___fladd@a+3)^0,w,c
  7187   0012AC  221F               	addwfc	(___fladd@b+3)^0,f,c
  7188   0012AE                     
  7189                           ; BSR set to: 0
  7190   0012AE  A01F               	btfss	(___fladd@b+3)^0,0,c
  7191   0012B0  EF5C  F009         	goto	u4271
  7192   0012B4  EF5E  F009         	goto	u4270
  7193   0012B8                     u4271:
  7194   0012B8  EF0A  F00A         	goto	l5646
  7195   0012BC                     u4270:
  7196   0012BC                     
  7197                           ; BSR set to: 0
  7198   0012BC  A1DA               	btfss	___fladd@grs& (0+255),0,b
  7199   0012BE  EF63  F009         	goto	u4281
  7200   0012C2  EF65  F009         	goto	u4280
  7201   0012C6                     u4281:
  7202   0012C6  EF6B  F009         	goto	l5600
  7203   0012CA                     u4280:
  7204   0012CA                     
  7205                           ; BSR set to: 0
  7206   0012CA  90D8               	bcf	status,0,c
  7207   0012CC  31DA               	rrcf	___fladd@grs& (0+255),w,b
  7208   0012CE  0901               	iorlw	1
  7209   0012D0  6FDA               	movwf	___fladd@grs& (0+255),b
  7210   0012D2  EF6D  F009         	goto	l5602
  7211   0012D6                     l5600:
  7212                           
  7213                           ; BSR set to: 0
  7214   0012D6  90D8               	bcf	status,0,c
  7215   0012D8  33DA               	rrcf	___fladd@grs& (0+255),f,b
  7216   0012DA                     l5602:
  7217                           
  7218                           ; BSR set to: 0
  7219   0012DA  A01C               	btfss	___fladd@b^0,0,c
  7220   0012DC  EF72  F009         	goto	u4291
  7221   0012E0  EF74  F009         	goto	u4290
  7222   0012E4                     u4291:
  7223   0012E4  EF75  F009         	goto	l5606
  7224   0012E8                     u4290:
  7225   0012E8                     
  7226                           ; BSR set to: 0
  7227   0012E8  8FDA               	bsf	___fladd@grs& (0+255),7,b
  7228   0012EA                     l5606:
  7229                           
  7230                           ; BSR set to: 0
  7231   0012EA  341F               	rlcf	(___fladd@b+3)^0,w,c
  7232   0012EC  321F               	rrcf	(___fladd@b+3)^0,f,c
  7233   0012EE  321E               	rrcf	(___fladd@b+2)^0,f,c
  7234   0012F0  321D               	rrcf	(___fladd@b+1)^0,f,c
  7235   0012F2  321C               	rrcf	___fladd@b^0,f,c
  7236   0012F4                     
  7237                           ; BSR set to: 0
  7238   0012F4  2BD9               	incf	___fladd@bexp& (0+255),f,b
  7239   0012F6  EF0A  F00A         	goto	l5646
  7240   0012FA                     l5610:
  7241                           
  7242                           ; BSR set to: 0
  7243   0012FA  5020               	movf	___fladd@a^0,w,c
  7244   0012FC  5C1C               	subwf	___fladd@b^0,w,c
  7245   0012FE  5021               	movf	(___fladd@a+1)^0,w,c
  7246   001300  581D               	subwfb	(___fladd@b+1)^0,w,c
  7247   001302  5022               	movf	(___fladd@a+2)^0,w,c
  7248   001304  581E               	subwfb	(___fladd@b+2)^0,w,c
  7249   001306  501F               	movf	(___fladd@b+3)^0,w,c
  7250   001308  0A80               	xorlw	128
  7251   00130A  6E24               	movwf	??___fladd^0,c
  7252   00130C  5023               	movf	(___fladd@a+3)^0,w,c
  7253   00130E  0A80               	xorlw	128
  7254   001310  5824               	subwfb	??___fladd^0,w,c
  7255   001312  B0D8               	btfsc	status,0,c
  7256   001314  EF8E  F009         	goto	u4301
  7257   001318  EF90  F009         	goto	u4300
  7258   00131C                     u4301:
  7259   00131C  EFBB  F009         	goto	l5620
  7260   001320                     u4300:
  7261   001320                     
  7262                           ; BSR set to: 0
  7263   001320  501C               	movf	___fladd@b^0,w,c
  7264   001322  5C20               	subwf	___fladd@a^0,w,c
  7265   001324  6E24               	movwf	??___fladd^0,c
  7266   001326  501D               	movf	(___fladd@b+1)^0,w,c
  7267   001328  5821               	subwfb	(___fladd@a+1)^0,w,c
  7268   00132A  6E25               	movwf	(??___fladd+1)^0,c
  7269   00132C  501E               	movf	(___fladd@b+2)^0,w,c
  7270   00132E  5822               	subwfb	(___fladd@a+2)^0,w,c
  7271   001330  6E26               	movwf	(??___fladd+2)^0,c
  7272   001332  501F               	movf	(___fladd@b+3)^0,w,c
  7273   001334  5823               	subwfb	(___fladd@a+3)^0,w,c
  7274   001336  6E27               	movwf	(??___fladd+3)^0,c
  7275   001338  0EFF               	movlw	255
  7276   00133A  2424               	addwf	??___fladd^0,w,c
  7277   00133C  6E1C               	movwf	___fladd@b^0,c
  7278   00133E  0EFF               	movlw	255
  7279   001340  2025               	addwfc	(??___fladd+1)^0,w,c
  7280   001342  6E1D               	movwf	(___fladd@b+1)^0,c
  7281   001344  0EFF               	movlw	255
  7282   001346  2026               	addwfc	(??___fladd+2)^0,w,c
  7283   001348  6E1E               	movwf	(___fladd@b+2)^0,c
  7284   00134A  0EFF               	movlw	255
  7285   00134C  2027               	addwfc	(??___fladd+3)^0,w,c
  7286   00134E  6E1F               	movwf	(___fladd@b+3)^0,c
  7287   001350  0E80               	movlw	128
  7288   001352  1BD7               	xorwf	___fladd@signs& (0+255),f,b
  7289   001354                     
  7290                           ; BSR set to: 0
  7291   001354  6DDA               	negf	___fladd@grs& (0+255),b
  7292   001356                     
  7293                           ; BSR set to: 0
  7294   001356  51DA               	movf	___fladd@grs& (0+255),w,b
  7295   001358  A4D8               	btfss	status,2,c
  7296   00135A  EFB1  F009         	goto	u4311
  7297   00135E  EFB3  F009         	goto	u4310
  7298   001362                     u4311:
  7299   001362  EFC3  F009         	goto	l1539
  7300   001366                     u4310:
  7301   001366                     
  7302                           ; BSR set to: 0
  7303   001366  0E01               	movlw	1
  7304   001368  261C               	addwf	___fladd@b^0,f,c
  7305   00136A  0E00               	movlw	0
  7306   00136C  221D               	addwfc	(___fladd@b+1)^0,f,c
  7307   00136E  221E               	addwfc	(___fladd@b+2)^0,f,c
  7308   001370  221F               	addwfc	(___fladd@b+3)^0,f,c
  7309   001372  EFC3  F009         	goto	l1539
  7310   001376                     l5620:
  7311                           
  7312                           ; BSR set to: 0
  7313   001376  5020               	movf	___fladd@a^0,w,c
  7314   001378  5E1C               	subwf	___fladd@b^0,f,c
  7315   00137A  5021               	movf	(___fladd@a+1)^0,w,c
  7316   00137C  5A1D               	subwfb	(___fladd@b+1)^0,f,c
  7317   00137E  5022               	movf	(___fladd@a+2)^0,w,c
  7318   001380  5A1E               	subwfb	(___fladd@b+2)^0,f,c
  7319   001382  5023               	movf	(___fladd@a+3)^0,w,c
  7320   001384  5A1F               	subwfb	(___fladd@b+3)^0,f,c
  7321   001386                     l1539:
  7322                           
  7323                           ; BSR set to: 0
  7324   001386  501C               	movf	___fladd@b^0,w,c
  7325   001388  101D               	iorwf	(___fladd@b+1)^0,w,c
  7326   00138A  101E               	iorwf	(___fladd@b+2)^0,w,c
  7327   00138C  101F               	iorwf	(___fladd@b+3)^0,w,c
  7328   00138E  A4D8               	btfss	status,2,c
  7329   001390  EFCC  F009         	goto	u4321
  7330   001394  EFCE  F009         	goto	u4320
  7331   001398                     u4321:
  7332   001398  EF03  F00A         	goto	l5644
  7333   00139C                     u4320:
  7334   00139C                     
  7335                           ; BSR set to: 0
  7336   00139C  51DA               	movf	___fladd@grs& (0+255),w,b
  7337   00139E  A4D8               	btfss	status,2,c
  7338   0013A0  EFD4  F009         	goto	u4331
  7339   0013A4  EFD6  F009         	goto	u4330
  7340   0013A8                     u4331:
  7341   0013A8  EF03  F00A         	goto	l5644
  7342   0013AC                     u4330:
  7343   0013AC                     
  7344                           ; BSR set to: 0
  7345   0013AC  0E00               	movlw	0
  7346   0013AE  6E1C               	movwf	?___fladd^0,c
  7347   0013B0  0E00               	movlw	0
  7348   0013B2  6E1D               	movwf	(?___fladd+1)^0,c
  7349   0013B4  0E00               	movlw	0
  7350   0013B6  6E1E               	movwf	(?___fladd+2)^0,c
  7351   0013B8  0E00               	movlw	0
  7352   0013BA  6E1F               	movwf	(?___fladd+3)^0,c
  7353   0013BC  EF9E  F00A         	goto	l1531
  7354   0013C0                     l5628:
  7355                           
  7356                           ; BSR set to: 0
  7357   0013C0  90D8               	bcf	status,0,c
  7358   0013C2  361C               	rlcf	___fladd@b^0,f,c
  7359   0013C4  361D               	rlcf	(___fladd@b+1)^0,f,c
  7360   0013C6  361E               	rlcf	(___fladd@b+2)^0,f,c
  7361   0013C8  361F               	rlcf	(___fladd@b+3)^0,f,c
  7362   0013CA                     
  7363                           ; BSR set to: 0
  7364   0013CA  AFDA               	btfss	___fladd@grs& (0+255),7,b
  7365   0013CC  EFEA  F009         	goto	u4341
  7366   0013D0  EFEC  F009         	goto	u4340
  7367   0013D4                     u4341:
  7368   0013D4  EFED  F009         	goto	l5634
  7369   0013D8                     u4340:
  7370   0013D8                     
  7371                           ; BSR set to: 0
  7372   0013D8  801C               	bsf	___fladd@b^0,0,c
  7373   0013DA                     l5634:
  7374                           
  7375                           ; BSR set to: 0
  7376   0013DA  A1DA               	btfss	___fladd@grs& (0+255),0,b
  7377   0013DC  EFF2  F009         	goto	u4351
  7378   0013E0  EFF4  F009         	goto	u4350
  7379   0013E4                     u4351:
  7380   0013E4  EFF8  F009         	goto	l5638
  7381   0013E8                     u4350:
  7382   0013E8                     
  7383                           ; BSR set to: 0
  7384   0013E8  80D8               	bsf	status,0,c
  7385   0013EA  37DA               	rlcf	___fladd@grs& (0+255),f,b
  7386   0013EC  EFFA  F009         	goto	l5640
  7387   0013F0                     l5638:
  7388                           
  7389                           ; BSR set to: 0
  7390   0013F0  90D8               	bcf	status,0,c
  7391   0013F2  37DA               	rlcf	___fladd@grs& (0+255),f,b
  7392   0013F4                     l5640:
  7393                           
  7394                           ; BSR set to: 0
  7395   0013F4  51D9               	movf	___fladd@bexp& (0+255),w,b
  7396   0013F6  B4D8               	btfsc	status,2,c
  7397   0013F8  EF00  F00A         	goto	u4361
  7398   0013FC  EF02  F00A         	goto	u4360
  7399   001400                     u4361:
  7400   001400  EF03  F00A         	goto	l5644
  7401   001404                     u4360:
  7402   001404                     
  7403                           ; BSR set to: 0
  7404   001404  07D9               	decf	___fladd@bexp& (0+255),f,b
  7405   001406                     l5644:
  7406                           
  7407                           ; BSR set to: 0
  7408   001406  AE1E               	btfss	(___fladd@b+2)^0,7,c
  7409   001408  EF08  F00A         	goto	u4371
  7410   00140C  EF0A  F00A         	goto	u4370
  7411   001410                     u4371:
  7412   001410  EFE0  F009         	goto	l5628
  7413   001414                     u4370:
  7414   001414                     l5646:
  7415                           
  7416                           ; BSR set to: 0
  7417   001414  0E00               	movlw	0
  7418   001416  6FD8               	movwf	___fladd@aexp& (0+255),b
  7419   001418                     
  7420                           ; BSR set to: 0
  7421   001418  AFDA               	btfss	___fladd@grs& (0+255),7,b
  7422   00141A  EF11  F00A         	goto	u4381
  7423   00141E  EF13  F00A         	goto	u4380
  7424   001422                     u4381:
  7425   001422  EF2B  F00A         	goto	l1548
  7426   001426                     u4380:
  7427   001426                     
  7428                           ; BSR set to: 0
  7429   001426  C0DA  F024         	movff	___fladd@grs,??___fladd
  7430   00142A  0E7F               	movlw	127
  7431   00142C  1624               	andwf	??___fladd^0,f,c
  7432   00142E  B4D8               	btfsc	status,2,c
  7433   001430  EF1C  F00A         	goto	u4391
  7434   001434  EF1E  F00A         	goto	u4390
  7435   001438                     u4391:
  7436   001438  EF22  F00A         	goto	l1549
  7437   00143C                     u4390:
  7438   00143C                     l5652:
  7439                           
  7440                           ; BSR set to: 0
  7441   00143C  0E01               	movlw	1
  7442   00143E  6FD8               	movwf	___fladd@aexp& (0+255),b
  7443   001440  EF2B  F00A         	goto	l1548
  7444   001444                     l1549:
  7445                           
  7446                           ; BSR set to: 0
  7447   001444  A01C               	btfss	___fladd@b^0,0,c
  7448   001446  EF27  F00A         	goto	u4401
  7449   00144A  EF29  F00A         	goto	u4400
  7450   00144E                     u4401:
  7451   00144E  EF2B  F00A         	goto	l1548
  7452   001452                     u4400:
  7453   001452  EF1E  F00A         	goto	l5652
  7454   001456                     l1548:
  7455                           
  7456                           ; BSR set to: 0
  7457   001456  51D8               	movf	___fladd@aexp& (0+255),w,b
  7458   001458  B4D8               	btfsc	status,2,c
  7459   00145A  EF31  F00A         	goto	u4411
  7460   00145E  EF33  F00A         	goto	u4410
  7461   001462                     u4411:
  7462   001462  EF5E  F00A         	goto	l5664
  7463   001466                     u4410:
  7464   001466                     
  7465                           ; BSR set to: 0
  7466   001466  0E01               	movlw	1
  7467   001468  261C               	addwf	___fladd@b^0,f,c
  7468   00146A  0E00               	movlw	0
  7469   00146C  221D               	addwfc	(___fladd@b+1)^0,f,c
  7470   00146E  221E               	addwfc	(___fladd@b+2)^0,f,c
  7471   001470  221F               	addwfc	(___fladd@b+3)^0,f,c
  7472   001472                     
  7473                           ; BSR set to: 0
  7474   001472  A01F               	btfss	(___fladd@b+3)^0,0,c
  7475   001474  EF3E  F00A         	goto	u4421
  7476   001478  EF40  F00A         	goto	u4420
  7477   00147C                     u4421:
  7478   00147C  EF5E  F00A         	goto	l5664
  7479   001480                     u4420:
  7480   001480                     
  7481                           ; BSR set to: 0
  7482   001480  C01C  F024         	movff	___fladd@b,??___fladd
  7483   001484  C01D  F025         	movff	___fladd@b+1,??___fladd+1
  7484   001488  C01E  F026         	movff	___fladd@b+2,??___fladd+2
  7485   00148C  C01F  F027         	movff	___fladd@b+3,??___fladd+3
  7486   001490  3427               	rlcf	(??___fladd+3)^0,w,c
  7487   001492  3227               	rrcf	(??___fladd+3)^0,f,c
  7488   001494  3226               	rrcf	(??___fladd+2)^0,f,c
  7489   001496  3225               	rrcf	(??___fladd+1)^0,f,c
  7490   001498  3224               	rrcf	??___fladd^0,f,c
  7491   00149A  C024  F01C         	movff	??___fladd,___fladd@b
  7492   00149E  C025  F01D         	movff	??___fladd+1,___fladd@b+1
  7493   0014A2  C026  F01E         	movff	??___fladd+2,___fladd@b+2
  7494   0014A6  C027  F01F         	movff	??___fladd+3,___fladd@b+3
  7495   0014AA  29D9               	incf	___fladd@bexp& (0+255),w,b
  7496   0014AC  B4D8               	btfsc	status,2,c
  7497   0014AE  EF5B  F00A         	goto	u4431
  7498   0014B2  EF5D  F00A         	goto	u4430
  7499   0014B6                     u4431:
  7500   0014B6  EF5E  F00A         	goto	l5664
  7501   0014BA                     u4430:
  7502   0014BA                     
  7503                           ; BSR set to: 0
  7504   0014BA  2BD9               	incf	___fladd@bexp& (0+255),f,b
  7505   0014BC                     l5664:
  7506                           
  7507                           ; BSR set to: 0
  7508   0014BC  29D9               	incf	___fladd@bexp& (0+255),w,b
  7509   0014BE  B4D8               	btfsc	status,2,c
  7510   0014C0  EF64  F00A         	goto	u4441
  7511   0014C4  EF66  F00A         	goto	u4440
  7512   0014C8                     u4441:
  7513   0014C8  EF6E  F00A         	goto	l5668
  7514   0014CC                     u4440:
  7515   0014CC                     
  7516                           ; BSR set to: 0
  7517   0014CC  51D9               	movf	___fladd@bexp& (0+255),w,b
  7518   0014CE  A4D8               	btfss	status,2,c
  7519   0014D0  EF6C  F00A         	goto	u4451
  7520   0014D4  EF6E  F00A         	goto	u4450
  7521   0014D8                     u4451:
  7522   0014D8  EF80  F00A         	goto	l5672
  7523   0014DC                     u4450:
  7524   0014DC                     l5668:
  7525                           
  7526                           ; BSR set to: 0
  7527   0014DC  0E00               	movlw	0
  7528   0014DE  6E1C               	movwf	___fladd@b^0,c
  7529   0014E0  0E00               	movlw	0
  7530   0014E2  6E1D               	movwf	(___fladd@b+1)^0,c
  7531   0014E4  0E00               	movlw	0
  7532   0014E6  6E1E               	movwf	(___fladd@b+2)^0,c
  7533   0014E8  0E00               	movlw	0
  7534   0014EA  6E1F               	movwf	(___fladd@b+3)^0,c
  7535   0014EC  51D9               	movf	___fladd@bexp& (0+255),w,b
  7536   0014EE  A4D8               	btfss	status,2,c
  7537   0014F0  EF7C  F00A         	goto	u4461
  7538   0014F4  EF7E  F00A         	goto	u4460
  7539   0014F8                     u4461:
  7540   0014F8  EF80  F00A         	goto	l5672
  7541   0014FC                     u4460:
  7542   0014FC                     
  7543                           ; BSR set to: 0
  7544   0014FC  0E00               	movlw	0
  7545   0014FE  6FD7               	movwf	___fladd@signs& (0+255),b
  7546   001500                     l5672:
  7547                           
  7548                           ; BSR set to: 0
  7549   001500  A1D9               	btfss	___fladd@bexp& (0+255),0,b
  7550   001502  EF85  F00A         	goto	u4471
  7551   001506  EF87  F00A         	goto	u4470
  7552   00150A                     u4471:
  7553   00150A  EF8A  F00A         	goto	l5676
  7554   00150E                     u4470:
  7555   00150E                     
  7556                           ; BSR set to: 0
  7557   00150E  8E1E               	bsf	(___fladd@b+2)^0,7,c
  7558   001510  EF8B  F00A         	goto	l5678
  7559   001514                     l5676:
  7560                           
  7561                           ; BSR set to: 0
  7562   001514  9E1E               	bcf	(___fladd@b+2)^0,7,c
  7563   001516                     l5678:
  7564                           
  7565                           ; BSR set to: 0
  7566   001516  90D8               	bcf	status,0,c
  7567   001518  31D9               	rrcf	___fladd@bexp& (0+255),w,b
  7568   00151A  6E1F               	movwf	(___fladd@b+3)^0,c
  7569   00151C                     
  7570                           ; BSR set to: 0
  7571   00151C  AFD7               	btfss	___fladd@signs& (0+255),7,b
  7572   00151E  EF93  F00A         	goto	u4481
  7573   001522  EF95  F00A         	goto	u4480
  7574   001526                     u4481:
  7575   001526  EF96  F00A         	goto	l5684
  7576   00152A                     u4480:
  7577   00152A                     
  7578                           ; BSR set to: 0
  7579   00152A  8E1F               	bsf	(___fladd@b+3)^0,7,c
  7580   00152C                     l5684:
  7581                           
  7582                           ; BSR set to: 0
  7583   00152C  C01C  F01C         	movff	___fladd@b,?___fladd
  7584   001530  C01D  F01D         	movff	___fladd@b+1,?___fladd+1
  7585   001534  C01E  F01E         	movff	___fladd@b+2,?___fladd+2
  7586   001538  C01F  F01F         	movff	___fladd@b+3,?___fladd+3
  7587   00153C                     l1531:
  7588                           
  7589                           ; BSR set to: 0
  7590   00153C  0012               	return		;funcret
  7591   00153E                     __end_of___fladd:
  7592                           	callstack 0
  7593                           
  7594 ;; *************** function ___flmul *****************
  7595 ;; Defined at:
  7596 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  7597 ;; Parameters:    Size  Location     Type
  7598 ;;  b               4    6[BANK0 ] unsigned char 
  7599 ;;  a               4   10[BANK0 ] unsigned char 
  7600 ;; Auto vars:     Size  Location     Type
  7601 ;;  prod            4   21[BANK0 ] struct .
  7602 ;;  grs             4   16[BANK0 ] unsigned long 
  7603 ;;  temp            2   25[BANK0 ] struct .
  7604 ;;  bexp            1   20[BANK0 ] unsigned char 
  7605 ;;  aexp            1   15[BANK0 ] unsigned char 
  7606 ;;  sign            1   14[BANK0 ] unsigned char 
  7607 ;; Return value:  Size  Location     Type
  7608 ;;                  4    6[BANK0 ] unsigned char 
  7609 ;; Registers used:
  7610 ;;		wreg, status,2, status,0, prodl, prodh
  7611 ;; Tracked objects:
  7612 ;;		On entry : 0/0
  7613 ;;		On exit  : 0/0
  7614 ;;		Unchanged: 0/0
  7615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7616 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7617 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7618 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7619 ;;      Totals:         4      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7620 ;;Total ram usage:       25 bytes
  7621 ;; Hardware stack levels used: 1
  7622 ;; Hardware stack levels required when called: 7
  7623 ;; This function calls:
  7624 ;;		Nothing
  7625 ;; This function is called by:
  7626 ;;		_read_HS1101_moist_percent
  7627 ;;		_LDR_reading
  7628 ;; This function uses a non-reentrant model
  7629 ;;
  7630                           
  7631                           	psect	text64
  7632   00153E                     __ptext64:
  7633                           	callstack 0
  7634   00153E                     ___flmul:
  7635                           	callstack 22
  7636   00153E  0100               	movlb	0	; () banked
  7637   001540  51E0               	movf	(___flmul@b+3)& (0+255),w,b
  7638   001542  0B80               	andlw	128
  7639   001544  6FE5               	movwf	___flmul@sign& (0+255),b
  7640   001546  51E0               	movf	(___flmul@b+3)& (0+255),w,b
  7641   001548  25E0               	addwf	(___flmul@b+3)& (0+255),w,b
  7642   00154A  6FEB               	movwf	___flmul@bexp& (0+255),b
  7643   00154C                     
  7644                           ; BSR set to: 0
  7645   00154C  AFDF               	btfss	(___flmul@b+2)& (0+255),7,b
  7646   00154E  EFAB  F00A         	goto	u4561
  7647   001552  EFAD  F00A         	goto	u4560
  7648   001556                     u4561:
  7649   001556  EFAE  F00A         	goto	l5768
  7650   00155A                     u4560:
  7651   00155A                     
  7652                           ; BSR set to: 0
  7653   00155A  81EB               	bsf	___flmul@bexp& (0+255),0,b
  7654   00155C                     l5768:
  7655                           
  7656                           ; BSR set to: 0
  7657   00155C  51EB               	movf	___flmul@bexp& (0+255),w,b
  7658   00155E  B4D8               	btfsc	status,2,c
  7659   001560  EFB4  F00A         	goto	u4571
  7660   001564  EFB6  F00A         	goto	u4570
  7661   001568                     u4571:
  7662   001568  EFC9  F00A         	goto	l5776
  7663   00156C                     u4570:
  7664   00156C                     
  7665                           ; BSR set to: 0
  7666   00156C  29EB               	incf	___flmul@bexp& (0+255),w,b
  7667   00156E  A4D8               	btfss	status,2,c
  7668   001570  EFBC  F00A         	goto	u4581
  7669   001574  EFBE  F00A         	goto	u4580
  7670   001578                     u4581:
  7671   001578  EFC6  F00A         	goto	l5774
  7672   00157C                     u4580:
  7673   00157C                     
  7674                           ; BSR set to: 0
  7675   00157C  0E00               	movlw	0
  7676   00157E  6FDD               	movwf	___flmul@b& (0+255),b
  7677   001580  0E00               	movlw	0
  7678   001582  6FDE               	movwf	(___flmul@b+1)& (0+255),b
  7679   001584  0E00               	movlw	0
  7680   001586  6FDF               	movwf	(___flmul@b+2)& (0+255),b
  7681   001588  0E00               	movlw	0
  7682   00158A  6FE0               	movwf	(___flmul@b+3)& (0+255),b
  7683   00158C                     l5774:
  7684                           
  7685                           ; BSR set to: 0
  7686   00158C  8FDF               	bsf	(___flmul@b+2)& (0+255),7,b
  7687   00158E  EFD1  F00A         	goto	l5778
  7688   001592                     l5776:
  7689                           
  7690                           ; BSR set to: 0
  7691   001592  0E00               	movlw	0
  7692   001594  6FDD               	movwf	___flmul@b& (0+255),b
  7693   001596  0E00               	movlw	0
  7694   001598  6FDE               	movwf	(___flmul@b+1)& (0+255),b
  7695   00159A  0E00               	movlw	0
  7696   00159C  6FDF               	movwf	(___flmul@b+2)& (0+255),b
  7697   00159E  0E00               	movlw	0
  7698   0015A0  6FE0               	movwf	(___flmul@b+3)& (0+255),b
  7699   0015A2                     l5778:
  7700                           
  7701                           ; BSR set to: 0
  7702   0015A2  51E4               	movf	(___flmul@a+3)& (0+255),w,b
  7703   0015A4  0B80               	andlw	128
  7704   0015A6  1BE5               	xorwf	___flmul@sign& (0+255),f,b
  7705   0015A8                     
  7706                           ; BSR set to: 0
  7707   0015A8  51E4               	movf	(___flmul@a+3)& (0+255),w,b
  7708   0015AA  25E4               	addwf	(___flmul@a+3)& (0+255),w,b
  7709   0015AC  6FE6               	movwf	___flmul@aexp& (0+255),b
  7710   0015AE                     
  7711                           ; BSR set to: 0
  7712   0015AE  AFE3               	btfss	(___flmul@a+2)& (0+255),7,b
  7713   0015B0  EFDC  F00A         	goto	u4591
  7714   0015B4  EFDE  F00A         	goto	u4590
  7715   0015B8                     u4591:
  7716   0015B8  EFDF  F00A         	goto	l5786
  7717   0015BC                     u4590:
  7718   0015BC                     
  7719                           ; BSR set to: 0
  7720   0015BC  81E6               	bsf	___flmul@aexp& (0+255),0,b
  7721   0015BE                     l5786:
  7722                           
  7723                           ; BSR set to: 0
  7724   0015BE  51E6               	movf	___flmul@aexp& (0+255),w,b
  7725   0015C0  B4D8               	btfsc	status,2,c
  7726   0015C2  EFE5  F00A         	goto	u4601
  7727   0015C6  EFE7  F00A         	goto	u4600
  7728   0015CA                     u4601:
  7729   0015CA  EFFA  F00A         	goto	l5794
  7730   0015CE                     u4600:
  7731   0015CE                     
  7732                           ; BSR set to: 0
  7733   0015CE  29E6               	incf	___flmul@aexp& (0+255),w,b
  7734   0015D0  A4D8               	btfss	status,2,c
  7735   0015D2  EFED  F00A         	goto	u4611
  7736   0015D6  EFEF  F00A         	goto	u4610
  7737   0015DA                     u4611:
  7738   0015DA  EFF7  F00A         	goto	l5792
  7739   0015DE                     u4610:
  7740   0015DE                     
  7741                           ; BSR set to: 0
  7742   0015DE  0E00               	movlw	0
  7743   0015E0  6FE1               	movwf	___flmul@a& (0+255),b
  7744   0015E2  0E00               	movlw	0
  7745   0015E4  6FE2               	movwf	(___flmul@a+1)& (0+255),b
  7746   0015E6  0E00               	movlw	0
  7747   0015E8  6FE3               	movwf	(___flmul@a+2)& (0+255),b
  7748   0015EA  0E00               	movlw	0
  7749   0015EC  6FE4               	movwf	(___flmul@a+3)& (0+255),b
  7750   0015EE                     l5792:
  7751                           
  7752                           ; BSR set to: 0
  7753   0015EE  8FE3               	bsf	(___flmul@a+2)& (0+255),7,b
  7754   0015F0  EF02  F00B         	goto	l1608
  7755   0015F4                     l5794:
  7756                           
  7757                           ; BSR set to: 0
  7758   0015F4  0E00               	movlw	0
  7759   0015F6  6FE1               	movwf	___flmul@a& (0+255),b
  7760   0015F8  0E00               	movlw	0
  7761   0015FA  6FE2               	movwf	(___flmul@a+1)& (0+255),b
  7762   0015FC  0E00               	movlw	0
  7763   0015FE  6FE3               	movwf	(___flmul@a+2)& (0+255),b
  7764   001600  0E00               	movlw	0
  7765   001602  6FE4               	movwf	(___flmul@a+3)& (0+255),b
  7766   001604                     l1608:
  7767                           
  7768                           ; BSR set to: 0
  7769   001604  51E6               	movf	___flmul@aexp& (0+255),w,b
  7770   001606  B4D8               	btfsc	status,2,c
  7771   001608  EF08  F00B         	goto	u4621
  7772   00160C  EF0A  F00B         	goto	u4620
  7773   001610                     u4621:
  7774   001610  EF12  F00B         	goto	l5798
  7775   001614                     u4620:
  7776   001614                     
  7777                           ; BSR set to: 0
  7778   001614  51EB               	movf	___flmul@bexp& (0+255),w,b
  7779   001616  A4D8               	btfss	status,2,c
  7780   001618  EF10  F00B         	goto	u4631
  7781   00161C  EF12  F00B         	goto	u4630
  7782   001620                     u4631:
  7783   001620  EF1C  F00B         	goto	l5802
  7784   001624                     u4630:
  7785   001624                     l5798:
  7786                           
  7787                           ; BSR set to: 0
  7788   001624  0E00               	movlw	0
  7789   001626  6FDD               	movwf	?___flmul& (0+255),b
  7790   001628  0E00               	movlw	0
  7791   00162A  6FDE               	movwf	(?___flmul+1)& (0+255),b
  7792   00162C  0E00               	movlw	0
  7793   00162E  6FDF               	movwf	(?___flmul+2)& (0+255),b
  7794   001630  0E00               	movlw	0
  7795   001632  6FE0               	movwf	(?___flmul+3)& (0+255),b
  7796   001634  EFB4  F00C         	goto	l1612
  7797   001638                     l5802:
  7798                           
  7799                           ; BSR set to: 0
  7800   001638  51E3               	movf	(___flmul@a+2)& (0+255),w,b
  7801   00163A  03DD               	mulwf	___flmul@b& (0+255),b
  7802   00163C  CFF3 F0F0          	movff	prodl,___flmul@temp
  7803   001640  CFF4 F0F1          	movff	prodh,___flmul@temp+1
  7804   001644                     
  7805                           ; BSR set to: 0
  7806   001644  51F0               	movf	___flmul@temp& (0+255),w,b
  7807   001646  6FE7               	movwf	___flmul@grs& (0+255),b
  7808   001648  6BE8               	clrf	(___flmul@grs+1)& (0+255),b
  7809   00164A  6BE9               	clrf	(___flmul@grs+2)& (0+255),b
  7810   00164C  6BEA               	clrf	(___flmul@grs+3)& (0+255),b
  7811   00164E                     
  7812                           ; BSR set to: 0
  7813   00164E  51F1               	movf	(___flmul@temp+1)& (0+255),w,b
  7814   001650  6FEC               	movwf	___flmul@prod& (0+255),b
  7815   001652  6BED               	clrf	(___flmul@prod+1)& (0+255),b
  7816   001654  6BEE               	clrf	(___flmul@prod+2)& (0+255),b
  7817   001656  6BEF               	clrf	(___flmul@prod+3)& (0+255),b
  7818   001658  51E2               	movf	(___flmul@a+1)& (0+255),w,b
  7819   00165A  03DE               	mulwf	(___flmul@b+1)& (0+255),b
  7820   00165C  CFF3 F0F0          	movff	prodl,___flmul@temp
  7821   001660  CFF4 F0F1          	movff	prodh,___flmul@temp+1
  7822   001664                     
  7823                           ; BSR set to: 0
  7824   001664  51F0               	movf	___flmul@temp& (0+255),w,b
  7825   001666  27E7               	addwf	___flmul@grs& (0+255),f,b
  7826   001668  0E00               	movlw	0
  7827   00166A  23E8               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7828   00166C  23E9               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7829   00166E  23EA               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7830   001670                     
  7831                           ; BSR set to: 0
  7832   001670  51F1               	movf	(___flmul@temp+1)& (0+255),w,b
  7833   001672  27EC               	addwf	___flmul@prod& (0+255),f,b
  7834   001674  0E00               	movlw	0
  7835   001676  23ED               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7836   001678  23EE               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7837   00167A  23EF               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7838   00167C  51E1               	movf	___flmul@a& (0+255),w,b
  7839   00167E  03DF               	mulwf	(___flmul@b+2)& (0+255),b
  7840   001680  CFF3 F0F0          	movff	prodl,___flmul@temp
  7841   001684  CFF4 F0F1          	movff	prodh,___flmul@temp+1
  7842   001688                     
  7843                           ; BSR set to: 0
  7844   001688  51F0               	movf	___flmul@temp& (0+255),w,b
  7845   00168A  27E7               	addwf	___flmul@grs& (0+255),f,b
  7846   00168C  0E00               	movlw	0
  7847   00168E  23E8               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7848   001690  23E9               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7849   001692  23EA               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7850   001694                     
  7851                           ; BSR set to: 0
  7852   001694  51F1               	movf	(___flmul@temp+1)& (0+255),w,b
  7853   001696  27EC               	addwf	___flmul@prod& (0+255),f,b
  7854   001698  0E00               	movlw	0
  7855   00169A  23ED               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7856   00169C  23EE               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7857   00169E  23EF               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7858   0016A0                     
  7859                           ; BSR set to: 0
  7860   0016A0  C0E9  F0EA         	movff	___flmul@grs+2,___flmul@grs+3
  7861   0016A4  C0E8  F0E9         	movff	___flmul@grs+1,___flmul@grs+2
  7862   0016A8  C0E7  F0E8         	movff	___flmul@grs,___flmul@grs+1
  7863   0016AC  6BE7               	clrf	___flmul@grs& (0+255),b
  7864   0016AE                     
  7865                           ; BSR set to: 0
  7866   0016AE  51E1               	movf	___flmul@a& (0+255),w,b
  7867   0016B0  03DE               	mulwf	(___flmul@b+1)& (0+255),b
  7868   0016B2  CFF3 F0F0          	movff	prodl,___flmul@temp
  7869   0016B6  CFF4 F0F1          	movff	prodh,___flmul@temp+1
  7870   0016BA                     
  7871                           ; BSR set to: 0
  7872   0016BA  51F0               	movf	___flmul@temp& (0+255),w,b
  7873   0016BC  27E7               	addwf	___flmul@grs& (0+255),f,b
  7874   0016BE  51F1               	movf	(___flmul@temp+1)& (0+255),w,b
  7875   0016C0  23E8               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7876   0016C2  0E00               	movlw	0
  7877   0016C4  23E9               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7878   0016C6  0E00               	movlw	0
  7879   0016C8  23EA               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7880   0016CA                     
  7881                           ; BSR set to: 0
  7882   0016CA  51E2               	movf	(___flmul@a+1)& (0+255),w,b
  7883   0016CC  03DD               	mulwf	___flmul@b& (0+255),b
  7884   0016CE  CFF3 F0F0          	movff	prodl,___flmul@temp
  7885   0016D2  CFF4 F0F1          	movff	prodh,___flmul@temp+1
  7886   0016D6                     
  7887                           ; BSR set to: 0
  7888   0016D6  51F0               	movf	___flmul@temp& (0+255),w,b
  7889   0016D8  27E7               	addwf	___flmul@grs& (0+255),f,b
  7890   0016DA  51F1               	movf	(___flmul@temp+1)& (0+255),w,b
  7891   0016DC  23E8               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7892   0016DE  0E00               	movlw	0
  7893   0016E0  23E9               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7894   0016E2  0E00               	movlw	0
  7895   0016E4  23EA               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7896   0016E6                     
  7897                           ; BSR set to: 0
  7898   0016E6  C0E9  F0EA         	movff	___flmul@grs+2,___flmul@grs+3
  7899   0016EA  C0E8  F0E9         	movff	___flmul@grs+1,___flmul@grs+2
  7900   0016EE  C0E7  F0E8         	movff	___flmul@grs,___flmul@grs+1
  7901   0016F2  6BE7               	clrf	___flmul@grs& (0+255),b
  7902   0016F4  51E1               	movf	___flmul@a& (0+255),w,b
  7903   0016F6  03DD               	mulwf	___flmul@b& (0+255),b
  7904   0016F8  CFF3 F0F0          	movff	prodl,___flmul@temp
  7905   0016FC  CFF4 F0F1          	movff	prodh,___flmul@temp+1
  7906   001700                     
  7907                           ; BSR set to: 0
  7908   001700  51F0               	movf	___flmul@temp& (0+255),w,b
  7909   001702  27E7               	addwf	___flmul@grs& (0+255),f,b
  7910   001704  51F1               	movf	(___flmul@temp+1)& (0+255),w,b
  7911   001706  23E8               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7912   001708  0E00               	movlw	0
  7913   00170A  23E9               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7914   00170C  0E00               	movlw	0
  7915   00170E  23EA               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7916   001710                     
  7917                           ; BSR set to: 0
  7918   001710  51E3               	movf	(___flmul@a+2)& (0+255),w,b
  7919   001712  03DE               	mulwf	(___flmul@b+1)& (0+255),b
  7920   001714  CFF3 F0F0          	movff	prodl,___flmul@temp
  7921   001718  CFF4 F0F1          	movff	prodh,___flmul@temp+1
  7922   00171C  51F0               	movf	___flmul@temp& (0+255),w,b
  7923   00171E  27EC               	addwf	___flmul@prod& (0+255),f,b
  7924   001720  51F1               	movf	(___flmul@temp+1)& (0+255),w,b
  7925   001722  23ED               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7926   001724  0E00               	movlw	0
  7927   001726  23EE               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7928   001728  0E00               	movlw	0
  7929   00172A  23EF               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7930   00172C                     
  7931                           ; BSR set to: 0
  7932   00172C  51E2               	movf	(___flmul@a+1)& (0+255),w,b
  7933   00172E  03DF               	mulwf	(___flmul@b+2)& (0+255),b
  7934   001730  CFF3 F0F0          	movff	prodl,___flmul@temp
  7935   001734  CFF4 F0F1          	movff	prodh,___flmul@temp+1
  7936   001738                     
  7937                           ; BSR set to: 0
  7938   001738  51F0               	movf	___flmul@temp& (0+255),w,b
  7939   00173A  27EC               	addwf	___flmul@prod& (0+255),f,b
  7940   00173C  51F1               	movf	(___flmul@temp+1)& (0+255),w,b
  7941   00173E  23ED               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7942   001740  0E00               	movlw	0
  7943   001742  23EE               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7944   001744  0E00               	movlw	0
  7945   001746  23EF               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7946   001748  51E3               	movf	(___flmul@a+2)& (0+255),w,b
  7947   00174A  03DF               	mulwf	(___flmul@b+2)& (0+255),b
  7948   00174C  CFF3 F0F0          	movff	prodl,___flmul@temp
  7949   001750  CFF4 F0F1          	movff	prodh,___flmul@temp+1
  7950   001754                     
  7951                           ; BSR set to: 0
  7952   001754  51F0               	movf	___flmul@temp& (0+255),w,b
  7953   001756  6E24               	movwf	??___flmul^0,c
  7954   001758  51F1               	movf	(___flmul@temp+1)& (0+255),w,b
  7955   00175A  6E25               	movwf	(??___flmul+1)^0,c
  7956   00175C  6A26               	clrf	(??___flmul+2)^0,c
  7957   00175E  6A27               	clrf	(??___flmul+3)^0,c
  7958   001760  C026  F027         	movff	??___flmul+2,??___flmul+3
  7959   001764  C025  F026         	movff	??___flmul+1,??___flmul+2
  7960   001768  C024  F025         	movff	??___flmul,??___flmul+1
  7961   00176C  6A24               	clrf	??___flmul^0,c
  7962   00176E  5024               	movf	??___flmul^0,w,c
  7963   001770  27EC               	addwf	___flmul@prod& (0+255),f,b
  7964   001772  5025               	movf	(??___flmul+1)^0,w,c
  7965   001774  23ED               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7966   001776  5026               	movf	(??___flmul+2)^0,w,c
  7967   001778  23EE               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7968   00177A  5027               	movf	(??___flmul+3)^0,w,c
  7969   00177C  23EF               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7970   00177E                     
  7971                           ; BSR set to: 0
  7972   00177E  C0E7  F024         	movff	___flmul@grs,??___flmul
  7973   001782  C0E8  F025         	movff	___flmul@grs+1,??___flmul+1
  7974   001786  C0E9  F026         	movff	___flmul@grs+2,??___flmul+2
  7975   00178A  C0EA  F027         	movff	___flmul@grs+3,??___flmul+3
  7976   00178E  0E19               	movlw	25
  7977   001790  EFCF  F00B         	goto	u4640
  7978   001794                     u4645:
  7979   001794  90D8               	bcf	status,0,c
  7980   001796  3227               	rrcf	(??___flmul+3)^0,f,c
  7981   001798  3226               	rrcf	(??___flmul+2)^0,f,c
  7982   00179A  3225               	rrcf	(??___flmul+1)^0,f,c
  7983   00179C  3224               	rrcf	??___flmul^0,f,c
  7984   00179E                     u4640:
  7985   00179E  2EE8               	decfsz	wreg,f,c
  7986   0017A0  EFCA  F00B         	goto	u4645
  7987   0017A4  5024               	movf	??___flmul^0,w,c
  7988   0017A6  27EC               	addwf	___flmul@prod& (0+255),f,b
  7989   0017A8  5025               	movf	(??___flmul+1)^0,w,c
  7990   0017AA  23ED               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7991   0017AC  5026               	movf	(??___flmul+2)^0,w,c
  7992   0017AE  23EE               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7993   0017B0  5027               	movf	(??___flmul+3)^0,w,c
  7994   0017B2  23EF               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7995   0017B4                     
  7996                           ; BSR set to: 0
  7997   0017B4  C0E9  F0EA         	movff	___flmul@grs+2,___flmul@grs+3
  7998   0017B8  C0E8  F0E9         	movff	___flmul@grs+1,___flmul@grs+2
  7999   0017BC  C0E7  F0E8         	movff	___flmul@grs,___flmul@grs+1
  8000   0017C0  6BE7               	clrf	___flmul@grs& (0+255),b
  8001   0017C2                     
  8002                           ; BSR set to: 0
  8003   0017C2  51E6               	movf	___flmul@aexp& (0+255),w,b
  8004   0017C4  C0EB  F024         	movff	___flmul@bexp,??___flmul
  8005   0017C8  6A25               	clrf	(??___flmul+1)^0,c
  8006   0017CA  2624               	addwf	??___flmul^0,f,c
  8007   0017CC  0E00               	movlw	0
  8008   0017CE  2225               	addwfc	(??___flmul+1)^0,f,c
  8009   0017D0  0E82               	movlw	130
  8010   0017D2  2424               	addwf	??___flmul^0,w,c
  8011   0017D4  6FF0               	movwf	___flmul@temp& (0+255),b
  8012   0017D6  0EFF               	movlw	255
  8013   0017D8  2025               	addwfc	(??___flmul+1)^0,w,c
  8014   0017DA  6FF1               	movwf	(___flmul@temp+1)& (0+255),b
  8015   0017DC  EF05  F00C         	goto	l5850
  8016   0017E0                     l5844:
  8017                           
  8018                           ; BSR set to: 0
  8019   0017E0  90D8               	bcf	status,0,c
  8020   0017E2  37EC               	rlcf	___flmul@prod& (0+255),f,b
  8021   0017E4  37ED               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8022   0017E6  37EE               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8023   0017E8  37EF               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8024   0017EA                     
  8025                           ; BSR set to: 0
  8026   0017EA  AFEA               	btfss	(___flmul@grs+3)& (0+255),7,b
  8027   0017EC  EFFA  F00B         	goto	u4651
  8028   0017F0  EFFC  F00B         	goto	u4650
  8029   0017F4                     u4651:
  8030   0017F4  EFFD  F00B         	goto	l1615
  8031   0017F8                     u4650:
  8032   0017F8                     
  8033                           ; BSR set to: 0
  8034   0017F8  81EC               	bsf	___flmul@prod& (0+255),0,b
  8035   0017FA                     l1615:
  8036                           
  8037                           ; BSR set to: 0
  8038   0017FA  90D8               	bcf	status,0,c
  8039   0017FC  37E7               	rlcf	___flmul@grs& (0+255),f,b
  8040   0017FE  37E8               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8041   001800  37E9               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8042   001802  37EA               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8043   001804  07F0               	decf	___flmul@temp& (0+255),f,b
  8044   001806  A0D8               	btfss	status,0,c
  8045   001808  07F1               	decf	(___flmul@temp+1)& (0+255),f,b
  8046   00180A                     l5850:
  8047                           
  8048                           ; BSR set to: 0
  8049   00180A  AFEE               	btfss	(___flmul@prod+2)& (0+255),7,b
  8050   00180C  EF0A  F00C         	goto	u4661
  8051   001810  EF0C  F00C         	goto	u4660
  8052   001814                     u4661:
  8053   001814  EFF0  F00B         	goto	l5844
  8054   001818                     u4660:
  8055   001818                     
  8056                           ; BSR set to: 0
  8057   001818  0E00               	movlw	0
  8058   00181A  6FE6               	movwf	___flmul@aexp& (0+255),b
  8059   00181C                     
  8060                           ; BSR set to: 0
  8061   00181C  AFEA               	btfss	(___flmul@grs+3)& (0+255),7,b
  8062   00181E  EF13  F00C         	goto	u4671
  8063   001822  EF15  F00C         	goto	u4670
  8064   001826                     u4671:
  8065   001826  EF39  F00C         	goto	l1617
  8066   00182A                     u4670:
  8067   00182A                     
  8068                           ; BSR set to: 0
  8069   00182A  0EFF               	movlw	255
  8070   00182C  15E7               	andwf	___flmul@grs& (0+255),w,b
  8071   00182E  6E24               	movwf	??___flmul^0,c
  8072   001830  0EFF               	movlw	255
  8073   001832  15E8               	andwf	(___flmul@grs+1)& (0+255),w,b
  8074   001834  6E25               	movwf	(??___flmul+1)^0,c
  8075   001836  0EFF               	movlw	255
  8076   001838  15E9               	andwf	(___flmul@grs+2)& (0+255),w,b
  8077   00183A  6E26               	movwf	(??___flmul+2)^0,c
  8078   00183C  0E7F               	movlw	127
  8079   00183E  15EA               	andwf	(___flmul@grs+3)& (0+255),w,b
  8080   001840  6E27               	movwf	(??___flmul+3)^0,c
  8081   001842  5024               	movf	??___flmul^0,w,c
  8082   001844  1025               	iorwf	(??___flmul+1)^0,w,c
  8083   001846  1026               	iorwf	(??___flmul+2)^0,w,c
  8084   001848  1027               	iorwf	(??___flmul+3)^0,w,c
  8085   00184A  B4D8               	btfsc	status,2,c
  8086   00184C  EF2A  F00C         	goto	u4681
  8087   001850  EF2C  F00C         	goto	u4680
  8088   001854                     u4681:
  8089   001854  EF30  F00C         	goto	l1618
  8090   001858                     u4680:
  8091   001858                     l5858:
  8092                           
  8093                           ; BSR set to: 0
  8094   001858  0E01               	movlw	1
  8095   00185A  6FE6               	movwf	___flmul@aexp& (0+255),b
  8096   00185C  EF39  F00C         	goto	l1617
  8097   001860                     l1618:
  8098                           
  8099                           ; BSR set to: 0
  8100   001860  A1EC               	btfss	___flmul@prod& (0+255),0,b
  8101   001862  EF35  F00C         	goto	u4691
  8102   001866  EF37  F00C         	goto	u4690
  8103   00186A                     u4691:
  8104   00186A  EF39  F00C         	goto	l1617
  8105   00186E                     u4690:
  8106   00186E  EF2C  F00C         	goto	l5858
  8107   001872                     l1617:
  8108                           
  8109                           ; BSR set to: 0
  8110   001872  51E6               	movf	___flmul@aexp& (0+255),w,b
  8111   001874  B4D8               	btfsc	status,2,c
  8112   001876  EF3F  F00C         	goto	u4701
  8113   00187A  EF41  F00C         	goto	u4700
  8114   00187E                     u4701:
  8115   00187E  EF65  F00C         	goto	l5870
  8116   001882                     u4700:
  8117   001882                     
  8118                           ; BSR set to: 0
  8119   001882  0E01               	movlw	1
  8120   001884  27EC               	addwf	___flmul@prod& (0+255),f,b
  8121   001886  0E00               	movlw	0
  8122   001888  23ED               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8123   00188A  23EE               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8124   00188C  23EF               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8125   00188E                     
  8126                           ; BSR set to: 0
  8127   00188E  A1EF               	btfss	(___flmul@prod+3)& (0+255),0,b
  8128   001890  EF4C  F00C         	goto	u4711
  8129   001894  EF4E  F00C         	goto	u4710
  8130   001898                     u4711:
  8131   001898  EF65  F00C         	goto	l5870
  8132   00189C                     u4710:
  8133   00189C                     
  8134                           ; BSR set to: 0
  8135   00189C  C0EC  F024         	movff	___flmul@prod,??___flmul
  8136   0018A0  C0ED  F025         	movff	___flmul@prod+1,??___flmul+1
  8137   0018A4  C0EE  F026         	movff	___flmul@prod+2,??___flmul+2
  8138   0018A8  C0EF  F027         	movff	___flmul@prod+3,??___flmul+3
  8139   0018AC  3427               	rlcf	(??___flmul+3)^0,w,c
  8140   0018AE  3227               	rrcf	(??___flmul+3)^0,f,c
  8141   0018B0  3226               	rrcf	(??___flmul+2)^0,f,c
  8142   0018B2  3225               	rrcf	(??___flmul+1)^0,f,c
  8143   0018B4  3224               	rrcf	??___flmul^0,f,c
  8144   0018B6  C024  F0EC         	movff	??___flmul,___flmul@prod
  8145   0018BA  C025  F0ED         	movff	??___flmul+1,___flmul@prod+1
  8146   0018BE  C026  F0EE         	movff	??___flmul+2,___flmul@prod+2
  8147   0018C2  C027  F0EF         	movff	??___flmul+3,___flmul@prod+3
  8148   0018C6                     
  8149                           ; BSR set to: 0
  8150   0018C6  4BF0               	infsnz	___flmul@temp& (0+255),f,b
  8151   0018C8  2BF1               	incf	(___flmul@temp+1)& (0+255),f,b
  8152   0018CA                     l5870:
  8153                           
  8154                           ; BSR set to: 0
  8155   0018CA  BFF1               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8156   0018CC  EF70  F00C         	goto	u4721
  8157   0018D0  51F1               	movf	(___flmul@temp+1)& (0+255),w,b
  8158   0018D2  E108               	bnz	u4720
  8159   0018D4  29F0               	incf	___flmul@temp& (0+255),w,b
  8160   0018D6  A0D8               	btfss	status,0,c
  8161   0018D8  EF70  F00C         	goto	u4721
  8162   0018DC  EF72  F00C         	goto	u4720
  8163   0018E0                     u4721:
  8164   0018E0  EF7C  F00C         	goto	l5874
  8165   0018E4                     u4720:
  8166   0018E4                     
  8167                           ; BSR set to: 0
  8168   0018E4  0E00               	movlw	0
  8169   0018E6  6FEC               	movwf	___flmul@prod& (0+255),b
  8170   0018E8  0E00               	movlw	0
  8171   0018EA  6FED               	movwf	(___flmul@prod+1)& (0+255),b
  8172   0018EC  0E80               	movlw	128
  8173   0018EE  6FEE               	movwf	(___flmul@prod+2)& (0+255),b
  8174   0018F0  0E7F               	movlw	127
  8175   0018F2  6FEF               	movwf	(___flmul@prod+3)& (0+255),b
  8176   0018F4  EFAA  F00C         	goto	l5886
  8177   0018F8                     l5874:
  8178                           
  8179                           ; BSR set to: 0
  8180   0018F8  BFF1               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8181   0018FA  EF89  F00C         	goto	u4730
  8182   0018FE  51F1               	movf	(___flmul@temp+1)& (0+255),w,b
  8183   001900  E106               	bnz	u4731
  8184   001902  05F0               	decf	___flmul@temp& (0+255),w,b
  8185   001904  B0D8               	btfsc	status,0,c
  8186   001906  EF87  F00C         	goto	u4731
  8187   00190A  EF89  F00C         	goto	u4730
  8188   00190E                     u4731:
  8189   00190E  EF95  F00C         	goto	l1625
  8190   001912                     u4730:
  8191   001912                     
  8192                           ; BSR set to: 0
  8193   001912  0E00               	movlw	0
  8194   001914  6FEC               	movwf	___flmul@prod& (0+255),b
  8195   001916  0E00               	movlw	0
  8196   001918  6FED               	movwf	(___flmul@prod+1)& (0+255),b
  8197   00191A  0E00               	movlw	0
  8198   00191C  6FEE               	movwf	(___flmul@prod+2)& (0+255),b
  8199   00191E  0E00               	movlw	0
  8200   001920  6FEF               	movwf	(___flmul@prod+3)& (0+255),b
  8201   001922  0E00               	movlw	0
  8202   001924  6FE5               	movwf	___flmul@sign& (0+255),b
  8203   001926  EFAA  F00C         	goto	l5886
  8204   00192A                     l1625:
  8205                           
  8206                           ; BSR set to: 0
  8207   00192A  C0F0  F0EB         	movff	___flmul@temp,___flmul@bexp
  8208   00192E                     
  8209                           ; BSR set to: 0
  8210   00192E  0EFF               	movlw	255
  8211   001930  17EC               	andwf	___flmul@prod& (0+255),f,b
  8212   001932  0EFF               	movlw	255
  8213   001934  17ED               	andwf	(___flmul@prod+1)& (0+255),f,b
  8214   001936  0E7F               	movlw	127
  8215   001938  17EE               	andwf	(___flmul@prod+2)& (0+255),f,b
  8216   00193A  0E00               	movlw	0
  8217   00193C  17EF               	andwf	(___flmul@prod+3)& (0+255),f,b
  8218   00193E                     
  8219                           ; BSR set to: 0
  8220   00193E  A1EB               	btfss	___flmul@bexp& (0+255),0,b
  8221   001940  EFA4  F00C         	goto	u4741
  8222   001944  EFA6  F00C         	goto	u4740
  8223   001948                     u4741:
  8224   001948  EFA7  F00C         	goto	l5884
  8225   00194C                     u4740:
  8226   00194C                     
  8227                           ; BSR set to: 0
  8228   00194C  8FEE               	bsf	(___flmul@prod+2)& (0+255),7,b
  8229   00194E                     l5884:
  8230                           
  8231                           ; BSR set to: 0
  8232   00194E  90D8               	bcf	status,0,c
  8233   001950  31EB               	rrcf	___flmul@bexp& (0+255),w,b
  8234   001952  6FEF               	movwf	(___flmul@prod+3)& (0+255),b
  8235   001954                     l5886:
  8236                           
  8237                           ; BSR set to: 0
  8238   001954  51E5               	movf	___flmul@sign& (0+255),w,b
  8239   001956  13EF               	iorwf	(___flmul@prod+3)& (0+255),f,b
  8240   001958                     
  8241                           ; BSR set to: 0
  8242   001958  C0EC  F0DD         	movff	___flmul@prod,?___flmul
  8243   00195C  C0ED  F0DE         	movff	___flmul@prod+1,?___flmul+1
  8244   001960  C0EE  F0DF         	movff	___flmul@prod+2,?___flmul+2
  8245   001964  C0EF  F0E0         	movff	___flmul@prod+3,?___flmul+3
  8246   001968                     l1612:
  8247                           
  8248                           ; BSR set to: 0
  8249   001968  0012               	return		;funcret
  8250   00196A                     __end_of___flmul:
  8251                           	callstack 0
  8252                           
  8253 ;; *************** function _ADC_GetConversion *****************
  8254 ;; Defined at:
  8255 ;;		line 115 in file "mcc_generated_files/adc.c"
  8256 ;; Parameters:    Size  Location     Type
  8257 ;;  channel         1    wreg     enum E2740
  8258 ;; Auto vars:     Size  Location     Type
  8259 ;;  channel         1   31[COMRAM] enum E2740
  8260 ;; Return value:  Size  Location     Type
  8261 ;;                  2   27[COMRAM] unsigned short 
  8262 ;; Registers used:
  8263 ;;		wreg, status,2, status,0
  8264 ;; Tracked objects:
  8265 ;;		On entry : 0/0
  8266 ;;		On exit  : 0/0
  8267 ;;		Unchanged: 0/0
  8268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8269 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8270 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8271 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8272 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8273 ;;Total ram usage:        5 bytes
  8274 ;; Hardware stack levels used: 1
  8275 ;; Hardware stack levels required when called: 7
  8276 ;; This function calls:
  8277 ;;		Nothing
  8278 ;; This function is called by:
  8279 ;;		_read_HS1101_moist_percent
  8280 ;;		_LDR_reading
  8281 ;; This function uses a non-reentrant model
  8282 ;;
  8283                           
  8284                           	psect	text65
  8285   002EE4                     __ptext65:
  8286                           	callstack 0
  8287   002EE4                     _ADC_GetConversion:
  8288                           	callstack 22
  8289                           
  8290                           ; BSR set to: 0
  8291                           ;incstack = 0
  8292                           ;ADC_GetConversion@channel stored from wreg
  8293   002EE4  6E20               	movwf	ADC_GetConversion@channel^0,c
  8294   002EE6                     
  8295                           ;mcc_generated_files/adc.c: 115: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 116: {;mcc_generated_files/adc.c: 118:     ADCON0bits.CHS = ch
      +                          annel;
  8296   002EE6  C020  F01E         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  8297   002EEA  461E               	rlncf	??_ADC_GetConversion^0,f,c
  8298   002EEC  461E               	rlncf	??_ADC_GetConversion^0,f,c
  8299   002EEE  50C2               	movf	194,w,c	;volatile
  8300   002EF0  181E               	xorwf	??_ADC_GetConversion^0,w,c
  8301   002EF2  0BC3               	andlw	-61
  8302   002EF4  181E               	xorwf	??_ADC_GetConversion^0,w,c
  8303   002EF6  6EC2               	movwf	194,c	;volatile
  8304   002EF8                     
  8305                           ;mcc_generated_files/adc.c: 121:     ADCON0bits.ADON = 1;
  8306   002EF8  80C2               	bsf	194,0,c	;volatile
  8307   002EFA                     
  8308                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  8309   002EFA  82C2               	bsf	194,1,c	;volatile
  8310   002EFC                     l748:
  8311                           
  8312                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  8313   002EFC  B2C2               	btfsc	194,1,c	;volatile
  8314   002EFE  EF83  F017         	goto	u4531
  8315   002F02  EF85  F017         	goto	u4530
  8316   002F06                     u4531:
  8317   002F06  EF7E  F017         	goto	l748
  8318   002F0A                     u4530:
  8319   002F0A                     
  8320                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  8321   002F0A  50C4               	movf	196,w,c	;volatile
  8322   002F0C  6E1F               	movwf	(??_ADC_GetConversion+1)^0,c
  8323   002F0E  6A1E               	clrf	??_ADC_GetConversion^0,c
  8324   002F10  50C3               	movf	195,w,c	;volatile
  8325   002F12  241E               	addwf	??_ADC_GetConversion^0,w,c
  8326   002F14  6E1C               	movwf	?_ADC_GetConversion^0,c
  8327   002F16  0E00               	movlw	0
  8328   002F18  201F               	addwfc	(??_ADC_GetConversion+1)^0,w,c
  8329   002F1A  6E1D               	movwf	(?_ADC_GetConversion+1)^0,c
  8330   002F1C  0012               	return		;funcret
  8331   002F1E                     __end_of_ADC_GetConversion:
  8332                           	callstack 0
  8333                           
  8334 ;; *************** function _INTERRUPT_InterruptManager *****************
  8335 ;; Defined at:
  8336 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  8337 ;; Parameters:    Size  Location     Type
  8338 ;;		None
  8339 ;; Auto vars:     Size  Location     Type
  8340 ;;		None
  8341 ;; Return value:  Size  Location     Type
  8342 ;;                  1    wreg      void 
  8343 ;; Registers used:
  8344 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8345 ;; Tracked objects:
  8346 ;;		On entry : 0/0
  8347 ;;		On exit  : 0/0
  8348 ;;		Unchanged: 0/0
  8349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8352 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8353 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8354 ;;Total ram usage:       10 bytes
  8355 ;; Hardware stack levels used: 1
  8356 ;; Hardware stack levels required when called: 6
  8357 ;; This function calls:
  8358 ;;		NULL
  8359 ;;		_ADC_ISR
  8360 ;;		_EUSART_Receive_ISR
  8361 ;;		_EUSART_Transmit_ISR
  8362 ;;		_I2C_MasterIsr
  8363 ;; This function is called by:
  8364 ;;		Interrupt level 2
  8365 ;; This function uses a non-reentrant model
  8366 ;;
  8367                           
  8368                           	psect	intcode
  8369   000008                     __pintcode:
  8370                           	callstack 0
  8371   000008                     _INTERRUPT_InterruptManager:
  8372                           	callstack 17
  8373                           
  8374                           ;incstack = 0
  8375   000008  8244               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8376   00000A  CFFA F012          	movff	pclath,??_INTERRUPT_InterruptManager
  8377   00000E  CFFB F013          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  8378   000012  CFD9 F014          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  8379   000016  CFDA F015          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  8380   00001A  CFF3 F016          	movff	prodl,??_INTERRUPT_InterruptManager+4
  8381   00001E  CFF4 F017          	movff	prodh,??_INTERRUPT_InterruptManager+5
  8382   000022  CFF6 F018          	movff	tblptrl,??_INTERRUPT_InterruptManager+6
  8383   000026  CFF7 F019          	movff	tblptrh,??_INTERRUPT_InterruptManager+7
  8384   00002A  CFF8 F01A          	movff	tblptru,??_INTERRUPT_InterruptManager+8
  8385   00002E  CFF5 F01B          	movff	tablat,??_INTERRUPT_InterruptManager+9
  8386   000032                     
  8387                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  8388   000032  ACF2               	btfss	242,6,c	;volatile
  8389   000034  EF1E  F000         	goto	i2u351_41
  8390   000038  EF20  F000         	goto	i2u351_40
  8391   00003C                     i2u351_41:
  8392   00003C  EF97  F000         	goto	i2l305
  8393   000040                     i2u351_40:
  8394   000040                     
  8395                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
  8396   000040  AC9D               	btfss	157,6,c	;volatile
  8397   000042  EF25  F000         	goto	i2u352_41
  8398   000046  EF27  F000         	goto	i2u352_40
  8399   00004A                     i2u352_41:
  8400   00004A  EF32  F000         	goto	i2l294
  8401   00004E                     i2u352_40:
  8402   00004E  AC9E               	btfss	158,6,c	;volatile
  8403   000050  EF2C  F000         	goto	i2u353_41
  8404   000054  EF2E  F000         	goto	i2u353_40
  8405   000058                     i2u353_41:
  8406   000058  EF32  F000         	goto	i2l294
  8407   00005C                     i2u353_40:
  8408   00005C                     
  8409                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             ADC_ISR();
  8410   00005C  EC2B  F018         	call	_ADC_ISR	;wreg free
  8411                           
  8412                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  8413   000060  EF97  F000         	goto	i2l305
  8414   000064                     i2l294:
  8415   000064  A89D               	btfss	157,4,c	;volatile
  8416   000066  EF37  F000         	goto	i2u354_41
  8417   00006A  EF39  F000         	goto	i2u354_40
  8418   00006E                     i2u354_41:
  8419   00006E  EF4E  F000         	goto	i2l296
  8420   000072                     i2u354_40:
  8421   000072  A89E               	btfss	158,4,c	;volatile
  8422   000074  EF3E  F000         	goto	i2u355_41
  8423   000078  EF40  F000         	goto	i2u355_40
  8424   00007C                     i2u355_41:
  8425   00007C  EF4E  F000         	goto	i2l296
  8426   000080                     i2u355_40:
  8427   000080                     
  8428                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART_TxDefaultInterruptHandler();
  8429   000080  D802               	call	i2u356_48
  8430   000082  EF4C  F000         	goto	i2u356_49
  8431   000086                     i2u356_48:
  8432   000086  0005               	push	
  8433   000088  6EFA               	movwf	pclath,c
  8434   00008A  5042               	movf	_EUSART_TxDefaultInterruptHandler^0,w,c
  8435   00008C  6EFD               	movwf	tosl,c
  8436   00008E  5043               	movf	(_EUSART_TxDefaultInterruptHandler+1)^0,w,c
  8437   000090  6EFE               	movwf	tosh,c
  8438   000092  6AFF               	clrf	tosu,c
  8439   000094  50FA               	movf	pclath,w,c
  8440   000096  0012               	return		;indir
  8441   000098                     i2u356_49:
  8442                           
  8443                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  8444   000098  EF97  F000         	goto	i2l305
  8445   00009C                     i2l296:
  8446   00009C  AA9D               	btfss	157,5,c	;volatile
  8447   00009E  EF53  F000         	goto	i2u357_41
  8448   0000A2  EF55  F000         	goto	i2u357_40
  8449   0000A6                     i2u357_41:
  8450   0000A6  EF6B  F000         	goto	i2l298
  8451   0000AA                     i2u357_40:
  8452   0000AA  AA9E               	btfss	158,5,c	;volatile
  8453   0000AC  EF5A  F000         	goto	i2u358_41
  8454   0000B0  EF5C  F000         	goto	i2u358_40
  8455   0000B4                     i2u358_41:
  8456   0000B4  EF6B  F000         	goto	i2l298
  8457   0000B8                     i2u358_40:
  8458   0000B8                     
  8459                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART_RxDefaultInterruptHandler();
  8460   0000B8  D802               	call	i2u359_48
  8461   0000BA  EF69  F000         	goto	i2u359_49
  8462   0000BE                     i2u359_48:
  8463   0000BE  0005               	push	
  8464   0000C0  6EFA               	movwf	pclath,c
  8465   0000C2  0100               	movlb	0	; () banked
  8466   0000C4  51FE               	movf	_EUSART_RxDefaultInterruptHandler& (0+255),w,b
  8467   0000C6  6EFD               	movwf	tosl,c
  8468   0000C8  51FF               	movf	(_EUSART_RxDefaultInterruptHandler+1)& (0+255),w,b
  8469   0000CA  6EFE               	movwf	tosh,c
  8470   0000CC  6AFF               	clrf	tosu,c
  8471   0000CE  50FA               	movf	pclath,w,c
  8472   0000D0  0012               	return		;indir
  8473   0000D2                     i2u359_49:
  8474                           
  8475                           ;mcc_generated_files/interrupt_manager.c: 74:         }
  8476   0000D2  EF97  F000         	goto	i2l305
  8477   0000D6                     i2l298:
  8478   0000D6  A6A0               	btfss	160,3,c	;volatile
  8479   0000D8  EF70  F000         	goto	i2u360_41
  8480   0000DC  EF72  F000         	goto	i2u360_40
  8481   0000E0                     i2u360_41:
  8482   0000E0  EF87  F000         	goto	i2l300
  8483   0000E4                     i2u360_40:
  8484   0000E4  A6A1               	btfss	161,3,c	;volatile
  8485   0000E6  EF77  F000         	goto	i2u361_41
  8486   0000EA  EF79  F000         	goto	i2u361_40
  8487   0000EE                     i2u361_41:
  8488   0000EE  EF87  F000         	goto	i2l300
  8489   0000F2                     i2u361_40:
  8490   0000F2                     i2l4924:
  8491                           
  8492                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             MSSP_InterruptHandler();
  8493   0000F2  D802               	call	i2u362_48
  8494   0000F4  EF85  F000         	goto	i2u362_49
  8495   0000F8                     i2u362_48:
  8496   0000F8  0005               	push	
  8497   0000FA  6EFA               	movwf	pclath,c
  8498   0000FC  502C               	movf	_MSSP_InterruptHandler^0,w,c
  8499   0000FE  6EFD               	movwf	tosl,c
  8500   000100  502D               	movf	(_MSSP_InterruptHandler+1)^0,w,c
  8501   000102  6EFE               	movwf	tosh,c
  8502   000104  6AFF               	clrf	tosu,c
  8503   000106  50FA               	movf	pclath,w,c
  8504   000108  0012               	return		;indir
  8505   00010A                     i2u362_49:
  8506                           
  8507                           ;mcc_generated_files/interrupt_manager.c: 78:         }
  8508   00010A  EF97  F000         	goto	i2l305
  8509   00010E                     i2l300:
  8510   00010E  A69D               	btfss	157,3,c	;volatile
  8511   000110  EF8C  F000         	goto	i2u363_41
  8512   000114  EF8E  F000         	goto	i2u363_40
  8513   000118                     i2u363_41:
  8514   000118  EF97  F000         	goto	i2l299
  8515   00011C                     i2u363_40:
  8516   00011C  A69E               	btfss	158,3,c	;volatile
  8517   00011E  EF93  F000         	goto	i2u364_41
  8518   000122  EF95  F000         	goto	i2u364_40
  8519   000126                     i2u364_41:
  8520   000126  EF97  F000         	goto	i2l299
  8521   00012A                     i2u364_40:
  8522   00012A  EF79  F000         	goto	i2l4924
  8523   00012E                     i2l299:
  8524   00012E                     i2l305:
  8525   00012E  C01B  FFF5         	movff	??_INTERRUPT_InterruptManager+9,tablat
  8526   000132  C01A  FFF8         	movff	??_INTERRUPT_InterruptManager+8,tblptru
  8527   000136  C019  FFF7         	movff	??_INTERRUPT_InterruptManager+7,tblptrh
  8528   00013A  C018  FFF6         	movff	??_INTERRUPT_InterruptManager+6,tblptrl
  8529   00013E  C017  FFF4         	movff	??_INTERRUPT_InterruptManager+5,prodh
  8530   000142  C016  FFF3         	movff	??_INTERRUPT_InterruptManager+4,prodl
  8531   000146  C015  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  8532   00014A  C014  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  8533   00014E  C013  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  8534   000152  C012  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  8535   000156  9244               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8536   000158  0011               	retfie		f
  8537   00015A                     __end_of_INTERRUPT_InterruptManager:
  8538                           	callstack 0
  8539                           
  8540 ;; *************** function _I2C_MasterIsr *****************
  8541 ;; Defined at:
  8542 ;;		line 318 in file "mcc_generated_files/i2c_master.c"
  8543 ;; Parameters:    Size  Location     Type
  8544 ;;		None
  8545 ;; Auto vars:     Size  Location     Type
  8546 ;;		None
  8547 ;; Return value:  Size  Location     Type
  8548 ;;                  1    wreg      void 
  8549 ;; Registers used:
  8550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8551 ;; Tracked objects:
  8552 ;;		On entry : 0/0
  8553 ;;		On exit  : 0/0
  8554 ;;		Unchanged: 0/0
  8555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8560 ;;Total ram usage:        0 bytes
  8561 ;; Hardware stack levels used: 1
  8562 ;; Hardware stack levels required when called: 5
  8563 ;; This function calls:
  8564 ;;		_I2C_MasterFsm
  8565 ;; This function is called by:
  8566 ;;		_I2C_Open
  8567 ;;		_INTERRUPT_InterruptManager
  8568 ;; This function uses a non-reentrant model
  8569 ;;
  8570                           
  8571                           	psect	text67
  8572   003430                     __ptext67:
  8573                           	callstack 0
  8574   003430                     _I2C_MasterIsr:
  8575                           	callstack 17
  8576   003430                     
  8577                           ;mcc_generated_files/i2c_master.c: 320:     I2C_MasterFsm();
  8578   003430  EC28  F015         	call	_I2C_MasterFsm	;wreg free
  8579   003434  0012               	return		;funcret
  8580   003436                     __end_of_I2C_MasterIsr:
  8581                           	callstack 0
  8582                           
  8583 ;; *************** function _I2C_MasterFsm *****************
  8584 ;; Defined at:
  8585 ;;		line 323 in file "mcc_generated_files/i2c_master.c"
  8586 ;; Parameters:    Size  Location     Type
  8587 ;;		None
  8588 ;; Auto vars:     Size  Location     Type
  8589 ;;		None
  8590 ;; Return value:  Size  Location     Type
  8591 ;;                  1    wreg      void 
  8592 ;; Registers used:
  8593 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8594 ;; Tracked objects:
  8595 ;;		On entry : 0/0
  8596 ;;		On exit  : 0/0
  8597 ;;		Unchanged: 0/0
  8598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8601 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8602 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8603 ;;Total ram usage:        3 bytes
  8604 ;; Hardware stack levels used: 1
  8605 ;; Hardware stack levels required when called: 4
  8606 ;; This function calls:
  8607 ;;		_I2C_DO_ADDRESS_NACK
  8608 ;;		_I2C_DO_IDLE
  8609 ;;		_I2C_DO_RCEN
  8610 ;;		_I2C_DO_RESET
  8611 ;;		_I2C_DO_RX
  8612 ;;		_I2C_DO_RX_ACK
  8613 ;;		_I2C_DO_RX_NACK_RESTART
  8614 ;;		_I2C_DO_RX_NACK_STOP
  8615 ;;		_I2C_DO_SEND_ADR_READ
  8616 ;;		_I2C_DO_SEND_ADR_WRITE
  8617 ;;		_I2C_DO_SEND_RESTART
  8618 ;;		_I2C_DO_SEND_RESTART_READ
  8619 ;;		_I2C_DO_SEND_RESTART_WRITE
  8620 ;;		_I2C_DO_SEND_STOP
  8621 ;;		_I2C_DO_TX
  8622 ;;		_I2C_DO_TX_EMPTY
  8623 ;;		_I2C_MasterIsNack
  8624 ;;		i2_I2C_MasterClearIrq
  8625 ;; This function is called by:
  8626 ;;		_I2C_MasterIsr
  8627 ;; This function uses a non-reentrant model
  8628 ;;
  8629                           
  8630                           	psect	text68
  8631   002A50                     __ptext68:
  8632                           	callstack 0
  8633   002A50                     _I2C_MasterFsm:
  8634                           	callstack 17
  8635   002A50                     
  8636                           ;mcc_generated_files/i2c_master.c: 325:     I2C_MasterClearIrq();
  8637   002A50  EC33  F01A         	call	i2_I2C_MasterClearIrq	;wreg free
  8638   002A54                     
  8639                           ;mcc_generated_files/i2c_master.c: 327:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
  8640   002A54  0100               	movlb	0	; () banked
  8641   002A56  A183               	btfss	(_I2C_Status+35)& (0+255),0,b
  8642   002A58  EF30  F015         	goto	i2u286_41
  8643   002A5C  EF32  F015         	goto	i2u286_40
  8644   002A60                     i2u286_41:
  8645   002A60  EF3F  F015         	goto	i2l4432
  8646   002A64                     i2u286_40:
  8647   002A64                     
  8648                           ; BSR set to: 0
  8649   002A64  ECA0  F019         	call	_I2C_MasterIsNack	;wreg free
  8650   002A68  0900               	iorlw	0
  8651   002A6A  B4D8               	btfsc	status,2,c
  8652   002A6C  EF3A  F015         	goto	i2u287_41
  8653   002A70  EF3C  F015         	goto	i2u287_40
  8654   002A74                     i2u287_41:
  8655   002A74  EF3F  F015         	goto	i2l4432
  8656   002A78                     i2u287_40:
  8657   002A78                     
  8658                           ;mcc_generated_files/i2c_master.c: 328:     {;mcc_generated_files/i2c_master.c: 329:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
  8659   002A78  0E0F               	movlw	15
  8660   002A7A  0100               	movlb	0	; () banked
  8661   002A7C  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  8662   002A7E                     i2l4432:
  8663                           
  8664                           ;mcc_generated_files/i2c_master.c: 331:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
  8665   002A7E  0100               	movlb	0	; () banked
  8666   002A80  5181               	movf	(_I2C_Status+33)& (0+255),w,b
  8667   002A82  0D02               	mullw	2
  8668   002A84  50F3               	movf	243,w,c
  8669   002A86  0F01               	addlw	low _i2c_fsmStateTable
  8670   002A88  6E0F               	movwf	??_I2C_MasterFsm^0,c
  8671   002A8A  C00F  FFF6         	movff	??_I2C_MasterFsm,tblptrl
  8672   002A8E                     	if	1	;There is more than 1 active tblptr byte
  8673   002A8E  0E10               	movlw	high __smallconst
  8674   002A90  6EF7               	movwf	tblptrh,c
  8675   002A92                     	endif
  8676   002A92                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8677   002A92  6AF8               	clrf	tblptru,c
  8678   002A94                     	endif
  8679   002A94                     	if	0	;tblptru may be non-zero
  8680   002A94                     	endif
  8681   002A94  0009               	tblrd		*+
  8682   002A96  CFF5 F010          	movff	tablat,??_I2C_MasterFsm+1
  8683   002A9A  0009               	tblrd		*+
  8684   002A9C  CFF5 F011          	movff	tablat,??_I2C_MasterFsm+2
  8685   002AA0  D802               	call	i2u288_48
  8686   002AA2  EF5C  F015         	goto	i2u288_49
  8687   002AA6                     i2u288_48:
  8688   002AA6  0005               	push	
  8689   002AA8  6EFA               	movwf	pclath,c
  8690   002AAA  5010               	movf	(??_I2C_MasterFsm+1)^0,w,c
  8691   002AAC  6EFD               	movwf	tosl,c
  8692   002AAE  5011               	movf	(??_I2C_MasterFsm+2)^0,w,c
  8693   002AB0  6EFE               	movwf	tosh,c
  8694   002AB2  6AFF               	clrf	tosu,c
  8695   002AB4  50FA               	movf	pclath,w,c
  8696   002AB6  0012               	return		;indir
  8697   002AB8                     i2u288_49:
  8698   002AB8  0100               	movlb	0	; () banked
  8699   002ABA  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  8700   002ABC                     
  8701                           ; BSR set to: 0
  8702   002ABC  0012               	return		;funcret
  8703   002ABE                     __end_of_I2C_MasterFsm:
  8704                           	callstack 0
  8705                           
  8706 ;; *************** function i2_I2C_MasterClearIrq *****************
  8707 ;; Defined at:
  8708 ;;		line 642 in file "mcc_generated_files/i2c_master.c"
  8709 ;; Parameters:    Size  Location     Type
  8710 ;;		None
  8711 ;; Auto vars:     Size  Location     Type
  8712 ;;		None
  8713 ;; Return value:  Size  Location     Type
  8714 ;;                  1    wreg      void 
  8715 ;; Registers used:
  8716 ;;		None
  8717 ;; Tracked objects:
  8718 ;;		On entry : 0/0
  8719 ;;		On exit  : 0/0
  8720 ;;		Unchanged: 0/0
  8721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8726 ;;Total ram usage:        0 bytes
  8727 ;; Hardware stack levels used: 1
  8728 ;; This function calls:
  8729 ;;		Nothing
  8730 ;; This function is called by:
  8731 ;;		_I2C_MasterFsm
  8732 ;; This function uses a non-reentrant model
  8733 ;;
  8734                           
  8735                           	psect	text69
  8736   003466                     __ptext69:
  8737                           	callstack 0
  8738   003466                     i2_I2C_MasterClearIrq:
  8739                           	callstack 20
  8740   003466                     
  8741                           ;mcc_generated_files/i2c_master.c: 644:     PIR1bits.SSPIF = 0;
  8742   003466  969E               	bcf	158,3,c	;volatile
  8743   003468  0012               	return		;funcret
  8744   00346A                     __end_ofi2_I2C_MasterClearIrq:
  8745                           	callstack 0
  8746                           
  8747 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  8748 ;; Defined at:
  8749 ;;		line 501 in file "mcc_generated_files/i2c_master.c"
  8750 ;; Parameters:    Size  Location     Type
  8751 ;;		None
  8752 ;; Auto vars:     Size  Location     Type
  8753 ;;		None
  8754 ;; Return value:  Size  Location     Type
  8755 ;;                  1    wreg      enum E3134
  8756 ;; Registers used:
  8757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  8758 ;; Tracked objects:
  8759 ;;		On entry : 0/0
  8760 ;;		On exit  : 0/0
  8761 ;;		Unchanged: 0/0
  8762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8765 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8766 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8767 ;;Total ram usage:        2 bytes
  8768 ;; Hardware stack levels used: 1
  8769 ;; Hardware stack levels required when called: 3
  8770 ;; This function calls:
  8771 ;;		NULL
  8772 ;;		_I2C_CallbackReturnReset
  8773 ;;		_I2C_CallbackReturnStop
  8774 ;;		_I2C_DO_SEND_RESTART
  8775 ;;		_I2C_DO_SEND_STOP
  8776 ;;		_rd1RegCompleteHandler
  8777 ;;		_rd2RegCompleteHandler
  8778 ;;		_rdBlkRegCompleteHandler
  8779 ;;		_wr1RegCompleteHandler
  8780 ;;		_wr2RegCompleteHandler
  8781 ;; This function is called by:
  8782 ;;		_I2C_MasterFsm
  8783 ;; This function uses a non-reentrant model
  8784 ;;
  8785                           
  8786                           	psect	text70
  8787   002B90                     __ptext70:
  8788                           	callstack 0
  8789   002B90                     _I2C_DO_ADDRESS_NACK:
  8790                           	callstack 17
  8791   002B90                     
  8792                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.addressNackCheck = 0;
  8793   002B90  0100               	movlb	0	; () banked
  8794   002B92  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  8795   002B94                     
  8796                           ; BSR set to: 0
  8797                           ;mcc_generated_files/i2c_master.c: 504:     I2C_Status.error = I2C_FAIL;
  8798   002B94  0E02               	movlw	2
  8799   002B96  6F82               	movwf	(_I2C_Status+34)& (0+255),b
  8800                           
  8801                           ;mcc_generated_files/i2c_master.c: 505:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
  8802   002B98  EFD6  F015         	goto	i2l4060
  8803   002B9C                     i2l4050:
  8804                           
  8805                           ;mcc_generated_files/i2c_master.c: 509:             return I2C_DO_SEND_RESTART();
  8806   002B9C  EC08  F01A         	call	_I2C_DO_SEND_RESTART	;wreg free
  8807   002BA0  EFFA  F015         	goto	i2l588
  8808   002BA4                     i2l4054:
  8809                           
  8810                           ;mcc_generated_files/i2c_master.c: 511:             return I2C_DO_SEND_STOP();
  8811   002BA4  EC04  F01A         	call	_I2C_DO_SEND_STOP	;wreg free
  8812   002BA8  EFFA  F015         	goto	i2l588
  8813   002BAC                     i2l4060:
  8814                           
  8815                           ; BSR set to: 0
  8816   002BAC  C070  F00A         	movff	_I2C_Status+16,I2C_CallbackReturnReset@funPtr
  8817   002BB0  C071  F00B         	movff	_I2C_Status+17,I2C_CallbackReturnReset@funPtr+1
  8818   002BB4  D802               	call	i2u236_48
  8819   002BB6  EFE6  F015         	goto	i2u236_49
  8820   002BBA                     i2u236_48:
  8821   002BBA  0005               	push	
  8822   002BBC  6EFA               	movwf	pclath,c
  8823   002BBE  5164               	movf	(_I2C_Status+4)& (0+255),w,b
  8824   002BC0  6EFD               	movwf	tosl,c
  8825   002BC2  5165               	movf	(_I2C_Status+5)& (0+255),w,b
  8826   002BC4  6EFE               	movwf	tosh,c
  8827   002BC6  6AFF               	clrf	tosu,c
  8828   002BC8  50FA               	movf	pclath,w,c
  8829   002BCA  0012               	return		;indir
  8830   002BCC                     i2u236_49:
  8831   002BCC  6E0D               	movwf	??_I2C_DO_ADDRESS_NACK^0,c
  8832   002BCE  6A0E               	clrf	(??_I2C_DO_ADDRESS_NACK+1)^0,c
  8833                           
  8834                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8835                           ; Switch size 1, requested type "simple"
  8836                           ; Number of cases is 1, Range of values is 0 to 0
  8837                           ; switch strategies available:
  8838                           ; Name         Instructions Cycles
  8839                           ; simple_byte            4     3 (average)
  8840                           ;	Chosen strategy is simple_byte
  8841   002BD0  500E               	movf	(??_I2C_DO_ADDRESS_NACK+1)^0,w,c
  8842   002BD2  0A00               	xorlw	0	; case 0
  8843   002BD4  B4D8               	btfsc	status,2,c
  8844   002BD6  EFEF  F015         	goto	i2l6852
  8845   002BDA  EFD2  F015         	goto	i2l4054
  8846   002BDE                     i2l6852:
  8847                           
  8848                           ; Switch size 1, requested type "simple"
  8849                           ; Number of cases is 2, Range of values is 2 to 3
  8850                           ; switch strategies available:
  8851                           ; Name         Instructions Cycles
  8852                           ; simple_byte            7     4 (average)
  8853                           ;	Chosen strategy is simple_byte
  8854   002BDE  500D               	movf	??_I2C_DO_ADDRESS_NACK^0,w,c
  8855   002BE0  0A02               	xorlw	2	; case 2
  8856   002BE2  B4D8               	btfsc	status,2,c
  8857   002BE4  EFCE  F015         	goto	i2l4050
  8858   002BE8  0A01               	xorlw	1	; case 3
  8859   002BEA  B4D8               	btfsc	status,2,c
  8860   002BEC  EFCE  F015         	goto	i2l4050
  8861   002BF0  EFD2  F015         	goto	i2l4054
  8862   002BF4                     i2l588:
  8863   002BF4  0012               	return		;funcret
  8864   002BF6                     __end_of_I2C_DO_ADDRESS_NACK:
  8865                           	callstack 0
  8866                           
  8867 ;; *************** function _I2C_DO_RESET *****************
  8868 ;; Defined at:
  8869 ;;		line 495 in file "mcc_generated_files/i2c_master.c"
  8870 ;; Parameters:    Size  Location     Type
  8871 ;;		None
  8872 ;; Auto vars:     Size  Location     Type
  8873 ;;		None
  8874 ;; Return value:  Size  Location     Type
  8875 ;;                  1    wreg      enum E3134
  8876 ;; Registers used:
  8877 ;;		wreg, status,2
  8878 ;; Tracked objects:
  8879 ;;		On entry : 0/0
  8880 ;;		On exit  : 0/0
  8881 ;;		Unchanged: 0/0
  8882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8887 ;;Total ram usage:        0 bytes
  8888 ;; Hardware stack levels used: 1
  8889 ;; This function calls:
  8890 ;;		Nothing
  8891 ;; This function is called by:
  8892 ;;		_I2C_MasterFsm
  8893 ;; This function uses a non-reentrant model
  8894 ;;
  8895                           
  8896                           	psect	text71
  8897   003374                     __ptext71:
  8898                           	callstack 0
  8899   003374                     _I2C_DO_RESET:
  8900                           	callstack 20
  8901   003374                     
  8902                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.busy = 0;
  8903   003374  0100               	movlb	0	; () banked
  8904   003376  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
  8905   003378                     
  8906                           ; BSR set to: 0
  8907                           ;mcc_generated_files/i2c_master.c: 498:     I2C_Status.error = I2C_NOERR;
  8908   003378  0E00               	movlw	0
  8909   00337A  6F82               	movwf	(_I2C_Status+34)& (0+255),b
  8910   00337C                     
  8911                           ; BSR set to: 0
  8912                           ;mcc_generated_files/i2c_master.c: 499:     return I2C_RESET;
  8913   00337C  0E0E               	movlw	14
  8914   00337E                     
  8915                           ; BSR set to: 0
  8916   00337E  0012               	return		;funcret
  8917   003380                     __end_of_I2C_DO_RESET:
  8918                           	callstack 0
  8919                           
  8920 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  8921 ;; Defined at:
  8922 ;;		line 489 in file "mcc_generated_files/i2c_master.c"
  8923 ;; Parameters:    Size  Location     Type
  8924 ;;		None
  8925 ;; Auto vars:     Size  Location     Type
  8926 ;;		None
  8927 ;; Return value:  Size  Location     Type
  8928 ;;                  1    wreg      enum E3134
  8929 ;; Registers used:
  8930 ;;		wreg, cstack
  8931 ;; Tracked objects:
  8932 ;;		On entry : 0/0
  8933 ;;		On exit  : 0/0
  8934 ;;		Unchanged: 0/0
  8935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8940 ;;Total ram usage:        0 bytes
  8941 ;; Hardware stack levels used: 1
  8942 ;; Hardware stack levels required when called: 1
  8943 ;; This function calls:
  8944 ;;		_I2C_MasterSendNack
  8945 ;; This function is called by:
  8946 ;;		_I2C_DO_RX
  8947 ;;		_I2C_MasterFsm
  8948 ;; This function uses a non-reentrant model
  8949 ;;
  8950                           
  8951                           	psect	text72
  8952   0033F0                     __ptext72:
  8953                           	callstack 0
  8954   0033F0                     _I2C_DO_RX_NACK_RESTART:
  8955                           	callstack 19
  8956   0033F0                     
  8957                           ;mcc_generated_files/i2c_master.c: 491:     I2C_MasterSendNack();
  8958   0033F0  EC1E  F01A         	call	_I2C_MasterSendNack	;wreg free
  8959   0033F4                     
  8960                           ;mcc_generated_files/i2c_master.c: 492:     return I2C_SEND_RESTART;
  8961   0033F4  0E09               	movlw	9
  8962   0033F6  0012               	return		;funcret
  8963   0033F8                     __end_of_I2C_DO_RX_NACK_RESTART:
  8964                           	callstack 0
  8965                           
  8966 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  8967 ;; Defined at:
  8968 ;;		line 483 in file "mcc_generated_files/i2c_master.c"
  8969 ;; Parameters:    Size  Location     Type
  8970 ;;		None
  8971 ;; Auto vars:     Size  Location     Type
  8972 ;;		None
  8973 ;; Return value:  Size  Location     Type
  8974 ;;                  1    wreg      enum E3134
  8975 ;; Registers used:
  8976 ;;		wreg, cstack
  8977 ;; Tracked objects:
  8978 ;;		On entry : 0/0
  8979 ;;		On exit  : 0/0
  8980 ;;		Unchanged: 0/0
  8981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8986 ;;Total ram usage:        0 bytes
  8987 ;; Hardware stack levels used: 1
  8988 ;; Hardware stack levels required when called: 1
  8989 ;; This function calls:
  8990 ;;		_I2C_MasterSendNack
  8991 ;; This function is called by:
  8992 ;;		_I2C_DO_RX
  8993 ;;		_I2C_MasterFsm
  8994 ;; This function uses a non-reentrant model
  8995 ;;
  8996                           
  8997                           	psect	text73
  8998   0033F8                     __ptext73:
  8999                           	callstack 0
  9000   0033F8                     _I2C_DO_RX_NACK_STOP:
  9001                           	callstack 19
  9002   0033F8                     
  9003                           ;mcc_generated_files/i2c_master.c: 485:     I2C_MasterSendNack();
  9004   0033F8  EC1E  F01A         	call	_I2C_MasterSendNack	;wreg free
  9005   0033FC                     
  9006                           ;mcc_generated_files/i2c_master.c: 486:     return I2C_SEND_STOP;
  9007   0033FC  0E0A               	movlw	10
  9008   0033FE  0012               	return		;funcret
  9009   003400                     __end_of_I2C_DO_RX_NACK_STOP:
  9010                           	callstack 0
  9011                           
  9012 ;; *************** function _I2C_DO_RX_ACK *****************
  9013 ;; Defined at:
  9014 ;;		line 476 in file "mcc_generated_files/i2c_master.c"
  9015 ;; Parameters:    Size  Location     Type
  9016 ;;		None
  9017 ;; Auto vars:     Size  Location     Type
  9018 ;;		None
  9019 ;; Return value:  Size  Location     Type
  9020 ;;                  1    wreg      enum E3134
  9021 ;; Registers used:
  9022 ;;		wreg, cstack
  9023 ;; Tracked objects:
  9024 ;;		On entry : 0/0
  9025 ;;		On exit  : 0/0
  9026 ;;		Unchanged: 0/0
  9027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9032 ;;Total ram usage:        0 bytes
  9033 ;; Hardware stack levels used: 1
  9034 ;; Hardware stack levels required when called: 1
  9035 ;; This function calls:
  9036 ;;		_I2C_MasterSendAck
  9037 ;; This function is called by:
  9038 ;;		_I2C_MasterFsm
  9039 ;; This function uses a non-reentrant model
  9040 ;;
  9041                           
  9042                           	psect	text74
  9043   003400                     __ptext74:
  9044                           	callstack 0
  9045   003400                     _I2C_DO_RX_ACK:
  9046                           	callstack 19
  9047   003400                     
  9048                           ;mcc_generated_files/i2c_master.c: 478:     I2C_MasterSendAck();
  9049   003400  EC1B  F01A         	call	_I2C_MasterSendAck	;wreg free
  9050   003404                     
  9051                           ;mcc_generated_files/i2c_master.c: 479:     return I2C_RCEN;
  9052   003404  0E05               	movlw	5
  9053   003406  0012               	return		;funcret
  9054   003408                     __end_of_I2C_DO_RX_ACK:
  9055                           	callstack 0
  9056                           
  9057 ;; *************** function _I2C_DO_SEND_STOP *****************
  9058 ;; Defined at:
  9059 ;;		line 470 in file "mcc_generated_files/i2c_master.c"
  9060 ;; Parameters:    Size  Location     Type
  9061 ;;		None
  9062 ;; Auto vars:     Size  Location     Type
  9063 ;;		None
  9064 ;; Return value:  Size  Location     Type
  9065 ;;                  1    wreg      enum E3134
  9066 ;; Registers used:
  9067 ;;		wreg, cstack
  9068 ;; Tracked objects:
  9069 ;;		On entry : 0/0
  9070 ;;		On exit  : 0/0
  9071 ;;		Unchanged: 0/0
  9072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9077 ;;Total ram usage:        0 bytes
  9078 ;; Hardware stack levels used: 1
  9079 ;; Hardware stack levels required when called: 1
  9080 ;; This function calls:
  9081 ;;		_I2C_MasterStop
  9082 ;; This function is called by:
  9083 ;;		_I2C_DO_TX
  9084 ;;		_I2C_DO_TX_EMPTY
  9085 ;;		_I2C_DO_ADDRESS_NACK
  9086 ;;		_I2C_MasterFsm
  9087 ;; This function uses a non-reentrant model
  9088 ;;
  9089                           
  9090                           	psect	text75
  9091   003408                     __ptext75:
  9092                           	callstack 0
  9093   003408                     _I2C_DO_SEND_STOP:
  9094                           	callstack 18
  9095   003408                     
  9096                           ;mcc_generated_files/i2c_master.c: 472:     I2C_MasterStop();
  9097   003408  EC3F  F01A         	call	_I2C_MasterStop	;wreg free
  9098   00340C                     
  9099                           ;mcc_generated_files/i2c_master.c: 473:     return I2C_IDLE;
  9100   00340C  0E00               	movlw	0
  9101   00340E  0012               	return		;funcret
  9102   003410                     __end_of_I2C_DO_SEND_STOP:
  9103                           	callstack 0
  9104                           
  9105 ;; *************** function _I2C_DO_SEND_RESTART *****************
  9106 ;; Defined at:
  9107 ;;		line 464 in file "mcc_generated_files/i2c_master.c"
  9108 ;; Parameters:    Size  Location     Type
  9109 ;;		None
  9110 ;; Auto vars:     Size  Location     Type
  9111 ;;		None
  9112 ;; Return value:  Size  Location     Type
  9113 ;;                  1    wreg      enum E3134
  9114 ;; Registers used:
  9115 ;;		wreg, cstack
  9116 ;; Tracked objects:
  9117 ;;		On entry : 0/0
  9118 ;;		On exit  : 0/0
  9119 ;;		Unchanged: 0/0
  9120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9125 ;;Total ram usage:        0 bytes
  9126 ;; Hardware stack levels used: 1
  9127 ;; Hardware stack levels required when called: 1
  9128 ;; This function calls:
  9129 ;;		_I2C_MasterEnableRestart
  9130 ;; This function is called by:
  9131 ;;		_I2C_DO_TX_EMPTY
  9132 ;;		_I2C_DO_ADDRESS_NACK
  9133 ;;		_I2C_MasterFsm
  9134 ;; This function uses a non-reentrant model
  9135 ;;
  9136                           
  9137                           	psect	text76
  9138   003410                     __ptext76:
  9139                           	callstack 0
  9140   003410                     _I2C_DO_SEND_RESTART:
  9141                           	callstack 18
  9142   003410                     
  9143                           ;mcc_generated_files/i2c_master.c: 466:     I2C_MasterEnableRestart();
  9144   003410  EC41  F01A         	call	_I2C_MasterEnableRestart	;wreg free
  9145   003414                     
  9146                           ;mcc_generated_files/i2c_master.c: 467:     return I2C_SEND_ADR_READ;
  9147   003414  0E01               	movlw	1
  9148   003416  0012               	return		;funcret
  9149   003418                     __end_of_I2C_DO_SEND_RESTART:
  9150                           	callstack 0
  9151                           
  9152 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
  9153 ;; Defined at:
  9154 ;;		line 457 in file "mcc_generated_files/i2c_master.c"
  9155 ;; Parameters:    Size  Location     Type
  9156 ;;		None
  9157 ;; Auto vars:     Size  Location     Type
  9158 ;;		None
  9159 ;; Return value:  Size  Location     Type
  9160 ;;                  1    wreg      enum E3134
  9161 ;; Registers used:
  9162 ;;		wreg, cstack
  9163 ;; Tracked objects:
  9164 ;;		On entry : 0/0
  9165 ;;		On exit  : 0/0
  9166 ;;		Unchanged: 0/0
  9167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9172 ;;Total ram usage:        0 bytes
  9173 ;; Hardware stack levels used: 1
  9174 ;; Hardware stack levels required when called: 1
  9175 ;; This function calls:
  9176 ;;		_I2C_MasterEnableRestart
  9177 ;; This function is called by:
  9178 ;;		_I2C_DO_TX
  9179 ;;		_I2C_MasterFsm
  9180 ;; This function uses a non-reentrant model
  9181 ;;
  9182                           
  9183                           	psect	text77
  9184   003418                     __ptext77:
  9185                           	callstack 0
  9186   003418                     _I2C_DO_SEND_RESTART_WRITE:
  9187                           	callstack 18
  9188   003418                     
  9189                           ;mcc_generated_files/i2c_master.c: 459:     I2C_MasterEnableRestart();
  9190   003418  EC41  F01A         	call	_I2C_MasterEnableRestart	;wreg free
  9191   00341C                     
  9192                           ;mcc_generated_files/i2c_master.c: 460:     return I2C_SEND_ADR_WRITE;
  9193   00341C  0E02               	movlw	2
  9194   00341E  0012               	return		;funcret
  9195   003420                     __end_of_I2C_DO_SEND_RESTART_WRITE:
  9196                           	callstack 0
  9197                           
  9198 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
  9199 ;; Defined at:
  9200 ;;		line 451 in file "mcc_generated_files/i2c_master.c"
  9201 ;; Parameters:    Size  Location     Type
  9202 ;;		None
  9203 ;; Auto vars:     Size  Location     Type
  9204 ;;		None
  9205 ;; Return value:  Size  Location     Type
  9206 ;;                  1    wreg      enum E3134
  9207 ;; Registers used:
  9208 ;;		wreg, cstack
  9209 ;; Tracked objects:
  9210 ;;		On entry : 0/0
  9211 ;;		On exit  : 0/0
  9212 ;;		Unchanged: 0/0
  9213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9218 ;;Total ram usage:        0 bytes
  9219 ;; Hardware stack levels used: 1
  9220 ;; Hardware stack levels required when called: 1
  9221 ;; This function calls:
  9222 ;;		_I2C_MasterEnableRestart
  9223 ;; This function is called by:
  9224 ;;		_I2C_DO_TX
  9225 ;;		_I2C_MasterFsm
  9226 ;; This function uses a non-reentrant model
  9227 ;;
  9228                           
  9229                           	psect	text78
  9230   003420                     __ptext78:
  9231                           	callstack 0
  9232   003420                     _I2C_DO_SEND_RESTART_READ:
  9233                           	callstack 18
  9234   003420                     
  9235                           ;mcc_generated_files/i2c_master.c: 453:     I2C_MasterEnableRestart();
  9236   003420  EC41  F01A         	call	_I2C_MasterEnableRestart	;wreg free
  9237   003424                     
  9238                           ;mcc_generated_files/i2c_master.c: 454:     return I2C_SEND_ADR_READ;
  9239   003424  0E01               	movlw	1
  9240   003426  0012               	return		;funcret
  9241   003428                     __end_of_I2C_DO_SEND_RESTART_READ:
  9242                           	callstack 0
  9243                           
  9244 ;; *************** function _I2C_DO_RCEN *****************
  9245 ;; Defined at:
  9246 ;;		line 404 in file "mcc_generated_files/i2c_master.c"
  9247 ;; Parameters:    Size  Location     Type
  9248 ;;		None
  9249 ;; Auto vars:     Size  Location     Type
  9250 ;;		None
  9251 ;; Return value:  Size  Location     Type
  9252 ;;                  1    wreg      enum E3134
  9253 ;; Registers used:
  9254 ;;		wreg, cstack
  9255 ;; Tracked objects:
  9256 ;;		On entry : 0/0
  9257 ;;		On exit  : 0/0
  9258 ;;		Unchanged: 0/0
  9259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9264 ;;Total ram usage:        0 bytes
  9265 ;; Hardware stack levels used: 1
  9266 ;; Hardware stack levels required when called: 1
  9267 ;; This function calls:
  9268 ;;		_I2C_MasterStartRx
  9269 ;; This function is called by:
  9270 ;;		_I2C_MasterFsm
  9271 ;; This function uses a non-reentrant model
  9272 ;;
  9273                           
  9274                           	psect	text79
  9275   003380                     __ptext79:
  9276                           	callstack 0
  9277   003380                     _I2C_DO_RCEN:
  9278                           	callstack 19
  9279   003380                     
  9280                           ;mcc_generated_files/i2c_master.c: 406:     I2C_Status.addressNackCheck = 0;
  9281   003380  0100               	movlb	0	; () banked
  9282   003382  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  9283   003384                     
  9284                           ; BSR set to: 0
  9285                           ;mcc_generated_files/i2c_master.c: 407:     I2C_MasterStartRx();
  9286   003384  EC39  F01A         	call	_I2C_MasterStartRx	;wreg free
  9287   003388                     
  9288                           ;mcc_generated_files/i2c_master.c: 408:     return I2C_RX;
  9289   003388  0E04               	movlw	4
  9290   00338A  0012               	return		;funcret
  9291   00338C                     __end_of_I2C_DO_RCEN:
  9292                           	callstack 0
  9293                           
  9294 ;; *************** function _I2C_DO_RX *****************
  9295 ;; Defined at:
  9296 ;;		line 380 in file "mcc_generated_files/i2c_master.c"
  9297 ;; Parameters:    Size  Location     Type
  9298 ;;		None
  9299 ;; Auto vars:     Size  Location     Type
  9300 ;;		None
  9301 ;; Return value:  Size  Location     Type
  9302 ;;                  1    wreg      enum E3134
  9303 ;; Registers used:
  9304 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  9305 ;; Tracked objects:
  9306 ;;		On entry : 0/0
  9307 ;;		On exit  : 0/0
  9308 ;;		Unchanged: 0/0
  9309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9312 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9313 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9314 ;;Total ram usage:        2 bytes
  9315 ;; Hardware stack levels used: 1
  9316 ;; Hardware stack levels required when called: 3
  9317 ;; This function calls:
  9318 ;;		NULL
  9319 ;;		_I2C_CallbackReturnReset
  9320 ;;		_I2C_CallbackReturnStop
  9321 ;;		_I2C_DO_RX_NACK_RESTART
  9322 ;;		_I2C_DO_RX_NACK_STOP
  9323 ;;		_I2C_MasterGetRxData
  9324 ;;		_I2C_MasterSendAck
  9325 ;;		_rd1RegCompleteHandler
  9326 ;;		_rd2RegCompleteHandler
  9327 ;;		_rdBlkRegCompleteHandler
  9328 ;;		_wr1RegCompleteHandler
  9329 ;;		_wr2RegCompleteHandler
  9330 ;; This function is called by:
  9331 ;;		_I2C_MasterFsm
  9332 ;; This function uses a non-reentrant model
  9333 ;;
  9334                           
  9335                           	psect	text80
  9336   0023E8                     __ptext80:
  9337                           	callstack 0
  9338   0023E8                     _I2C_DO_RX:
  9339                           	callstack 17
  9340   0023E8                     
  9341                           ;mcc_generated_files/i2c_master.c: 382:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
  9342   0023E8  EC37  F01A         	call	_I2C_MasterGetRxData	;wreg free
  9343   0023EC  C07D  FFD9         	movff	_I2C_Status+29,fsr2l
  9344   0023F0  C07E  FFDA         	movff	_I2C_Status+30,fsr2h
  9345   0023F4  6EDF               	movwf	indf2,c
  9346   0023F6  0100               	movlb	0	; () banked
  9347   0023F8  4B7D               	infsnz	(_I2C_Status+29)& (0+255),f,b
  9348   0023FA  2B7E               	incf	(_I2C_Status+30)& (0+255),f,b
  9349   0023FC                     
  9350                           ; BSR set to: 0
  9351                           ;mcc_generated_files/i2c_master.c: 383:     if(--I2C_Status.data_length)
  9352   0023FC  077F               	decf	(_I2C_Status+31)& (0+255),f,b
  9353   0023FE  A0D8               	btfss	status,0,c
  9354   002400  0780               	decf	(_I2C_Status+32)& (0+255),f,b
  9355   002402  517F               	movf	(_I2C_Status+31)& (0+255),w,b
  9356   002404  1180               	iorwf	(_I2C_Status+32)& (0+255),w,b
  9357   002406  B4D8               	btfsc	status,2,c
  9358   002408  EF08  F012         	goto	i2u233_41
  9359   00240C  EF0A  F012         	goto	i2u233_40
  9360   002410                     i2u233_41:
  9361   002410  EF0F  F012         	goto	i2l525
  9362   002414                     i2u233_40:
  9363   002414                     
  9364                           ; BSR set to: 0
  9365                           ;mcc_generated_files/i2c_master.c: 384:     {;mcc_generated_files/i2c_master.c: 385:    
      +                               I2C_MasterSendAck();
  9366   002414  EC1B  F01A         	call	_I2C_MasterSendAck	;wreg free
  9367   002418                     
  9368                           ;mcc_generated_files/i2c_master.c: 386:         return I2C_RCEN;
  9369   002418  0E05               	movlw	5
  9370   00241A  EF46  F012         	goto	i2l526
  9371   00241E                     i2l525:
  9372                           
  9373                           ; BSR set to: 0
  9374                           ;mcc_generated_files/i2c_master.c: 389:     {;mcc_generated_files/i2c_master.c: 390:    
      +                               I2C_Status.bufferFree = 1;
  9375   00241E  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
  9376                           
  9377                           ;mcc_generated_files/i2c_master.c: 391:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  9378   002420  EF1A  F012         	goto	i2l3994
  9379   002424                     i2l3984:
  9380                           
  9381                           ;mcc_generated_files/i2c_master.c: 395:                 return I2C_DO_RX_NACK_RESTART();
  9382   002424  ECF8  F019         	call	_I2C_DO_RX_NACK_RESTART	;wreg free
  9383   002428  EF46  F012         	goto	i2l526
  9384   00242C                     i2l3988:
  9385                           
  9386                           ;mcc_generated_files/i2c_master.c: 399:                 return I2C_DO_RX_NACK_STOP();
  9387   00242C  ECFC  F019         	call	_I2C_DO_RX_NACK_STOP	;wreg free
  9388   002430  EF46  F012         	goto	i2l526
  9389   002434                     i2l3994:
  9390                           
  9391                           ; BSR set to: 0
  9392   002434  C06C  F00A         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
  9393   002438  C06D  F00B         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
  9394   00243C  D802               	call	i2u234_48
  9395   00243E  EF2A  F012         	goto	i2u234_49
  9396   002442                     i2u234_48:
  9397   002442  0005               	push	
  9398   002444  6EFA               	movwf	pclath,c
  9399   002446  5160               	movf	_I2C_Status& (0+255),w,b
  9400   002448  6EFD               	movwf	tosl,c
  9401   00244A  5161               	movf	(_I2C_Status+1)& (0+255),w,b
  9402   00244C  6EFE               	movwf	tosh,c
  9403   00244E  6AFF               	clrf	tosu,c
  9404   002450  50FA               	movf	pclath,w,c
  9405   002452  0012               	return		;indir
  9406   002454                     i2u234_49:
  9407   002454  6E0D               	movwf	??_I2C_DO_RX^0,c
  9408   002456  6A0E               	clrf	(??_I2C_DO_RX+1)^0,c
  9409                           
  9410                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9411                           ; Switch size 1, requested type "simple"
  9412                           ; Number of cases is 1, Range of values is 0 to 0
  9413                           ; switch strategies available:
  9414                           ; Name         Instructions Cycles
  9415                           ; simple_byte            4     3 (average)
  9416                           ;	Chosen strategy is simple_byte
  9417   002458  500E               	movf	(??_I2C_DO_RX+1)^0,w,c
  9418   00245A  0A00               	xorlw	0	; case 0
  9419   00245C  B4D8               	btfsc	status,2,c
  9420   00245E  EF33  F012         	goto	i2l6854
  9421   002462  EF16  F012         	goto	i2l3988
  9422   002466                     i2l6854:
  9423                           
  9424                           ; Switch size 1, requested type "simple"
  9425                           ; Number of cases is 4, Range of values is 1 to 4
  9426                           ; switch strategies available:
  9427                           ; Name         Instructions Cycles
  9428                           ; simple_byte           13     7 (average)
  9429                           ;	Chosen strategy is simple_byte
  9430   002466  500D               	movf	??_I2C_DO_RX^0,w,c
  9431   002468  0A01               	xorlw	1	; case 1
  9432   00246A  B4D8               	btfsc	status,2,c
  9433   00246C  EF16  F012         	goto	i2l3988
  9434   002470  0A03               	xorlw	3	; case 2
  9435   002472  B4D8               	btfsc	status,2,c
  9436   002474  EF12  F012         	goto	i2l3984
  9437   002478  0A01               	xorlw	1	; case 3
  9438   00247A  B4D8               	btfsc	status,2,c
  9439   00247C  EF12  F012         	goto	i2l3984
  9440   002480  0A07               	xorlw	7	; case 4
  9441   002482  B4D8               	btfsc	status,2,c
  9442   002484  EF16  F012         	goto	i2l3988
  9443   002488  EF16  F012         	goto	i2l3988
  9444   00248C                     i2l526:
  9445   00248C  0012               	return		;funcret
  9446   00248E                     __end_of_I2C_DO_RX:
  9447                           	callstack 0
  9448                           
  9449 ;; *************** function _I2C_DO_TX *****************
  9450 ;; Defined at:
  9451 ;;		line 356 in file "mcc_generated_files/i2c_master.c"
  9452 ;; Parameters:    Size  Location     Type
  9453 ;;		None
  9454 ;; Auto vars:     Size  Location     Type
  9455 ;;		None
  9456 ;; Return value:  Size  Location     Type
  9457 ;;                  1    wreg      enum E3134
  9458 ;; Registers used:
  9459 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  9460 ;; Tracked objects:
  9461 ;;		On entry : 0/0
  9462 ;;		On exit  : 0/0
  9463 ;;		Unchanged: 0/0
  9464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9467 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9468 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9469 ;;Total ram usage:        2 bytes
  9470 ;; Hardware stack levels used: 1
  9471 ;; Hardware stack levels required when called: 3
  9472 ;; This function calls:
  9473 ;;		NULL
  9474 ;;		_I2C_CallbackReturnReset
  9475 ;;		_I2C_CallbackReturnStop
  9476 ;;		_I2C_DO_SEND_RESTART_READ
  9477 ;;		_I2C_DO_SEND_RESTART_WRITE
  9478 ;;		_I2C_DO_SEND_STOP
  9479 ;;		_I2C_MasterIsNack
  9480 ;;		_I2C_MasterSendTxData
  9481 ;;		_rd1RegCompleteHandler
  9482 ;;		_rd2RegCompleteHandler
  9483 ;;		_rdBlkRegCompleteHandler
  9484 ;;		_wr1RegCompleteHandler
  9485 ;;		_wr2RegCompleteHandler
  9486 ;; This function is called by:
  9487 ;;		_I2C_MasterFsm
  9488 ;; This function uses a non-reentrant model
  9489 ;;
  9490                           
  9491                           	psect	text81
  9492   002068                     __ptext81:
  9493                           	callstack 0
  9494   002068                     _I2C_DO_TX:
  9495                           	callstack 17
  9496   002068                     
  9497                           ;mcc_generated_files/i2c_master.c: 358:     if(I2C_MasterIsNack())
  9498   002068  ECA0  F019         	call	_I2C_MasterIsNack	;wreg free
  9499   00206C  0900               	iorlw	0
  9500   00206E  B4D8               	btfsc	status,2,c
  9501   002070  EF3C  F010         	goto	i2u230_41
  9502   002074  EF3E  F010         	goto	i2u230_40
  9503   002078                     i2u230_41:
  9504   002078  EF79  F010         	goto	i2l509
  9505   00207C                     i2u230_40:
  9506   00207C  EF4C  F010         	goto	i2l3954
  9507   002080                     i2l3940:
  9508                           
  9509                           ;mcc_generated_files/i2c_master.c: 363:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
  9510   002080  EC10  F01A         	call	_I2C_DO_SEND_RESTART_READ	;wreg free
  9511   002084  EF95  F010         	goto	i2l512
  9512   002088                     i2l3944:
  9513                           
  9514                           ;mcc_generated_files/i2c_master.c: 365:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
  9515   002088  EC0C  F01A         	call	_I2C_DO_SEND_RESTART_WRITE	;wreg free
  9516   00208C  EF95  F010         	goto	i2l512
  9517   002090                     i2l3948:
  9518                           
  9519                           ;mcc_generated_files/i2c_master.c: 369:                 return I2C_DO_SEND_STOP();
  9520   002090  EC04  F01A         	call	_I2C_DO_SEND_STOP	;wreg free
  9521   002094  EF95  F010         	goto	i2l512
  9522   002098                     i2l3954:
  9523   002098  C072  F00A         	movff	_I2C_Status+18,I2C_CallbackReturnReset@funPtr
  9524   00209C  C073  F00B         	movff	_I2C_Status+19,I2C_CallbackReturnReset@funPtr+1
  9525   0020A0  D802               	call	i2u231_48
  9526   0020A2  EF5D  F010         	goto	i2u231_49
  9527   0020A6                     i2u231_48:
  9528   0020A6  0005               	push	
  9529   0020A8  6EFA               	movwf	pclath,c
  9530   0020AA  0100               	movlb	0	; () banked
  9531   0020AC  5166               	movf	(_I2C_Status+6)& (0+255),w,b
  9532   0020AE  6EFD               	movwf	tosl,c
  9533   0020B0  5167               	movf	(_I2C_Status+7)& (0+255),w,b
  9534   0020B2  6EFE               	movwf	tosh,c
  9535   0020B4  6AFF               	clrf	tosu,c
  9536   0020B6  50FA               	movf	pclath,w,c
  9537   0020B8  0012               	return		;indir
  9538   0020BA                     i2u231_49:
  9539   0020BA  6E0D               	movwf	??_I2C_DO_TX^0,c
  9540   0020BC  6A0E               	clrf	(??_I2C_DO_TX+1)^0,c
  9541                           
  9542                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9543                           ; Switch size 1, requested type "simple"
  9544                           ; Number of cases is 1, Range of values is 0 to 0
  9545                           ; switch strategies available:
  9546                           ; Name         Instructions Cycles
  9547                           ; simple_byte            4     3 (average)
  9548                           ;	Chosen strategy is simple_byte
  9549   0020BE  500E               	movf	(??_I2C_DO_TX+1)^0,w,c
  9550   0020C0  0A00               	xorlw	0	; case 0
  9551   0020C2  B4D8               	btfsc	status,2,c
  9552   0020C4  EF66  F010         	goto	i2l6856
  9553   0020C8  EF48  F010         	goto	i2l3948
  9554   0020CC                     i2l6856:
  9555                           
  9556                           ; Switch size 1, requested type "simple"
  9557                           ; Number of cases is 4, Range of values is 1 to 4
  9558                           ; switch strategies available:
  9559                           ; Name         Instructions Cycles
  9560                           ; simple_byte           13     7 (average)
  9561                           ;	Chosen strategy is simple_byte
  9562   0020CC  500D               	movf	??_I2C_DO_TX^0,w,c
  9563   0020CE  0A01               	xorlw	1	; case 1
  9564   0020D0  B4D8               	btfsc	status,2,c
  9565   0020D2  EF48  F010         	goto	i2l3948
  9566   0020D6  0A03               	xorlw	3	; case 2
  9567   0020D8  B4D8               	btfsc	status,2,c
  9568   0020DA  EF40  F010         	goto	i2l3940
  9569   0020DE  0A01               	xorlw	1	; case 3
  9570   0020E0  B4D8               	btfsc	status,2,c
  9571   0020E2  EF44  F010         	goto	i2l3944
  9572   0020E6  0A07               	xorlw	7	; case 4
  9573   0020E8  B4D8               	btfsc	status,2,c
  9574   0020EA  EF48  F010         	goto	i2l3948
  9575   0020EE  EF48  F010         	goto	i2l3948
  9576   0020F2                     i2l509:
  9577                           
  9578                           ;mcc_generated_files/i2c_master.c: 373:     {;mcc_generated_files/i2c_master.c: 374:    
      +                               I2C_Status.addressNackCheck = 0;
  9579   0020F2  0100               	movlb	0	; () banked
  9580   0020F4  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  9581   0020F6                     
  9582                           ; BSR set to: 0
  9583                           ;mcc_generated_files/i2c_master.c: 375:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
  9584   0020F6  C07D  FFD9         	movff	_I2C_Status+29,fsr2l
  9585   0020FA  C07E  FFDA         	movff	_I2C_Status+30,fsr2h
  9586   0020FE  4B7D               	infsnz	(_I2C_Status+29)& (0+255),f,b
  9587   002100  2B7E               	incf	(_I2C_Status+30)& (0+255),f,b
  9588   002102  50DF               	movf	indf2,w,c
  9589   002104  EC14  F01A         	call	_I2C_MasterSendTxData
  9590   002108                     
  9591                           ;mcc_generated_files/i2c_master.c: 376:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
  9592   002108  0100               	movlb	0	; () banked
  9593   00210A  077F               	decf	(_I2C_Status+31)& (0+255),f,b
  9594   00210C  A0D8               	btfss	status,0,c
  9595   00210E  0780               	decf	(_I2C_Status+32)& (0+255),f,b
  9596   002110  517F               	movf	(_I2C_Status+31)& (0+255),w,b
  9597   002112  1180               	iorwf	(_I2C_Status+32)& (0+255),w,b
  9598   002114  A4D8               	btfss	status,2,c
  9599   002116  EF8F  F010         	goto	i2u232_41
  9600   00211A  EF91  F010         	goto	i2u232_40
  9601   00211E                     i2u232_41:
  9602   00211E  EF94  F010         	goto	i2l3962
  9603   002122                     i2u232_40:
  9604   002122                     
  9605                           ; BSR set to: 0
  9606   002122  0E06               	movlw	6
  9607   002124  EF95  F010         	goto	i2l512
  9608   002128                     i2l3962:
  9609                           
  9610                           ; BSR set to: 0
  9611   002128  0E03               	movlw	3
  9612   00212A                     i2l512:
  9613   00212A  0012               	return		;funcret
  9614   00212C                     __end_of_I2C_DO_TX:
  9615                           	callstack 0
  9616                           
  9617 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
  9618 ;; Defined at:
  9619 ;;		line 349 in file "mcc_generated_files/i2c_master.c"
  9620 ;; Parameters:    Size  Location     Type
  9621 ;;		None
  9622 ;; Auto vars:     Size  Location     Type
  9623 ;;		None
  9624 ;; Return value:  Size  Location     Type
  9625 ;;                  1    wreg      enum E3134
  9626 ;; Registers used:
  9627 ;;		wreg, status,2, status,0, cstack
  9628 ;; Tracked objects:
  9629 ;;		On entry : 0/0
  9630 ;;		On exit  : 0/0
  9631 ;;		Unchanged: 0/0
  9632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9637 ;;Total ram usage:        0 bytes
  9638 ;; Hardware stack levels used: 1
  9639 ;; Hardware stack levels required when called: 1
  9640 ;; This function calls:
  9641 ;;		_I2C_MasterSendTxData
  9642 ;; This function is called by:
  9643 ;;		_I2C_MasterFsm
  9644 ;; This function uses a non-reentrant model
  9645 ;;
  9646                           
  9647                           	psect	text82
  9648   003354                     __ptext82:
  9649                           	callstack 0
  9650   003354                     _I2C_DO_SEND_ADR_WRITE:
  9651                           	callstack 19
  9652   003354                     
  9653                           ;mcc_generated_files/i2c_master.c: 351:     I2C_Status.addressNackCheck = 1;
  9654   003354  0100               	movlb	0	; () banked
  9655   003356  8183               	bsf	(_I2C_Status+35)& (0+255),0,b
  9656   003358                     
  9657                           ; BSR set to: 0
  9658                           ;mcc_generated_files/i2c_master.c: 352:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1));
  9659   003358  517C               	movf	(_I2C_Status+28)& (0+255),w,b
  9660   00335A  257C               	addwf	(_I2C_Status+28)& (0+255),w,b
  9661   00335C  EC14  F01A         	call	_I2C_MasterSendTxData
  9662   003360                     
  9663                           ;mcc_generated_files/i2c_master.c: 353:     return I2C_TX;
  9664   003360  0E03               	movlw	3
  9665   003362  0012               	return		;funcret
  9666   003364                     __end_of_I2C_DO_SEND_ADR_WRITE:
  9667                           	callstack 0
  9668                           
  9669 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
  9670 ;; Defined at:
  9671 ;;		line 342 in file "mcc_generated_files/i2c_master.c"
  9672 ;; Parameters:    Size  Location     Type
  9673 ;;		None
  9674 ;; Auto vars:     Size  Location     Type
  9675 ;;		None
  9676 ;; Return value:  Size  Location     Type
  9677 ;;                  1    wreg      enum E3134
  9678 ;; Registers used:
  9679 ;;		wreg, status,0, cstack
  9680 ;; Tracked objects:
  9681 ;;		On entry : 0/0
  9682 ;;		On exit  : 0/0
  9683 ;;		Unchanged: 0/0
  9684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9689 ;;Total ram usage:        0 bytes
  9690 ;; Hardware stack levels used: 1
  9691 ;; Hardware stack levels required when called: 1
  9692 ;; This function calls:
  9693 ;;		_I2C_MasterSendTxData
  9694 ;; This function is called by:
  9695 ;;		_I2C_MasterFsm
  9696 ;; This function uses a non-reentrant model
  9697 ;;
  9698                           
  9699                           	psect	text83
  9700   003364                     __ptext83:
  9701                           	callstack 0
  9702   003364                     _I2C_DO_SEND_ADR_READ:
  9703                           	callstack 19
  9704   003364                     
  9705                           ;mcc_generated_files/i2c_master.c: 344:     I2C_Status.addressNackCheck = 1;
  9706   003364  0100               	movlb	0	; () banked
  9707   003366  8183               	bsf	(_I2C_Status+35)& (0+255),0,b
  9708   003368                     
  9709                           ; BSR set to: 0
  9710                           ;mcc_generated_files/i2c_master.c: 345:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1 | 1));
  9711   003368  80D8               	bsf	status,0,c
  9712   00336A  357C               	rlcf	(_I2C_Status+28)& (0+255),w,b
  9713   00336C  EC14  F01A         	call	_I2C_MasterSendTxData
  9714   003370                     
  9715                           ;mcc_generated_files/i2c_master.c: 346:     return I2C_RCEN;
  9716   003370  0E05               	movlw	5
  9717   003372  0012               	return		;funcret
  9718   003374                     __end_of_I2C_DO_SEND_ADR_READ:
  9719                           	callstack 0
  9720                           
  9721 ;; *************** function _I2C_DO_IDLE *****************
  9722 ;; Defined at:
  9723 ;;		line 335 in file "mcc_generated_files/i2c_master.c"
  9724 ;; Parameters:    Size  Location     Type
  9725 ;;		None
  9726 ;; Auto vars:     Size  Location     Type
  9727 ;;		None
  9728 ;; Return value:  Size  Location     Type
  9729 ;;                  1    wreg      enum E3134
  9730 ;; Registers used:
  9731 ;;		wreg, status,2
  9732 ;; Tracked objects:
  9733 ;;		On entry : 0/0
  9734 ;;		On exit  : 0/0
  9735 ;;		Unchanged: 0/0
  9736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9741 ;;Total ram usage:        0 bytes
  9742 ;; Hardware stack levels used: 1
  9743 ;; This function calls:
  9744 ;;		Nothing
  9745 ;; This function is called by:
  9746 ;;		_I2C_MasterFsm
  9747 ;; This function uses a non-reentrant model
  9748 ;;
  9749                           
  9750                           	psect	text84
  9751   00338C                     __ptext84:
  9752                           	callstack 0
  9753   00338C                     _I2C_DO_IDLE:
  9754                           	callstack 20
  9755   00338C                     
  9756                           ;mcc_generated_files/i2c_master.c: 337:     I2C_Status.busy = 0;
  9757   00338C  0100               	movlb	0	; () banked
  9758   00338E  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
  9759   003390                     
  9760                           ; BSR set to: 0
  9761                           ;mcc_generated_files/i2c_master.c: 338:     I2C_Status.error = I2C_NOERR;
  9762   003390  0E00               	movlw	0
  9763   003392  6F82               	movwf	(_I2C_Status+34)& (0+255),b
  9764   003394                     
  9765                           ; BSR set to: 0
  9766                           ;mcc_generated_files/i2c_master.c: 339:     return I2C_RESET;
  9767   003394  0E0E               	movlw	14
  9768   003396                     
  9769                           ; BSR set to: 0
  9770   003396  0012               	return		;funcret
  9771   003398                     __end_of_I2C_DO_IDLE:
  9772                           	callstack 0
  9773                           
  9774 ;; *************** function _I2C_DO_TX_EMPTY *****************
  9775 ;; Defined at:
  9776 ;;		line 411 in file "mcc_generated_files/i2c_master.c"
  9777 ;; Parameters:    Size  Location     Type
  9778 ;;		None
  9779 ;; Auto vars:     Size  Location     Type
  9780 ;;		None
  9781 ;; Return value:  Size  Location     Type
  9782 ;;                  1    wreg      enum E3134
  9783 ;; Registers used:
  9784 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  9785 ;; Tracked objects:
  9786 ;;		On entry : 0/0
  9787 ;;		On exit  : 0/0
  9788 ;;		Unchanged: 0/0
  9789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9792 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9793 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9794 ;;Total ram usage:        2 bytes
  9795 ;; Hardware stack levels used: 1
  9796 ;; Hardware stack levels required when called: 3
  9797 ;; This function calls:
  9798 ;;		NULL
  9799 ;;		_I2C_CallbackReturnReset
  9800 ;;		_I2C_CallbackReturnStop
  9801 ;;		_I2C_DO_SEND_RESTART
  9802 ;;		_I2C_DO_SEND_STOP
  9803 ;;		_I2C_MasterSetIrq
  9804 ;;		_rd1RegCompleteHandler
  9805 ;;		_rd2RegCompleteHandler
  9806 ;;		_rdBlkRegCompleteHandler
  9807 ;;		_wr1RegCompleteHandler
  9808 ;;		_wr2RegCompleteHandler
  9809 ;; This function is called by:
  9810 ;;		_I2C_MasterFsm
  9811 ;; This function uses a non-reentrant model
  9812 ;;
  9813                           
  9814                           	psect	text85
  9815   00280C                     __ptext85:
  9816                           	callstack 0
  9817   00280C                     _I2C_DO_TX_EMPTY:
  9818                           	callstack 17
  9819   00280C                     
  9820                           ;mcc_generated_files/i2c_master.c: 413:     I2C_Status.bufferFree = 1;
  9821   00280C  0100               	movlb	0	; () banked
  9822   00280E  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
  9823                           
  9824                           ;mcc_generated_files/i2c_master.c: 414:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  9825   002810  EF17  F014         	goto	i2l4026
  9826   002814                     i2l4010:
  9827                           
  9828                           ;mcc_generated_files/i2c_master.c: 418:             return I2C_DO_SEND_RESTART();
  9829   002814  EC08  F01A         	call	_I2C_DO_SEND_RESTART	;wreg free
  9830   002818  EF43  F014         	goto	i2l543
  9831   00281C                     i2l4014:
  9832                           
  9833                           ;mcc_generated_files/i2c_master.c: 420:             I2C_MasterSetIrq();
  9834   00281C  EC35  F01A         	call	_I2C_MasterSetIrq	;wreg free
  9835   002820                     
  9836                           ;mcc_generated_files/i2c_master.c: 421:             return I2C_TX;
  9837   002820  0E03               	movlw	3
  9838   002822  EF43  F014         	goto	i2l543
  9839   002826                     i2l4020:
  9840                           
  9841                           ;mcc_generated_files/i2c_master.c: 424:             return I2C_DO_SEND_STOP();
  9842   002826  EC04  F01A         	call	_I2C_DO_SEND_STOP	;wreg free
  9843   00282A  EF43  F014         	goto	i2l543
  9844   00282E                     i2l4026:
  9845                           
  9846                           ; BSR set to: 0
  9847   00282E  C06C  F00A         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
  9848   002832  C06D  F00B         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
  9849   002836  D802               	call	i2u235_48
  9850   002838  EF27  F014         	goto	i2u235_49
  9851   00283C                     i2u235_48:
  9852   00283C  0005               	push	
  9853   00283E  6EFA               	movwf	pclath,c
  9854   002840  5160               	movf	_I2C_Status& (0+255),w,b
  9855   002842  6EFD               	movwf	tosl,c
  9856   002844  5161               	movf	(_I2C_Status+1)& (0+255),w,b
  9857   002846  6EFE               	movwf	tosh,c
  9858   002848  6AFF               	clrf	tosu,c
  9859   00284A  50FA               	movf	pclath,w,c
  9860   00284C  0012               	return		;indir
  9861   00284E                     i2u235_49:
  9862   00284E  6E0D               	movwf	??_I2C_DO_TX_EMPTY^0,c
  9863   002850  6A0E               	clrf	(??_I2C_DO_TX_EMPTY+1)^0,c
  9864                           
  9865                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9866                           ; Switch size 1, requested type "simple"
  9867                           ; Number of cases is 1, Range of values is 0 to 0
  9868                           ; switch strategies available:
  9869                           ; Name         Instructions Cycles
  9870                           ; simple_byte            4     3 (average)
  9871                           ;	Chosen strategy is simple_byte
  9872   002852  500E               	movf	(??_I2C_DO_TX_EMPTY+1)^0,w,c
  9873   002854  0A00               	xorlw	0	; case 0
  9874   002856  B4D8               	btfsc	status,2,c
  9875   002858  EF30  F014         	goto	i2l6858
  9876   00285C  EF13  F014         	goto	i2l4020
  9877   002860                     i2l6858:
  9878                           
  9879                           ; Switch size 1, requested type "simple"
  9880                           ; Number of cases is 4, Range of values is 1 to 4
  9881                           ; switch strategies available:
  9882                           ; Name         Instructions Cycles
  9883                           ; simple_byte           13     7 (average)
  9884                           ;	Chosen strategy is simple_byte
  9885   002860  500D               	movf	??_I2C_DO_TX_EMPTY^0,w,c
  9886   002862  0A01               	xorlw	1	; case 1
  9887   002864  B4D8               	btfsc	status,2,c
  9888   002866  EF13  F014         	goto	i2l4020
  9889   00286A  0A03               	xorlw	3	; case 2
  9890   00286C  B4D8               	btfsc	status,2,c
  9891   00286E  EF0A  F014         	goto	i2l4010
  9892   002872  0A01               	xorlw	1	; case 3
  9893   002874  B4D8               	btfsc	status,2,c
  9894   002876  EF0A  F014         	goto	i2l4010
  9895   00287A  0A07               	xorlw	7	; case 4
  9896   00287C  B4D8               	btfsc	status,2,c
  9897   00287E  EF0E  F014         	goto	i2l4014
  9898   002882  EF13  F014         	goto	i2l4020
  9899   002886                     i2l543:
  9900   002886  0012               	return		;funcret
  9901   002888                     __end_of_I2C_DO_TX_EMPTY:
  9902                           	callstack 0
  9903                           
  9904 ;; *************** function _I2C_MasterSetIrq *****************
  9905 ;; Defined at:
  9906 ;;		line 647 in file "mcc_generated_files/i2c_master.c"
  9907 ;; Parameters:    Size  Location     Type
  9908 ;;		None
  9909 ;; Auto vars:     Size  Location     Type
  9910 ;;		None
  9911 ;; Return value:  Size  Location     Type
  9912 ;;                  1    wreg      void 
  9913 ;; Registers used:
  9914 ;;		None
  9915 ;; Tracked objects:
  9916 ;;		On entry : 0/0
  9917 ;;		On exit  : 0/0
  9918 ;;		Unchanged: 0/0
  9919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9924 ;;Total ram usage:        0 bytes
  9925 ;; Hardware stack levels used: 1
  9926 ;; This function calls:
  9927 ;;		Nothing
  9928 ;; This function is called by:
  9929 ;;		_I2C_DO_TX_EMPTY
  9930 ;; This function uses a non-reentrant model
  9931 ;;
  9932                           
  9933                           	psect	text86
  9934   00346A                     __ptext86:
  9935                           	callstack 0
  9936   00346A                     _I2C_MasterSetIrq:
  9937                           	callstack 19
  9938   00346A                     
  9939                           ;mcc_generated_files/i2c_master.c: 649:     PIR1bits.SSPIF = 1;
  9940   00346A  869E               	bsf	158,3,c	;volatile
  9941   00346C  0012               	return		;funcret
  9942   00346E                     __end_of_I2C_MasterSetIrq:
  9943                           	callstack 0
  9944                           
  9945 ;; *************** function _I2C_MasterIsNack *****************
  9946 ;; Defined at:
  9947 ;;		line 599 in file "mcc_generated_files/i2c_master.c"
  9948 ;; Parameters:    Size  Location     Type
  9949 ;;		None
  9950 ;; Auto vars:     Size  Location     Type
  9951 ;;		None
  9952 ;; Return value:  Size  Location     Type
  9953 ;;                  1    wreg      _Bool 
  9954 ;; Registers used:
  9955 ;;		wreg
  9956 ;; Tracked objects:
  9957 ;;		On entry : 0/0
  9958 ;;		On exit  : 0/0
  9959 ;;		Unchanged: 0/0
  9960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9965 ;;Total ram usage:        0 bytes
  9966 ;; Hardware stack levels used: 1
  9967 ;; This function calls:
  9968 ;;		Nothing
  9969 ;; This function is called by:
  9970 ;;		_I2C_MasterFsm
  9971 ;;		_I2C_DO_TX
  9972 ;; This function uses a non-reentrant model
  9973 ;;
  9974                           
  9975                           	psect	text87
  9976   003340                     __ptext87:
  9977                           	callstack 0
  9978   003340                     _I2C_MasterIsNack:
  9979                           	callstack 20
  9980   003340                     
  9981                           ;mcc_generated_files/i2c_master.c: 601:     return SSPCON2bits.ACKSTAT;
  9982   003340  BCC5               	btfsc	197,6,c	;volatile
  9983   003342  EFA5  F019         	goto	i2u221_41
  9984   003346  EFA8  F019         	goto	i2u221_40
  9985   00334A                     i2u221_41:
  9986   00334A  0E01               	movlw	1
  9987   00334C  EFA9  F019         	goto	i2u221_46
  9988   003350                     i2u221_40:
  9989   003350  0E00               	movlw	0
  9990   003352                     i2u221_46:
  9991   003352  0012               	return		;funcret
  9992   003354                     __end_of_I2C_MasterIsNack:
  9993                           	callstack 0
  9994                           
  9995 ;; *************** function _I2C_MasterSendTxData *****************
  9996 ;; Defined at:
  9997 ;;		line 569 in file "mcc_generated_files/i2c_master.c"
  9998 ;; Parameters:    Size  Location     Type
  9999 ;;  data            1    wreg     unsigned char 
 10000 ;; Auto vars:     Size  Location     Type
 10001 ;;  data            1    0[COMRAM] unsigned char 
 10002 ;; Return value:  Size  Location     Type
 10003 ;;                  1    wreg      void 
 10004 ;; Registers used:
 10005 ;;		wreg
 10006 ;; Tracked objects:
 10007 ;;		On entry : 0/0
 10008 ;;		On exit  : 0/0
 10009 ;;		Unchanged: 0/0
 10010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10012 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10014 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10015 ;;Total ram usage:        1 bytes
 10016 ;; Hardware stack levels used: 1
 10017 ;; This function calls:
 10018 ;;		Nothing
 10019 ;; This function is called by:
 10020 ;;		_I2C_DO_SEND_ADR_READ
 10021 ;;		_I2C_DO_SEND_ADR_WRITE
 10022 ;;		_I2C_DO_TX
 10023 ;; This function uses a non-reentrant model
 10024 ;;
 10025                           
 10026                           	psect	text88
 10027   003428                     __ptext88:
 10028                           	callstack 0
 10029   003428                     _I2C_MasterSendTxData:
 10030                           	callstack 19
 10031                           
 10032                           ;incstack = 0
 10033                           ;I2C_MasterSendTxData@data stored from wreg
 10034   003428  6E01               	movwf	I2C_MasterSendTxData@data^0,c
 10035   00342A                     
 10036                           ;mcc_generated_files/i2c_master.c: 569: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 570: {;mcc_generated_files/i2c_
      +                          master.c: 571:     SSPBUF = data;
 10037   00342A  C001  FFC9         	movff	I2C_MasterSendTxData@data,4041	;volatile
 10038   00342E  0012               	return		;funcret
 10039   003430                     __end_of_I2C_MasterSendTxData:
 10040                           	callstack 0
 10041                           
 10042 ;; *************** function _I2C_MasterSendAck *****************
 10043 ;; Defined at:
 10044 ;;		line 604 in file "mcc_generated_files/i2c_master.c"
 10045 ;; Parameters:    Size  Location     Type
 10046 ;;		None
 10047 ;; Auto vars:     Size  Location     Type
 10048 ;;		None
 10049 ;; Return value:  Size  Location     Type
 10050 ;;                  1    wreg      void 
 10051 ;; Registers used:
 10052 ;;		None
 10053 ;; Tracked objects:
 10054 ;;		On entry : 0/0
 10055 ;;		On exit  : 0/0
 10056 ;;		Unchanged: 0/0
 10057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10062 ;;Total ram usage:        0 bytes
 10063 ;; Hardware stack levels used: 1
 10064 ;; This function calls:
 10065 ;;		Nothing
 10066 ;; This function is called by:
 10067 ;;		_I2C_DO_RX
 10068 ;;		_I2C_DO_RX_ACK
 10069 ;; This function uses a non-reentrant model
 10070 ;;
 10071                           
 10072                           	psect	text89
 10073   003436                     __ptext89:
 10074                           	callstack 0
 10075   003436                     _I2C_MasterSendAck:
 10076                           	callstack 19
 10077   003436                     
 10078                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKDT = 0;
 10079   003436  9AC5               	bcf	197,5,c	;volatile
 10080                           
 10081                           ;mcc_generated_files/i2c_master.c: 607:     SSPCON2bits.ACKEN = 1;
 10082   003438  88C5               	bsf	197,4,c	;volatile
 10083   00343A  0012               	return		;funcret
 10084   00343C                     __end_of_I2C_MasterSendAck:
 10085                           	callstack 0
 10086                           
 10087 ;; *************** function _I2C_MasterGetRxData *****************
 10088 ;; Defined at:
 10089 ;;		line 564 in file "mcc_generated_files/i2c_master.c"
 10090 ;; Parameters:    Size  Location     Type
 10091 ;;		None
 10092 ;; Auto vars:     Size  Location     Type
 10093 ;;		None
 10094 ;; Return value:  Size  Location     Type
 10095 ;;                  1    wreg      unsigned char 
 10096 ;; Registers used:
 10097 ;;		wreg, status,2
 10098 ;; Tracked objects:
 10099 ;;		On entry : 0/0
 10100 ;;		On exit  : 0/0
 10101 ;;		Unchanged: 0/0
 10102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10107 ;;Total ram usage:        0 bytes
 10108 ;; Hardware stack levels used: 1
 10109 ;; This function calls:
 10110 ;;		Nothing
 10111 ;; This function is called by:
 10112 ;;		_I2C_DO_RX
 10113 ;; This function uses a non-reentrant model
 10114 ;;
 10115                           
 10116                           	psect	text90
 10117   00346E                     __ptext90:
 10118                           	callstack 0
 10119   00346E                     _I2C_MasterGetRxData:
 10120                           	callstack 19
 10121   00346E                     
 10122                           ;mcc_generated_files/i2c_master.c: 566:     return SSPBUF;
 10123   00346E  50C9               	movf	201,w,c	;volatile
 10124   003470  0012               	return		;funcret
 10125   003472                     __end_of_I2C_MasterGetRxData:
 10126                           	callstack 0
 10127                           
 10128 ;; *************** function _I2C_MasterSendNack *****************
 10129 ;; Defined at:
 10130 ;;		line 610 in file "mcc_generated_files/i2c_master.c"
 10131 ;; Parameters:    Size  Location     Type
 10132 ;;		None
 10133 ;; Auto vars:     Size  Location     Type
 10134 ;;		None
 10135 ;; Return value:  Size  Location     Type
 10136 ;;                  1    wreg      void 
 10137 ;; Registers used:
 10138 ;;		None
 10139 ;; Tracked objects:
 10140 ;;		On entry : 0/0
 10141 ;;		On exit  : 0/0
 10142 ;;		Unchanged: 0/0
 10143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10148 ;;Total ram usage:        0 bytes
 10149 ;; Hardware stack levels used: 1
 10150 ;; This function calls:
 10151 ;;		Nothing
 10152 ;; This function is called by:
 10153 ;;		_I2C_DO_RX_NACK_STOP
 10154 ;;		_I2C_DO_RX_NACK_RESTART
 10155 ;; This function uses a non-reentrant model
 10156 ;;
 10157                           
 10158                           	psect	text91
 10159   00343C                     __ptext91:
 10160                           	callstack 0
 10161   00343C                     _I2C_MasterSendNack:
 10162                           	callstack 19
 10163   00343C                     
 10164                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKDT = 1;
 10165   00343C  8AC5               	bsf	197,5,c	;volatile
 10166                           
 10167                           ;mcc_generated_files/i2c_master.c: 613:     SSPCON2bits.ACKEN = 1;
 10168   00343E  88C5               	bsf	197,4,c	;volatile
 10169   003440  0012               	return		;funcret
 10170   003442                     __end_of_I2C_MasterSendNack:
 10171                           	callstack 0
 10172                           
 10173 ;; *************** function _I2C_MasterStartRx *****************
 10174 ;; Defined at:
 10175 ;;		line 584 in file "mcc_generated_files/i2c_master.c"
 10176 ;; Parameters:    Size  Location     Type
 10177 ;;		None
 10178 ;; Auto vars:     Size  Location     Type
 10179 ;;		None
 10180 ;; Return value:  Size  Location     Type
 10181 ;;                  1    wreg      void 
 10182 ;; Registers used:
 10183 ;;		None
 10184 ;; Tracked objects:
 10185 ;;		On entry : 0/0
 10186 ;;		On exit  : 0/0
 10187 ;;		Unchanged: 0/0
 10188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10193 ;;Total ram usage:        0 bytes
 10194 ;; Hardware stack levels used: 1
 10195 ;; This function calls:
 10196 ;;		Nothing
 10197 ;; This function is called by:
 10198 ;;		_I2C_DO_RCEN
 10199 ;; This function uses a non-reentrant model
 10200 ;;
 10201                           
 10202                           	psect	text92
 10203   003472                     __ptext92:
 10204                           	callstack 0
 10205   003472                     _I2C_MasterStartRx:
 10206                           	callstack 19
 10207   003472                     
 10208                           ;mcc_generated_files/i2c_master.c: 586:     SSPCON2bits.RCEN = 1;
 10209   003472  86C5               	bsf	197,3,c	;volatile
 10210   003474  0012               	return		;funcret
 10211   003476                     __end_of_I2C_MasterStartRx:
 10212                           	callstack 0
 10213                           
 10214 ;; *************** function _I2C_CallbackReturnReset *****************
 10215 ;; Defined at:
 10216 ;;		line 526 in file "mcc_generated_files/i2c_master.c"
 10217 ;; Parameters:    Size  Location     Type
 10218 ;;  funPtr          2    9[COMRAM] PTR void 
 10219 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 10220 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 10221 ;; Auto vars:     Size  Location     Type
 10222 ;;		None
 10223 ;; Return value:  Size  Location     Type
 10224 ;;                  1    wreg      enum E363
 10225 ;; Registers used:
 10226 ;;		wreg
 10227 ;; Tracked objects:
 10228 ;;		On entry : 0/0
 10229 ;;		On exit  : 0/0
 10230 ;;		Unchanged: 0/0
 10231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10232 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10235 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10236 ;;Total ram usage:        2 bytes
 10237 ;; Hardware stack levels used: 1
 10238 ;; This function calls:
 10239 ;;		Nothing
 10240 ;; This function is called by:
 10241 ;;		_I2C_Open
 10242 ;;		_I2C_DO_TX
 10243 ;;		_I2C_DO_RX
 10244 ;;		_I2C_DO_TX_EMPTY
 10245 ;;		_I2C_DO_ADDRESS_NACK
 10246 ;;		_I2C_DO_RX_EMPTY
 10247 ;; This function uses a non-reentrant model
 10248 ;;
 10249                           
 10250                           	psect	text93
 10251   003476                     __ptext93:
 10252                           	callstack 0
 10253   003476                     _I2C_CallbackReturnReset:
 10254                           	callstack 19
 10255   003476                     
 10256                           ;mcc_generated_files/i2c_master.c: 526: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 527: {;mcc_generated_files/i2c_master.c: 528:  
      +                             return I2C_RESET_LINK;
 10257   003476  0E05               	movlw	5
 10258   003478  0012               	return		;funcret
 10259   00347A                     __end_of_I2C_CallbackReturnReset:
 10260                           	callstack 0
 10261                           
 10262 ;; *************** function _I2C_CallbackReturnStop *****************
 10263 ;; Defined at:
 10264 ;;		line 521 in file "mcc_generated_files/i2c_master.c"
 10265 ;; Parameters:    Size  Location     Type
 10266 ;;  funPtr          2    9[COMRAM] PTR void 
 10267 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 10268 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 10269 ;; Auto vars:     Size  Location     Type
 10270 ;;		None
 10271 ;; Return value:  Size  Location     Type
 10272 ;;                  1    wreg      enum E363
 10273 ;; Registers used:
 10274 ;;		wreg
 10275 ;; Tracked objects:
 10276 ;;		On entry : 0/0
 10277 ;;		On exit  : 0/0
 10278 ;;		Unchanged: 0/0
 10279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10280 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10283 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10284 ;;Total ram usage:        2 bytes
 10285 ;; Hardware stack levels used: 1
 10286 ;; This function calls:
 10287 ;;		Nothing
 10288 ;; This function is called by:
 10289 ;;		_I2C_Open
 10290 ;;		_I2C_SetCallback
 10291 ;;		i2_I2C_SetCallback
 10292 ;;		_I2C_DO_TX
 10293 ;;		_I2C_DO_RX
 10294 ;;		_I2C_DO_TX_EMPTY
 10295 ;;		_I2C_DO_ADDRESS_NACK
 10296 ;;		_I2C_DO_RX_EMPTY
 10297 ;; This function uses a non-reentrant model
 10298 ;;
 10299                           
 10300                           	psect	text94
 10301   00347A                     __ptext94:
 10302                           	callstack 0
 10303   00347A                     _I2C_CallbackReturnStop:
 10304                           	callstack 19
 10305   00347A                     
 10306                           ;mcc_generated_files/i2c_master.c: 521: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 522: {;mcc_generated_files/i2c_master.c: 523:   
      +                            return I2C_STOP;
 10307   00347A  0E01               	movlw	1
 10308   00347C  0012               	return		;funcret
 10309   00347E                     __end_of_I2C_CallbackReturnStop:
 10310                           	callstack 0
 10311                           
 10312 ;; *************** function _rdBlkRegCompleteHandler *****************
 10313 ;; Defined at:
 10314 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
 10315 ;; Parameters:    Size  Location     Type
 10316 ;;  ptr             2    9[COMRAM] PTR void 
 10317 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 10318 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 10319 ;; Auto vars:     Size  Location     Type
 10320 ;;		None
 10321 ;; Return value:  Size  Location     Type
 10322 ;;                  1    wreg      enum E363
 10323 ;; Registers used:
 10324 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10325 ;; Tracked objects:
 10326 ;;		On entry : 0/0
 10327 ;;		On exit  : 0/0
 10328 ;;		Unchanged: 0/0
 10329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10330 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10332 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10333 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10334 ;;Total ram usage:        3 bytes
 10335 ;; Hardware stack levels used: 1
 10336 ;; Hardware stack levels required when called: 2
 10337 ;; This function calls:
 10338 ;;		i2_I2C_SetBuffer
 10339 ;;		i2_I2C_SetDataCompleteCallback
 10340 ;; This function is called by:
 10341 ;;		_I2C_ReadDataBlock
 10342 ;;		_I2C_DO_TX
 10343 ;;		_I2C_DO_RX
 10344 ;;		_I2C_DO_TX_EMPTY
 10345 ;;		_I2C_DO_ADDRESS_NACK
 10346 ;;		_I2C_DO_RX_EMPTY
 10347 ;; This function uses a non-reentrant model
 10348 ;;
 10349                           
 10350                           	psect	text95
 10351   002DE6                     __ptext95:
 10352                           	callstack 0
 10353   002DE6                     _rdBlkRegCompleteHandler:
 10354                           	callstack 17
 10355   002DE6                     
 10356                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
 10357   002DE6  EE20 F002          	lfsr	2,2
 10358   002DEA  500A               	movf	rdBlkRegCompleteHandler@ptr^0,w,c
 10359   002DEC  26D9               	addwf	fsr2l,f,c
 10360   002DEE  500B               	movf	(rdBlkRegCompleteHandler@ptr+1)^0,w,c
 10361   002DF0  22DA               	addwfc	fsr2h,f,c
 10362   002DF2  50DF               	movf	indf2,w,c
 10363   002DF4  6E0C               	movwf	??_rdBlkRegCompleteHandler^0,c
 10364   002DF6  C00C  F001         	movff	??_rdBlkRegCompleteHandler,i2I2C_SetBuffer@buffer
 10365   002DFA  6A02               	clrf	(i2I2C_SetBuffer@buffer+1)^0,c
 10366   002DFC  C00A  FFD9         	movff	rdBlkRegCompleteHandler@ptr,fsr2l
 10367   002E00  C00B  FFDA         	movff	rdBlkRegCompleteHandler@ptr+1,fsr2h
 10368   002E04  CFDE F003          	movff	postinc2,i2I2C_SetBuffer@bufferSize
 10369   002E08  CFDD F004          	movff	postdec2,i2I2C_SetBuffer@bufferSize+1
 10370   002E0C  ECE7  F018         	call	i2_I2C_SetBuffer	;wreg free
 10371   002E10                     
 10372                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 10373   002E10  0E00               	movlw	0
 10374   002E12  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
 10375   002E14  0E00               	movlw	0
 10376   002E16  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
 10377   002E18  0E00               	movlw	0
 10378   002E1A  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
 10379   002E1C  0E00               	movlw	0
 10380   002E1E  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
 10381   002E20  EC6A  F019         	call	i2_I2C_SetDataCompleteCallback	;wreg free
 10382   002E24                     
 10383                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
 10384   002E24  0E02               	movlw	2
 10385   002E26  0012               	return		;funcret
 10386   002E28                     __end_of_rdBlkRegCompleteHandler:
 10387                           	callstack 0
 10388                           
 10389 ;; *************** function _wr1RegCompleteHandler *****************
 10390 ;; Defined at:
 10391 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
 10392 ;; Parameters:    Size  Location     Type
 10393 ;;  ptr             2    9[COMRAM] PTR void 
 10394 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 10395 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 10396 ;; Auto vars:     Size  Location     Type
 10397 ;;		None
 10398 ;; Return value:  Size  Location     Type
 10399 ;;                  1    wreg      enum E363
 10400 ;; Registers used:
 10401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10402 ;; Tracked objects:
 10403 ;;		On entry : 0/0
 10404 ;;		On exit  : 0/0
 10405 ;;		Unchanged: 0/0
 10406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10407 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10410 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10411 ;;Total ram usage:        2 bytes
 10412 ;; Hardware stack levels used: 1
 10413 ;; Hardware stack levels required when called: 2
 10414 ;; This function calls:
 10415 ;;		i2_I2C_SetBuffer
 10416 ;;		i2_I2C_SetDataCompleteCallback
 10417 ;; This function is called by:
 10418 ;;		_I2C_Write1ByteRegister
 10419 ;;		_I2C_DO_TX
 10420 ;;		_I2C_DO_RX
 10421 ;;		_I2C_DO_TX_EMPTY
 10422 ;;		_I2C_DO_ADDRESS_NACK
 10423 ;;		_I2C_DO_RX_EMPTY
 10424 ;; This function uses a non-reentrant model
 10425 ;;
 10426                           
 10427                           	psect	text96
 10428   0030B0                     __ptext96:
 10429                           	callstack 0
 10430   0030B0                     _wr1RegCompleteHandler:
 10431                           	callstack 17
 10432   0030B0                     
 10433                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
 10434   0030B0  C00A  F001         	movff	wr1RegCompleteHandler@ptr,i2I2C_SetBuffer@buffer
 10435   0030B4  C00B  F002         	movff	wr1RegCompleteHandler@ptr+1,i2I2C_SetBuffer@buffer+1
 10436   0030B8  0E00               	movlw	0
 10437   0030BA  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
 10438   0030BC  0E01               	movlw	1
 10439   0030BE  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
 10440   0030C0  ECE7  F018         	call	i2_I2C_SetBuffer	;wreg free
 10441   0030C4                     
 10442                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 10443   0030C4  0E00               	movlw	0
 10444   0030C6  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
 10445   0030C8  0E00               	movlw	0
 10446   0030CA  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
 10447   0030CC  0E00               	movlw	0
 10448   0030CE  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
 10449   0030D0  0E00               	movlw	0
 10450   0030D2  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
 10451   0030D4  EC6A  F019         	call	i2_I2C_SetDataCompleteCallback	;wreg free
 10452   0030D8                     
 10453                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
 10454   0030D8  0E04               	movlw	4
 10455   0030DA  0012               	return		;funcret
 10456   0030DC                     __end_of_wr1RegCompleteHandler:
 10457                           	callstack 0
 10458                           
 10459 ;; *************** function _rd2RegCompleteHandler *****************
 10460 ;; Defined at:
 10461 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
 10462 ;; Parameters:    Size  Location     Type
 10463 ;;  ptr             2    9[COMRAM] PTR void 
 10464 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 10465 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 10466 ;; Auto vars:     Size  Location     Type
 10467 ;;		None
 10468 ;; Return value:  Size  Location     Type
 10469 ;;                  1    wreg      enum E363
 10470 ;; Registers used:
 10471 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10472 ;; Tracked objects:
 10473 ;;		On entry : 0/0
 10474 ;;		On exit  : 0/0
 10475 ;;		Unchanged: 0/0
 10476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10477 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10480 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10481 ;;Total ram usage:        2 bytes
 10482 ;; Hardware stack levels used: 1
 10483 ;; Hardware stack levels required when called: 2
 10484 ;; This function calls:
 10485 ;;		i2_I2C_SetBuffer
 10486 ;;		i2_I2C_SetDataCompleteCallback
 10487 ;; This function is called by:
 10488 ;;		_I2C_Read2ByteRegister
 10489 ;;		_I2C_DO_TX
 10490 ;;		_I2C_DO_RX
 10491 ;;		_I2C_DO_TX_EMPTY
 10492 ;;		_I2C_DO_ADDRESS_NACK
 10493 ;;		_I2C_DO_RX_EMPTY
 10494 ;; This function uses a non-reentrant model
 10495 ;;
 10496                           
 10497                           	psect	text97
 10498   0030DC                     __ptext97:
 10499                           	callstack 0
 10500   0030DC                     _rd2RegCompleteHandler:
 10501                           	callstack 17
 10502   0030DC                     
 10503                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
 10504   0030DC  C00A  F001         	movff	rd2RegCompleteHandler@ptr,i2I2C_SetBuffer@buffer
 10505   0030E0  C00B  F002         	movff	rd2RegCompleteHandler@ptr+1,i2I2C_SetBuffer@buffer+1
 10506   0030E4  0E00               	movlw	0
 10507   0030E6  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
 10508   0030E8  0E02               	movlw	2
 10509   0030EA  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
 10510   0030EC  ECE7  F018         	call	i2_I2C_SetBuffer	;wreg free
 10511   0030F0                     
 10512                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 10513   0030F0  0E00               	movlw	0
 10514   0030F2  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
 10515   0030F4  0E00               	movlw	0
 10516   0030F6  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
 10517   0030F8  0E00               	movlw	0
 10518   0030FA  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
 10519   0030FC  0E00               	movlw	0
 10520   0030FE  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
 10521   003100  EC6A  F019         	call	i2_I2C_SetDataCompleteCallback	;wreg free
 10522   003104                     
 10523                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
 10524   003104  0E02               	movlw	2
 10525   003106  0012               	return		;funcret
 10526   003108                     __end_of_rd2RegCompleteHandler:
 10527                           	callstack 0
 10528                           
 10529 ;; *************** function _rd1RegCompleteHandler *****************
 10530 ;; Defined at:
 10531 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
 10532 ;; Parameters:    Size  Location     Type
 10533 ;;  ptr             2    9[COMRAM] PTR void 
 10534 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 10535 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 10536 ;; Auto vars:     Size  Location     Type
 10537 ;;		None
 10538 ;; Return value:  Size  Location     Type
 10539 ;;                  1    wreg      enum E363
 10540 ;; Registers used:
 10541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10542 ;; Tracked objects:
 10543 ;;		On entry : 0/0
 10544 ;;		On exit  : 0/0
 10545 ;;		Unchanged: 0/0
 10546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10547 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10550 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10551 ;;Total ram usage:        2 bytes
 10552 ;; Hardware stack levels used: 1
 10553 ;; Hardware stack levels required when called: 2
 10554 ;; This function calls:
 10555 ;;		i2_I2C_SetBuffer
 10556 ;;		i2_I2C_SetDataCompleteCallback
 10557 ;; This function is called by:
 10558 ;;		_I2C_Read1ByteRegister
 10559 ;;		_I2C_DO_TX
 10560 ;;		_I2C_DO_RX
 10561 ;;		_I2C_DO_TX_EMPTY
 10562 ;;		_I2C_DO_ADDRESS_NACK
 10563 ;;		_I2C_DO_RX_EMPTY
 10564 ;; This function uses a non-reentrant model
 10565 ;;
 10566                           
 10567                           	psect	text98
 10568   003108                     __ptext98:
 10569                           	callstack 0
 10570   003108                     _rd1RegCompleteHandler:
 10571                           	callstack 17
 10572   003108                     
 10573                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
 10574   003108  C00A  F001         	movff	rd1RegCompleteHandler@ptr,i2I2C_SetBuffer@buffer
 10575   00310C  C00B  F002         	movff	rd1RegCompleteHandler@ptr+1,i2I2C_SetBuffer@buffer+1
 10576   003110  0E00               	movlw	0
 10577   003112  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
 10578   003114  0E01               	movlw	1
 10579   003116  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
 10580   003118  ECE7  F018         	call	i2_I2C_SetBuffer	;wreg free
 10581   00311C                     
 10582                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 10583   00311C  0E00               	movlw	0
 10584   00311E  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
 10585   003120  0E00               	movlw	0
 10586   003122  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
 10587   003124  0E00               	movlw	0
 10588   003126  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
 10589   003128  0E00               	movlw	0
 10590   00312A  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
 10591   00312C  EC6A  F019         	call	i2_I2C_SetDataCompleteCallback	;wreg free
 10592   003130                     
 10593                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
 10594   003130  0E02               	movlw	2
 10595   003132  0012               	return		;funcret
 10596   003134                     __end_of_rd1RegCompleteHandler:
 10597                           	callstack 0
 10598                           
 10599 ;; *************** function _wr2RegCompleteHandler *****************
 10600 ;; Defined at:
 10601 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
 10602 ;; Parameters:    Size  Location     Type
 10603 ;;  ptr             2    9[COMRAM] PTR void 
 10604 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 10605 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 10606 ;; Auto vars:     Size  Location     Type
 10607 ;;		None
 10608 ;; Return value:  Size  Location     Type
 10609 ;;                  1    wreg      enum E363
 10610 ;; Registers used:
 10611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10612 ;; Tracked objects:
 10613 ;;		On entry : 0/0
 10614 ;;		On exit  : 0/0
 10615 ;;		Unchanged: 0/0
 10616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10617 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10620 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10621 ;;Total ram usage:        2 bytes
 10622 ;; Hardware stack levels used: 1
 10623 ;; Hardware stack levels required when called: 2
 10624 ;; This function calls:
 10625 ;;		i2_I2C_SetBuffer
 10626 ;;		i2_I2C_SetDataCompleteCallback
 10627 ;; This function is called by:
 10628 ;;		_I2C_Write2ByteRegister
 10629 ;;		_I2C_DO_TX
 10630 ;;		_I2C_DO_RX
 10631 ;;		_I2C_DO_TX_EMPTY
 10632 ;;		_I2C_DO_ADDRESS_NACK
 10633 ;;		_I2C_DO_RX_EMPTY
 10634 ;; This function uses a non-reentrant model
 10635 ;;
 10636                           
 10637                           	psect	text99
 10638   003134                     __ptext99:
 10639                           	callstack 0
 10640   003134                     _wr2RegCompleteHandler:
 10641                           	callstack 17
 10642   003134                     
 10643                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
 10644   003134  C00A  F001         	movff	wr2RegCompleteHandler@ptr,i2I2C_SetBuffer@buffer
 10645   003138  C00B  F002         	movff	wr2RegCompleteHandler@ptr+1,i2I2C_SetBuffer@buffer+1
 10646   00313C  0E00               	movlw	0
 10647   00313E  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
 10648   003140  0E02               	movlw	2
 10649   003142  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
 10650   003144  ECE7  F018         	call	i2_I2C_SetBuffer	;wreg free
 10651   003148                     
 10652                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 10653   003148  0E00               	movlw	0
 10654   00314A  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
 10655   00314C  0E00               	movlw	0
 10656   00314E  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
 10657   003150  0E00               	movlw	0
 10658   003152  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
 10659   003154  0E00               	movlw	0
 10660   003156  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
 10661   003158  EC6A  F019         	call	i2_I2C_SetDataCompleteCallback	;wreg free
 10662   00315C                     
 10663                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
 10664   00315C  0E04               	movlw	4
 10665   00315E  0012               	return		;funcret
 10666   003160                     __end_of_wr2RegCompleteHandler:
 10667                           	callstack 0
 10668                           
 10669 ;; *************** function i2_I2C_SetDataCompleteCallback *****************
 10670 ;; Defined at:
 10671 ;;		line 274 in file "mcc_generated_files/i2c_master.c"
 10672 ;; Parameters:    Size  Location     Type
 10673 ;;  cb              2    5[COMRAM] PTR FTN(PTR void ,)enum 
 10674 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 10675 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 10676 ;;  ptr             2    7[COMRAM] PTR void 
 10677 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 10678 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 10679 ;; Auto vars:     Size  Location     Type
 10680 ;;		None
 10681 ;; Return value:  Size  Location     Type
 10682 ;;                  1    wreg      void 
 10683 ;; Registers used:
 10684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10685 ;; Tracked objects:
 10686 ;;		On entry : 0/0
 10687 ;;		On exit  : 0/0
 10688 ;;		Unchanged: 0/0
 10689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10690 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10693 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10694 ;;Total ram usage:        4 bytes
 10695 ;; Hardware stack levels used: 1
 10696 ;; Hardware stack levels required when called: 1
 10697 ;; This function calls:
 10698 ;;		i2_I2C_SetCallback
 10699 ;; This function is called by:
 10700 ;;		_rd1RegCompleteHandler
 10701 ;;		_rd2RegCompleteHandler
 10702 ;;		_wr1RegCompleteHandler
 10703 ;;		_wr2RegCompleteHandler
 10704 ;;		_rdBlkRegCompleteHandler
 10705 ;; This function uses a non-reentrant model
 10706 ;;
 10707                           
 10708                           	psect	text100
 10709   0032D4                     __ptext100:
 10710                           	callstack 0
 10711   0032D4                     i2_I2C_SetDataCompleteCallback:
 10712                           	callstack 17
 10713   0032D4                     
 10714                           ;mcc_generated_files/i2c_master.c: 274: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 275: {;mcc_generated_files/i2c_master.c
      +                          : 276:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
 10715   0032D4  C006  F001         	movff	i2I2C_SetDataCompleteCallback@cb,i2I2C_SetCallback@cb
 10716   0032D8  C007  F002         	movff	i2I2C_SetDataCompleteCallback@cb+1,i2I2C_SetCallback@cb+1
 10717   0032DC  C008  F003         	movff	i2I2C_SetDataCompleteCallback@ptr,i2I2C_SetCallback@ptr
 10718   0032E0  C009  F004         	movff	i2I2C_SetDataCompleteCallback@ptr+1,i2I2C_SetCallback@ptr+1
 10719   0032E4  0E00               	movlw	0
 10720   0032E6  ECFB  F015         	call	i2_I2C_SetCallback
 10721   0032EA  0012               	return		;funcret
 10722   0032EC                     __end_ofi2_I2C_SetDataCompleteCallback:
 10723                           	callstack 0
 10724                           
 10725 ;; *************** function i2_I2C_SetCallback *****************
 10726 ;; Defined at:
 10727 ;;		line 304 in file "mcc_generated_files/i2c_master.c"
 10728 ;; Parameters:    Size  Location     Type
 10729 ;;  idx             1    wreg     enum E3152
 10730 ;;  cb              2    0[COMRAM] PTR FTN(PTR void ,)enum 
 10731 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 10732 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 10733 ;;  ptr             2    2[COMRAM] PTR void 
 10734 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 10735 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 10736 ;; Auto vars:     Size  Location     Type
 10737 ;;  idx             1    4[COMRAM] enum E3152
 10738 ;; Return value:  Size  Location     Type
 10739 ;;                  1    wreg      void 
 10740 ;; Registers used:
 10741 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10742 ;; Tracked objects:
 10743 ;;		On entry : 0/0
 10744 ;;		On exit  : 0/0
 10745 ;;		Unchanged: 0/0
 10746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10747 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10748 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10750 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10751 ;;Total ram usage:        5 bytes
 10752 ;; Hardware stack levels used: 1
 10753 ;; This function calls:
 10754 ;;		Nothing
 10755 ;; This function is called by:
 10756 ;;		i2_I2C_SetDataCompleteCallback
 10757 ;; This function uses a non-reentrant model
 10758 ;;
 10759                           
 10760                           	psect	text101
 10761   002BF6                     __ptext101:
 10762                           	callstack 0
 10763   002BF6                     i2_I2C_SetCallback:
 10764                           	callstack 17
 10765                           
 10766                           ;incstack = 0
 10767                           ;i2I2C_SetCallback@idx stored from wreg
 10768   002BF6  6E05               	movwf	i2I2C_SetCallback@idx^0,c
 10769   002BF8                     
 10770                           ;mcc_generated_files/i2c_master.c: 304: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 305: {;mcc_generate
      +                          d_files/i2c_master.c: 306:     if(cb)
 10771   002BF8  5001               	movf	i2I2C_SetCallback@cb^0,w,c
 10772   002BFA  1002               	iorwf	(i2I2C_SetCallback@cb+1)^0,w,c
 10773   002BFC  B4D8               	btfsc	status,2,c
 10774   002BFE  EF03  F016         	goto	i2u205_41
 10775   002C02  EF05  F016         	goto	i2u205_40
 10776   002C06                     i2u205_41:
 10777   002C06  EF1B  F016         	goto	i2l3532
 10778   002C0A                     i2u205_40:
 10779   002C0A                     
 10780                           ;mcc_generated_files/i2c_master.c: 307:     {;mcc_generated_files/i2c_master.c: 308:    
      +                               I2C_Status.callbackTable[idx] = cb;
 10781   002C0A  5005               	movf	i2I2C_SetCallback@idx^0,w,c
 10782   002C0C  0D02               	mullw	2
 10783   002C0E  50F3               	movf	243,w,c
 10784   002C10  0F60               	addlw	low _I2C_Status
 10785   002C12  6ED9               	movwf	fsr2l,c
 10786   002C14  6ADA               	clrf	fsr2h,c
 10787   002C16  C001  FFDE         	movff	i2I2C_SetCallback@cb,postinc2
 10788   002C1A  C002  FFDD         	movff	i2I2C_SetCallback@cb+1,postdec2
 10789                           
 10790                           ;mcc_generated_files/i2c_master.c: 309:         I2C_Status.callbackPayload[idx] = ptr;
 10791   002C1E  5005               	movf	i2I2C_SetCallback@idx^0,w,c
 10792   002C20  0D02               	mullw	2
 10793   002C22  50F3               	movf	243,w,c
 10794   002C24  0F6C               	addlw	low (_I2C_Status+12)
 10795   002C26  6ED9               	movwf	fsr2l,c
 10796   002C28  6ADA               	clrf	fsr2h,c
 10797   002C2A  C003  FFDE         	movff	i2I2C_SetCallback@ptr,postinc2
 10798   002C2E  C004  FFDD         	movff	i2I2C_SetCallback@ptr+1,postdec2
 10799                           
 10800                           ;mcc_generated_files/i2c_master.c: 310:     }
 10801   002C32  EF2D  F016         	goto	i2l490
 10802   002C36                     i2l3532:
 10803                           
 10804                           ;mcc_generated_files/i2c_master.c: 312:     {;mcc_generated_files/i2c_master.c: 313:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
 10805   002C36  5005               	movf	i2I2C_SetCallback@idx^0,w,c
 10806   002C38  0D02               	mullw	2
 10807   002C3A  50F3               	movf	243,w,c
 10808   002C3C  0F60               	addlw	low _I2C_Status
 10809   002C3E  6ED9               	movwf	fsr2l,c
 10810   002C40  6ADA               	clrf	fsr2h,c
 10811   002C42  0E7A               	movlw	low _I2C_CallbackReturnStop
 10812   002C44  6EDE               	movwf	postinc2,c
 10813   002C46  0E34               	movlw	high _I2C_CallbackReturnStop
 10814   002C48  6EDD               	movwf	postdec2,c
 10815                           
 10816                           ;mcc_generated_files/i2c_master.c: 314:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
 10817   002C4A  5005               	movf	i2I2C_SetCallback@idx^0,w,c
 10818   002C4C  0D02               	mullw	2
 10819   002C4E  50F3               	movf	243,w,c
 10820   002C50  0F6C               	addlw	low (_I2C_Status+12)
 10821   002C52  6ED9               	movwf	fsr2l,c
 10822   002C54  6ADA               	clrf	fsr2h,c
 10823   002C56  6ADE               	clrf	postinc2,c
 10824   002C58  6ADD               	clrf	postdec2,c
 10825   002C5A                     i2l490:
 10826   002C5A  0012               	return		;funcret
 10827   002C5C                     __end_ofi2_I2C_SetCallback:
 10828                           	callstack 0
 10829                           
 10830 ;; *************** function i2_I2C_SetBuffer *****************
 10831 ;; Defined at:
 10832 ;;		line 264 in file "mcc_generated_files/i2c_master.c"
 10833 ;; Parameters:    Size  Location     Type
 10834 ;;  buffer          2    0[COMRAM] PTR void 
 10835 ;;		 -> I2C_Read1ByteRegister@returnValue$data(3), I2C_Read2ByteRegister@returnValue$data(3), I2C_Write1ByteRegister@dat
      +a$data(3), I2C_Write2ByteRegister@data$data(3), 
 10836 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), bufferBlock$data(3), I2C_Write2ByteRegister@reg(1), 
 10837 ;;		 -> I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegi
      +ster@reg(1), 
 10838 ;;		 -> I2C_Read2ByteRegister@returnValue(2), NULL(0), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1
      +), 
 10839 ;;  bufferSize      2    2[COMRAM] unsigned int 
 10840 ;; Auto vars:     Size  Location     Type
 10841 ;;		None
 10842 ;; Return value:  Size  Location     Type
 10843 ;;                  1    wreg      void 
 10844 ;; Registers used:
 10845 ;;		wreg, status,2, status,0
 10846 ;; Tracked objects:
 10847 ;;		On entry : 0/0
 10848 ;;		On exit  : 0/0
 10849 ;;		Unchanged: 0/0
 10850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10851 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10854 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10855 ;;Total ram usage:        4 bytes
 10856 ;; Hardware stack levels used: 1
 10857 ;; This function calls:
 10858 ;;		Nothing
 10859 ;; This function is called by:
 10860 ;;		_rd1RegCompleteHandler
 10861 ;;		_rd2RegCompleteHandler
 10862 ;;		_wr1RegCompleteHandler
 10863 ;;		_wr2RegCompleteHandler
 10864 ;;		_rdBlkRegCompleteHandler
 10865 ;; This function uses a non-reentrant model
 10866 ;;
 10867                           
 10868                           	psect	text102
 10869   0031CE                     __ptext102:
 10870                           	callstack 0
 10871   0031CE                     i2_I2C_SetBuffer:
 10872                           	callstack 18
 10873   0031CE                     
 10874                           ;mcc_generated_files/i2c_master.c: 264: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 265: {;mcc_generated_files/i2c_master.c: 266:     
      +                          if(I2C_Status.bufferFree)
 10875   0031CE  0100               	movlb	0	; () banked
 10876   0031D0  A783               	btfss	(_I2C_Status+35)& (0+255),3,b
 10877   0031D2  EFED  F018         	goto	i2u216_41
 10878   0031D6  EFEF  F018         	goto	i2u216_40
 10879   0031DA                     i2u216_41:
 10880   0031DA  EFF8  F018         	goto	i2l467
 10881   0031DE                     i2u216_40:
 10882   0031DE                     
 10883                           ; BSR set to: 0
 10884                           ;mcc_generated_files/i2c_master.c: 267:     {;mcc_generated_files/i2c_master.c: 268:    
      +                               I2C_Status.data_ptr = buffer;
 10885   0031DE  C001  F07D         	movff	i2I2C_SetBuffer@buffer,_I2C_Status+29
 10886   0031E2  C002  F07E         	movff	i2I2C_SetBuffer@buffer+1,_I2C_Status+30
 10887   0031E6                     
 10888                           ; BSR set to: 0
 10889                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.data_length = bufferSize;
 10890   0031E6  C003  F07F         	movff	i2I2C_SetBuffer@bufferSize,_I2C_Status+31
 10891   0031EA  C004  F080         	movff	i2I2C_SetBuffer@bufferSize+1,_I2C_Status+32
 10892   0031EE                     
 10893                           ; BSR set to: 0
 10894                           ;mcc_generated_files/i2c_master.c: 270:         I2C_Status.bufferFree = 0;
 10895   0031EE  9783               	bcf	(_I2C_Status+35)& (0+255),3,b
 10896   0031F0                     i2l467:
 10897                           
 10898                           ; BSR set to: 0
 10899   0031F0  0012               	return		;funcret
 10900   0031F2                     __end_ofi2_I2C_SetBuffer:
 10901                           	callstack 0
 10902                           
 10903 ;; *************** function _I2C_MasterStop *****************
 10904 ;; Defined at:
 10905 ;;		line 594 in file "mcc_generated_files/i2c_master.c"
 10906 ;; Parameters:    Size  Location     Type
 10907 ;;		None
 10908 ;; Auto vars:     Size  Location     Type
 10909 ;;		None
 10910 ;; Return value:  Size  Location     Type
 10911 ;;                  1    wreg      void 
 10912 ;; Registers used:
 10913 ;;		None
 10914 ;; Tracked objects:
 10915 ;;		On entry : 0/0
 10916 ;;		On exit  : 0/0
 10917 ;;		Unchanged: 0/0
 10918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10923 ;;Total ram usage:        0 bytes
 10924 ;; Hardware stack levels used: 1
 10925 ;; This function calls:
 10926 ;;		Nothing
 10927 ;; This function is called by:
 10928 ;;		_I2C_DO_SEND_STOP
 10929 ;; This function uses a non-reentrant model
 10930 ;;
 10931                           
 10932                           	psect	text103
 10933   00347E                     __ptext103:
 10934                           	callstack 0
 10935   00347E                     _I2C_MasterStop:
 10936                           	callstack 18
 10937   00347E                     
 10938                           ;mcc_generated_files/i2c_master.c: 596:     SSPCON2bits.PEN = 1;
 10939   00347E  84C5               	bsf	197,2,c	;volatile
 10940   003480  0012               	return		;funcret
 10941   003482                     __end_of_I2C_MasterStop:
 10942                           	callstack 0
 10943                           
 10944 ;; *************** function _I2C_MasterEnableRestart *****************
 10945 ;; Defined at:
 10946 ;;		line 574 in file "mcc_generated_files/i2c_master.c"
 10947 ;; Parameters:    Size  Location     Type
 10948 ;;		None
 10949 ;; Auto vars:     Size  Location     Type
 10950 ;;		None
 10951 ;; Return value:  Size  Location     Type
 10952 ;;                  1    wreg      void 
 10953 ;; Registers used:
 10954 ;;		None
 10955 ;; Tracked objects:
 10956 ;;		On entry : 0/0
 10957 ;;		On exit  : 0/0
 10958 ;;		Unchanged: 0/0
 10959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10964 ;;Total ram usage:        0 bytes
 10965 ;; Hardware stack levels used: 1
 10966 ;; This function calls:
 10967 ;;		Nothing
 10968 ;; This function is called by:
 10969 ;;		_I2C_DO_SEND_RESTART_READ
 10970 ;;		_I2C_DO_SEND_RESTART_WRITE
 10971 ;;		_I2C_DO_SEND_RESTART
 10972 ;;		_I2C_DO_RX_EMPTY
 10973 ;; This function uses a non-reentrant model
 10974 ;;
 10975                           
 10976                           	psect	text104
 10977   003482                     __ptext104:
 10978                           	callstack 0
 10979   003482                     _I2C_MasterEnableRestart:
 10980                           	callstack 18
 10981   003482                     
 10982                           ;mcc_generated_files/i2c_master.c: 576:     SSPCON2bits.RSEN = 1;
 10983   003482  82C5               	bsf	197,1,c	;volatile
 10984   003484  0012               	return		;funcret
 10985   003486                     __end_of_I2C_MasterEnableRestart:
 10986                           	callstack 0
 10987                           
 10988 ;; *************** function _EUSART_Transmit_ISR *****************
 10989 ;; Defined at:
 10990 ;;		line 197 in file "mcc_generated_files/eusart.c"
 10991 ;; Parameters:    Size  Location     Type
 10992 ;;		None
 10993 ;; Auto vars:     Size  Location     Type
 10994 ;;		None
 10995 ;; Return value:  Size  Location     Type
 10996 ;;                  1    wreg      void 
 10997 ;; Registers used:
 10998 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10999 ;; Tracked objects:
 11000 ;;		On entry : 0/0
 11001 ;;		On exit  : 0/0
 11002 ;;		Unchanged: 0/0
 11003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11008 ;;Total ram usage:        0 bytes
 11009 ;; Hardware stack levels used: 1
 11010 ;; This function calls:
 11011 ;;		Nothing
 11012 ;; This function is called by:
 11013 ;;		_EUSART_Initialize
 11014 ;;		_INTERRUPT_InterruptManager
 11015 ;; This function uses a non-reentrant model
 11016 ;;
 11017                           
 11018                           	psect	text105
 11019   002EA8                     __ptext105:
 11020                           	callstack 0
 11021   002EA8                     _EUSART_Transmit_ISR:
 11022                           	callstack 22
 11023   002EA8                     
 11024                           ;mcc_generated_files/eusart.c: 201:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
 11025   002EA8  0E08               	movlw	8
 11026   002EAA  6033               	cpfslt	_eusartTxBufferRemaining^0,c	;volatile
 11027   002EAC  EF5A  F017         	goto	i2u330_41
 11028   002EB0  EF5C  F017         	goto	i2u330_40
 11029   002EB4                     i2u330_41:
 11030   002EB4  EF70  F017         	goto	i2l870
 11031   002EB8                     i2u330_40:
 11032   002EB8                     
 11033                           ;mcc_generated_files/eusart.c: 202:     {;mcc_generated_files/eusart.c: 203:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
 11034   002EB8  5034               	movf	_eusartTxTail^0,w,c
 11035   002EBA  0FB4               	addlw	low _eusartTxBuffer
 11036   002EBC  6ED9               	movwf	fsr2l,c
 11037   002EBE  6ADA               	clrf	fsr2h,c
 11038   002EC0  50DF               	movf	indf2,w,c
 11039   002EC2  6EAD               	movwf	173,c	;volatile
 11040   002EC4  2A34               	incf	_eusartTxTail^0,f,c	;volatile
 11041   002EC6                     
 11042                           ;mcc_generated_files/eusart.c: 204:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 11043   002EC6  0E07               	movlw	7
 11044   002EC8  6434               	cpfsgt	_eusartTxTail^0,c	;volatile
 11045   002ECA  EF69  F017         	goto	i2u331_41
 11046   002ECE  EF6B  F017         	goto	i2u331_40
 11047   002ED2                     i2u331_41:
 11048   002ED2  EF6D  F017         	goto	i2l4792
 11049   002ED6                     i2u331_40:
 11050   002ED6                     
 11051                           ;mcc_generated_files/eusart.c: 205:         {;mcc_generated_files/eusart.c: 206:        
      +                               eusartTxTail = 0;
 11052   002ED6  0E00               	movlw	0
 11053   002ED8  6E34               	movwf	_eusartTxTail^0,c	;volatile
 11054   002EDA                     i2l4792:
 11055                           
 11056                           ;mcc_generated_files/eusart.c: 208:         eusartTxBufferRemaining++;
 11057   002EDA  2A33               	incf	_eusartTxBufferRemaining^0,f,c	;volatile
 11058                           
 11059                           ;mcc_generated_files/eusart.c: 209:     }
 11060   002EDC  EF71  F017         	goto	i2l873
 11061   002EE0                     i2l870:
 11062                           
 11063                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         PIE
      +                          1bits.TX1IE = 0;
 11064   002EE0  989D               	bcf	157,4,c	;volatile
 11065   002EE2                     i2l873:
 11066   002EE2  0012               	return		;funcret
 11067   002EE4                     __end_of_EUSART_Transmit_ISR:
 11068                           	callstack 0
 11069                           
 11070 ;; *************** function _EUSART_Receive_ISR *****************
 11071 ;; Defined at:
 11072 ;;		line 216 in file "mcc_generated_files/eusart.c"
 11073 ;; Parameters:    Size  Location     Type
 11074 ;;		None
 11075 ;; Auto vars:     Size  Location     Type
 11076 ;;		None
 11077 ;; Return value:  Size  Location     Type
 11078 ;;                  1    wreg      void 
 11079 ;; Registers used:
 11080 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11081 ;; Tracked objects:
 11082 ;;		On entry : 0/0
 11083 ;;		On exit  : 0/0
 11084 ;;		Unchanged: 0/0
 11085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11090 ;;Total ram usage:        0 bytes
 11091 ;; Hardware stack levels used: 1
 11092 ;; Hardware stack levels required when called: 2
 11093 ;; This function calls:
 11094 ;;		NULL
 11095 ;;		_EUSART_DefaultErrorHandler
 11096 ;;		_EUSART_DefaultFramingErrorHandler
 11097 ;;		_EUSART_DefaultOverrunErrorHandler
 11098 ;;		_EUSART_RxDataHandler
 11099 ;; This function is called by:
 11100 ;;		_EUSART_Initialize
 11101 ;;		_INTERRUPT_InterruptManager
 11102 ;; This function uses a non-reentrant model
 11103 ;;
 11104                           
 11105                           	psect	text106
 11106   002296                     __ptext106:
 11107                           	callstack 0
 11108   002296                     _EUSART_Receive_ISR:
 11109                           	callstack 20
 11110   002296                     
 11111                           ;mcc_generated_files/eusart.c: 219:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 11112   002296  5032               	movf	_eusartRxHead^0,w,c
 11113   002298  0FA4               	addlw	low _eusartRxStatusBuffer
 11114   00229A  6ED9               	movwf	fsr2l,c
 11115   00229C  6ADA               	clrf	fsr2h,c
 11116   00229E  6ADF               	clrf	indf2,c
 11117   0022A0                     
 11118                           ;mcc_generated_files/eusart.c: 221:     if(RCSTAbits.FERR){
 11119   0022A0  A4AB               	btfss	171,2,c	;volatile
 11120   0022A2  EF55  F011         	goto	i2u332_41
 11121   0022A6  EF57  F011         	goto	i2u332_40
 11122   0022AA                     i2u332_41:
 11123   0022AA  EF69  F011         	goto	i2l4802
 11124   0022AE                     i2u332_40:
 11125   0022AE                     
 11126                           ;mcc_generated_files/eusart.c: 222:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 11127   0022AE  5032               	movf	_eusartRxHead^0,w,c
 11128   0022B0  0FA4               	addlw	low _eusartRxStatusBuffer
 11129   0022B2  6ED9               	movwf	fsr2l,c
 11130   0022B4  6ADA               	clrf	fsr2h,c
 11131   0022B6  0100               	movlb	0	; () banked
 11132   0022B8  82DF               	bsf	indf2,1,c
 11133   0022BA                     
 11134                           ; BSR set to: 0
 11135                           ;mcc_generated_files/eusart.c: 223:         EUSART_FramingErrorHandler();
 11136   0022BA  D802               	call	i2u333_48
 11137   0022BC  EF69  F011         	goto	i2u333_49
 11138   0022C0                     i2u333_48:
 11139   0022C0  0005               	push	
 11140   0022C2  6EFA               	movwf	pclath,c
 11141   0022C4  51FC               	movf	_EUSART_FramingErrorHandler& (0+255),w,b
 11142   0022C6  6EFD               	movwf	tosl,c
 11143   0022C8  51FD               	movf	(_EUSART_FramingErrorHandler+1)& (0+255),w,b
 11144   0022CA  6EFE               	movwf	tosh,c
 11145   0022CC  6AFF               	clrf	tosu,c
 11146   0022CE  50FA               	movf	pclath,w,c
 11147   0022D0  0012               	return		;indir
 11148   0022D2                     i2u333_49:
 11149   0022D2                     i2l4802:
 11150                           
 11151                           ;mcc_generated_files/eusart.c: 226:     if(RCSTAbits.OERR){
 11152   0022D2  A2AB               	btfss	171,1,c	;volatile
 11153   0022D4  EF6E  F011         	goto	i2u334_41
 11154   0022D8  EF70  F011         	goto	i2u334_40
 11155   0022DC                     i2u334_41:
 11156   0022DC  EF82  F011         	goto	i2l4808
 11157   0022E0                     i2u334_40:
 11158   0022E0                     
 11159                           ;mcc_generated_files/eusart.c: 227:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 11160   0022E0  5032               	movf	_eusartRxHead^0,w,c
 11161   0022E2  0FA4               	addlw	low _eusartRxStatusBuffer
 11162   0022E4  6ED9               	movwf	fsr2l,c
 11163   0022E6  6ADA               	clrf	fsr2h,c
 11164   0022E8  0100               	movlb	0	; () banked
 11165   0022EA  84DF               	bsf	indf2,2,c
 11166   0022EC                     
 11167                           ; BSR set to: 0
 11168                           ;mcc_generated_files/eusart.c: 228:         EUSART_OverrunErrorHandler();
 11169   0022EC  D802               	call	i2u335_48
 11170   0022EE  EF82  F011         	goto	i2u335_49
 11171   0022F2                     i2u335_48:
 11172   0022F2  0005               	push	
 11173   0022F4  6EFA               	movwf	pclath,c
 11174   0022F6  51FA               	movf	_EUSART_OverrunErrorHandler& (0+255),w,b
 11175   0022F8  6EFD               	movwf	tosl,c
 11176   0022FA  51FB               	movf	(_EUSART_OverrunErrorHandler+1)& (0+255),w,b
 11177   0022FC  6EFE               	movwf	tosh,c
 11178   0022FE  6AFF               	clrf	tosu,c
 11179   002300  50FA               	movf	pclath,w,c
 11180   002302  0012               	return		;indir
 11181   002304                     i2u335_49:
 11182   002304                     i2l4808:
 11183                           
 11184                           ;mcc_generated_files/eusart.c: 231:     if(eusartRxStatusBuffer[eusartRxHead].status){
 11185   002304  5032               	movf	_eusartRxHead^0,w,c
 11186   002306  0FA4               	addlw	low _eusartRxStatusBuffer
 11187   002308  6ED9               	movwf	fsr2l,c
 11188   00230A  6ADA               	clrf	fsr2h,c
 11189   00230C  50DF               	movf	indf2,w,c
 11190   00230E  B4D8               	btfsc	status,2,c
 11191   002310  EF8C  F011         	goto	i2u336_41
 11192   002314  EF8E  F011         	goto	i2u336_40
 11193   002318                     i2u336_41:
 11194   002318  EF9D  F011         	goto	i2l4812
 11195   00231C                     i2u336_40:
 11196   00231C                     
 11197                           ;mcc_generated_files/eusart.c: 232:         EUSART_ErrorHandler();
 11198   00231C  D802               	call	i2u337_48
 11199   00231E  EF9B  F011         	goto	i2u337_49
 11200   002322                     i2u337_48:
 11201   002322  0005               	push	
 11202   002324  6EFA               	movwf	pclath,c
 11203   002326  0100               	movlb	0	; () banked
 11204   002328  51F8               	movf	_EUSART_ErrorHandler& (0+255),w,b
 11205   00232A  6EFD               	movwf	tosl,c
 11206   00232C  51F9               	movf	(_EUSART_ErrorHandler+1)& (0+255),w,b
 11207   00232E  6EFE               	movwf	tosh,c
 11208   002330  6AFF               	clrf	tosu,c
 11209   002332  50FA               	movf	pclath,w,c
 11210   002334  0012               	return		;indir
 11211   002336                     i2u337_49:
 11212                           
 11213                           ;mcc_generated_files/eusart.c: 233:     } else {
 11214   002336  EF9F  F011         	goto	i2l880
 11215   00233A                     i2l4812:
 11216                           
 11217                           ;mcc_generated_files/eusart.c: 234:         EUSART_RxDataHandler();
 11218   00233A  ECB0  F018         	call	_EUSART_RxDataHandler	;wreg free
 11219   00233E                     i2l880:
 11220   00233E  0012               	return		;funcret
 11221   002340                     __end_of_EUSART_Receive_ISR:
 11222                           	callstack 0
 11223                           
 11224 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 11225 ;; Defined at:
 11226 ;;		line 252 in file "mcc_generated_files/eusart.c"
 11227 ;; Parameters:    Size  Location     Type
 11228 ;;		None
 11229 ;; Auto vars:     Size  Location     Type
 11230 ;;		None
 11231 ;; Return value:  Size  Location     Type
 11232 ;;                  1    wreg      void 
 11233 ;; Registers used:
 11234 ;;		None
 11235 ;; Tracked objects:
 11236 ;;		On entry : 0/0
 11237 ;;		On exit  : 0/0
 11238 ;;		Unchanged: 0/0
 11239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11244 ;;Total ram usage:        0 bytes
 11245 ;; Hardware stack levels used: 1
 11246 ;; This function calls:
 11247 ;;		Nothing
 11248 ;; This function is called by:
 11249 ;;		_EUSART_Initialize
 11250 ;;		_EUSART_Receive_ISR
 11251 ;; This function uses a non-reentrant model
 11252 ;;
 11253                           
 11254                           	psect	text107
 11255   003442                     __ptext107:
 11256                           	callstack 0
 11257   003442                     _EUSART_DefaultOverrunErrorHandler:
 11258                           	callstack 21
 11259   003442                     
 11260                           ;mcc_generated_files/eusart.c: 255:     RCSTAbits.CREN = 0;
 11261   003442  98AB               	bcf	171,4,c	;volatile
 11262                           
 11263                           ;mcc_generated_files/eusart.c: 256:     RCSTAbits.CREN = 1;
 11264   003444  88AB               	bsf	171,4,c	;volatile
 11265   003446  0012               	return		;funcret
 11266   003448                     __end_of_EUSART_DefaultOverrunErrorHandler:
 11267                           	callstack 0
 11268                           
 11269 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 11270 ;; Defined at:
 11271 ;;		line 250 in file "mcc_generated_files/eusart.c"
 11272 ;; Parameters:    Size  Location     Type
 11273 ;;		None
 11274 ;; Auto vars:     Size  Location     Type
 11275 ;;		None
 11276 ;; Return value:  Size  Location     Type
 11277 ;;                  1    wreg      void 
 11278 ;; Registers used:
 11279 ;;		None
 11280 ;; Tracked objects:
 11281 ;;		On entry : 0/0
 11282 ;;		On exit  : 0/0
 11283 ;;		Unchanged: 0/0
 11284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11289 ;;Total ram usage:        0 bytes
 11290 ;; Hardware stack levels used: 1
 11291 ;; This function calls:
 11292 ;;		Nothing
 11293 ;; This function is called by:
 11294 ;;		_EUSART_Initialize
 11295 ;;		_EUSART_Receive_ISR
 11296 ;; This function uses a non-reentrant model
 11297 ;;
 11298                           
 11299                           	psect	text108
 11300   003488                     __ptext108:
 11301                           	callstack 0
 11302   003488                     _EUSART_DefaultFramingErrorHandler:
 11303                           	callstack 21
 11304   003488  0012               	return		;funcret
 11305   00348A                     __end_of_EUSART_DefaultFramingErrorHandler:
 11306                           	callstack 0
 11307                           
 11308 ;; *************** function _EUSART_DefaultErrorHandler *****************
 11309 ;; Defined at:
 11310 ;;		line 260 in file "mcc_generated_files/eusart.c"
 11311 ;; Parameters:    Size  Location     Type
 11312 ;;		None
 11313 ;; Auto vars:     Size  Location     Type
 11314 ;;		None
 11315 ;; Return value:  Size  Location     Type
 11316 ;;                  1    wreg      void 
 11317 ;; Registers used:
 11318 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11319 ;; Tracked objects:
 11320 ;;		On entry : 0/0
 11321 ;;		On exit  : 0/0
 11322 ;;		Unchanged: 0/0
 11323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11328 ;;Total ram usage:        0 bytes
 11329 ;; Hardware stack levels used: 1
 11330 ;; Hardware stack levels required when called: 1
 11331 ;; This function calls:
 11332 ;;		_EUSART_RxDataHandler
 11333 ;; This function is called by:
 11334 ;;		_EUSART_Initialize
 11335 ;;		_EUSART_Receive_ISR
 11336 ;; This function uses a non-reentrant model
 11337 ;;
 11338                           
 11339                           	psect	text109
 11340   003448                     __ptext109:
 11341                           	callstack 0
 11342   003448                     _EUSART_DefaultErrorHandler:
 11343                           	callstack 20
 11344   003448                     
 11345                           ;mcc_generated_files/eusart.c: 261:     EUSART_RxDataHandler();
 11346   003448  ECB0  F018         	call	_EUSART_RxDataHandler	;wreg free
 11347   00344C  0012               	return		;funcret
 11348   00344E                     __end_of_EUSART_DefaultErrorHandler:
 11349                           	callstack 0
 11350                           
 11351 ;; *************** function _EUSART_RxDataHandler *****************
 11352 ;; Defined at:
 11353 ;;		line 240 in file "mcc_generated_files/eusart.c"
 11354 ;; Parameters:    Size  Location     Type
 11355 ;;		None
 11356 ;; Auto vars:     Size  Location     Type
 11357 ;;		None
 11358 ;; Return value:  Size  Location     Type
 11359 ;;                  1    wreg      void 
 11360 ;; Registers used:
 11361 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11362 ;; Tracked objects:
 11363 ;;		On entry : 0/0
 11364 ;;		On exit  : 0/0
 11365 ;;		Unchanged: 0/0
 11366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11371 ;;Total ram usage:        0 bytes
 11372 ;; Hardware stack levels used: 1
 11373 ;; This function calls:
 11374 ;;		Nothing
 11375 ;; This function is called by:
 11376 ;;		_EUSART_Receive_ISR
 11377 ;;		_EUSART_DefaultErrorHandler
 11378 ;; This function uses a non-reentrant model
 11379 ;;
 11380                           
 11381                           	psect	text110
 11382   003160                     __ptext110:
 11383                           	callstack 0
 11384   003160                     _EUSART_RxDataHandler:
 11385                           	callstack 21
 11386   003160                     
 11387                           ;mcc_generated_files/eusart.c: 242:     eusartRxBuffer[eusartRxHead++] = RCREG;
 11388   003160  5032               	movf	_eusartRxHead^0,w,c
 11389   003162  0FAC               	addlw	low _eusartRxBuffer
 11390   003164  6ED9               	movwf	fsr2l,c
 11391   003166  6ADA               	clrf	fsr2h,c
 11392   003168  CFAE FFDF          	movff	4014,indf2	;volatile
 11393   00316C  2A32               	incf	_eusartRxHead^0,f,c	;volatile
 11394   00316E                     
 11395                           ;mcc_generated_files/eusart.c: 243:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 11396   00316E  0E07               	movlw	7
 11397   003170  6432               	cpfsgt	_eusartRxHead^0,c	;volatile
 11398   003172  EFBD  F018         	goto	i2u237_41
 11399   003176  EFBF  F018         	goto	i2u237_40
 11400   00317A                     i2u237_41:
 11401   00317A  EFC1  F018         	goto	i2l4086
 11402   00317E                     i2u237_40:
 11403   00317E                     
 11404                           ;mcc_generated_files/eusart.c: 244:     {;mcc_generated_files/eusart.c: 245:         eus
      +                          artRxHead = 0;
 11405   00317E  0E00               	movlw	0
 11406   003180  6E32               	movwf	_eusartRxHead^0,c	;volatile
 11407   003182                     i2l4086:
 11408                           
 11409                           ;mcc_generated_files/eusart.c: 247:     eusartRxCount++;
 11410   003182  2A30               	incf	_eusartRxCount^0,f,c	;volatile
 11411   003184  0012               	return		;funcret
 11412   003186                     __end_of_EUSART_RxDataHandler:
 11413                           	callstack 0
 11414                           
 11415 ;; *************** function _ADC_ISR *****************
 11416 ;; Defined at:
 11417 ;;		line 140 in file "mcc_generated_files/adc.c"
 11418 ;; Parameters:    Size  Location     Type
 11419 ;;		None
 11420 ;; Auto vars:     Size  Location     Type
 11421 ;;		None
 11422 ;; Return value:  Size  Location     Type
 11423 ;;                  1    wreg      void 
 11424 ;; Registers used:
 11425 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11426 ;; Tracked objects:
 11427 ;;		On entry : 0/0
 11428 ;;		On exit  : 0/0
 11429 ;;		Unchanged: 0/0
 11430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11435 ;;Total ram usage:        0 bytes
 11436 ;; Hardware stack levels used: 1
 11437 ;; Hardware stack levels required when called: 1
 11438 ;; This function calls:
 11439 ;;		NULL
 11440 ;;		_ADC_DefaultInterruptHandler
 11441 ;; This function is called by:
 11442 ;;		_INTERRUPT_InterruptManager
 11443 ;; This function uses a non-reentrant model
 11444 ;;
 11445                           
 11446                           	psect	text111
 11447   003056                     __ptext111:
 11448                           	callstack 0
 11449   003056                     _ADC_ISR:
 11450                           	callstack 21
 11451   003056                     
 11452                           ;mcc_generated_files/adc.c: 143:     PIR1bits.ADIF = 0;
 11453   003056  9C9E               	bcf	158,6,c	;volatile
 11454   003058                     
 11455                           ;mcc_generated_files/adc.c: 145:  if(ADC_InterruptHandler)
 11456   003058  5040               	movf	_ADC_InterruptHandler^0,w,c
 11457   00305A  1041               	iorwf	(_ADC_InterruptHandler+1)^0,w,c
 11458   00305C  B4D8               	btfsc	status,2,c
 11459   00305E  EF33  F018         	goto	i2u328_41
 11460   003062  EF35  F018         	goto	i2u328_40
 11461   003066                     i2u328_41:
 11462   003066  EF41  F018         	goto	i2l758
 11463   00306A                     i2u328_40:
 11464   00306A                     
 11465                           ;mcc_generated_files/adc.c: 146:     {;mcc_generated_files/adc.c: 147:         ADC_Inter
      +                          ruptHandler();
 11466   00306A  D802               	call	i2u329_48
 11467   00306C  EF41  F018         	goto	i2u329_49
 11468   003070                     i2u329_48:
 11469   003070  0005               	push	
 11470   003072  6EFA               	movwf	pclath,c
 11471   003074  5040               	movf	_ADC_InterruptHandler^0,w,c
 11472   003076  6EFD               	movwf	tosl,c
 11473   003078  5041               	movf	(_ADC_InterruptHandler+1)^0,w,c
 11474   00307A  6EFE               	movwf	tosh,c
 11475   00307C  6AFF               	clrf	tosu,c
 11476   00307E  50FA               	movf	pclath,w,c
 11477   003080  0012               	return		;indir
 11478   003082                     i2u329_49:
 11479   003082                     i2l758:
 11480   003082  0012               	return		;funcret
 11481   003084                     __end_of_ADC_ISR:
 11482                           	callstack 0
 11483                           
 11484 ;; *************** function _ADC_DefaultInterruptHandler *****************
 11485 ;; Defined at:
 11486 ;;		line 155 in file "mcc_generated_files/adc.c"
 11487 ;; Parameters:    Size  Location     Type
 11488 ;;		None
 11489 ;; Auto vars:     Size  Location     Type
 11490 ;;		None
 11491 ;; Return value:  Size  Location     Type
 11492 ;;                  1    wreg      void 
 11493 ;; Registers used:
 11494 ;;		None
 11495 ;; Tracked objects:
 11496 ;;		On entry : 0/0
 11497 ;;		On exit  : 0/0
 11498 ;;		Unchanged: 0/0
 11499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11504 ;;Total ram usage:        0 bytes
 11505 ;; Hardware stack levels used: 1
 11506 ;; This function calls:
 11507 ;;		Nothing
 11508 ;; This function is called by:
 11509 ;;		_ADC_Initialize
 11510 ;;		_ADC_ISR
 11511 ;; This function uses a non-reentrant model
 11512 ;;
 11513                           
 11514                           	psect	text112
 11515   00348A                     __ptext112:
 11516                           	callstack 0
 11517   00348A                     _ADC_DefaultInterruptHandler:
 11518                           	callstack 21
 11519   00348A  0012               	return		;funcret
 11520   00348C                     __end_of_ADC_DefaultInterruptHandler:
 11521                           	callstack 0
 11522                           
 11523                           	psect	text113
 11524   000000                     __ptext113:
 11525                           	callstack 0
 11526   000000                     
 11527                           	psect	rparam
 11528   000000                     
 11529                           	psect	temp
 11530   000044                     btemp:
 11531                           	callstack 0
 11532   000044                     	ds	1
 11533   000000                     int$flags	set	btemp
 11534   000000                     wtemp8	set	btemp+1
 11535   000000                     ttemp5	set	btemp+1
 11536   000000                     ttemp6	set	btemp+4
 11537   000000                     ttemp7	set	btemp+8
 11538                           
 11539                           	psect	config
 11540                           
 11541                           ; Padding undefined space
 11542   300000                     	org	3145728
 11543   300000  FF                 	db	255
 11544                           
 11545                           ;Config register CONFIG1H @ 0x300001
 11546                           ;	Oscillator Selection bits
 11547                           ;	FOSC = HS, HS oscillator
 11548                           ;	Fail-Safe Clock Monitor Enable bit
 11549                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 11550                           ;	Internal/External Oscillator Switchover bit
 11551                           ;	IESO = OFF, Oscillator Switchover mode disabled
 11552   300001                     	org	3145729
 11553   300001  02                 	db	2
 11554                           
 11555                           ;Config register CONFIG2L @ 0x300002
 11556                           ;	Power-up Timer Enable bit
 11557                           ;	PWRTEN = OFF, PWRT disabled
 11558                           ;	Brown-out Reset Enable bits
 11559                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 11560                           ;	Brown Out Reset Voltage bits
 11561                           ;	BORV = 18, VBOR set to 1.8 V nominal
 11562   300002                     	org	3145730
 11563   300002  1F                 	db	31
 11564                           
 11565                           ;Config register CONFIG2H @ 0x300003
 11566                           ;	Watchdog Timer Enable bit
 11567                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
 11568                           ;	Watchdog Timer Postscale Select bits
 11569                           ;	WDTPS = 32768, 1:32768
 11570   300003                     	org	3145731
 11571   300003  1E                 	db	30
 11572                           
 11573                           ; Padding undefined space
 11574   300004                     	org	3145732
 11575   300004  FF                 	db	255
 11576                           
 11577                           ;Config register CONFIG3H @ 0x300005
 11578                           ;	CCP2 MUX bit
 11579                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 11580                           ;	PORTB A/D Enable bit
 11581                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
 11582                           ;	Low-Power Timer1 Oscillator Enable bit
 11583                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 11584                           ;	HFINTOSC Fast Start-up
 11585                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
 11586                           ;	MCLR Pin Enable bit
 11587                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 11588   300005                     	org	3145733
 11589   300005  8B                 	db	139
 11590                           
 11591                           ;Config register CONFIG4L @ 0x300006
 11592                           ;	Stack Full/Underflow Reset Enable bit
 11593                           ;	STVREN = ON, Stack full/underflow will cause Reset
 11594                           ;	Single-Supply ICSP Enable bit
 11595                           ;	LVP = ON, Single-Supply ICSP enabled
 11596                           ;	Extended Instruction Set Enable bit
 11597                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 11598                           ;	Background Debugger Enable bit
 11599                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
 11600   300006                     	org	3145734
 11601   300006  85                 	db	133
 11602                           
 11603                           ; Padding undefined space
 11604   300007                     	org	3145735
 11605   300007  FF                 	db	255
 11606                           
 11607                           ;Config register CONFIG5L @ 0x300008
 11608                           ;	Code Protection Block 0
 11609                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 11610                           ;	Code Protection Block 1
 11611                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 11612                           ;	Code Protection Block 2
 11613                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 11614                           ;	Code Protection Block 3
 11615                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 11616   300008                     	org	3145736
 11617   300008  0F                 	db	15
 11618                           
 11619                           ;Config register CONFIG5H @ 0x300009
 11620                           ;	Boot Block Code Protection bit
 11621                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 11622                           ;	Data EEPROM Code Protection bit
 11623                           ;	CPD = OFF, Data EEPROM not code-protected
 11624   300009                     	org	3145737
 11625   300009  C0                 	db	192
 11626                           
 11627                           ;Config register CONFIG6L @ 0x30000A
 11628                           ;	Write Protection Block 0
 11629                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 11630                           ;	Write Protection Block 1
 11631                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 11632                           ;	Write Protection Block 2
 11633                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 11634                           ;	Write Protection Block 3
 11635                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
 11636   30000A                     	org	3145738
 11637   30000A  0F                 	db	15
 11638                           
 11639                           ;Config register CONFIG6H @ 0x30000B
 11640                           ;	Configuration Register Write Protection bit
 11641                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 11642                           ;	Boot Block Write Protection bit
 11643                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 11644                           ;	Data EEPROM Write Protection bit
 11645                           ;	WRTD = OFF, Data EEPROM not write-protected
 11646   30000B                     	org	3145739
 11647   30000B  E0                 	db	224
 11648                           
 11649                           ;Config register CONFIG7L @ 0x30000C
 11650                           ;	Table Read Protection Block 0
 11651                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 11652                           ;	Table Read Protection Block 1
 11653                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 11654                           ;	Table Read Protection Block 2
 11655                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 11656                           ;	Table Read Protection Block 3
 11657                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 11658   30000C                     	org	3145740
 11659   30000C  0F                 	db	15
 11660                           
 11661                           ;Config register CONFIG7H @ 0x30000D
 11662                           ;	Boot Block Table Read Protection bit
 11663                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 11664   30000D                     	org	3145741
 11665   30000D  40                 	db	64
 11666                           tosu	equ	0xFFF
 11667                           tosh	equ	0xFFE
 11668                           tosl	equ	0xFFD
 11669                           stkptr	equ	0xFFC
 11670                           pclatu	equ	0xFFB
 11671                           pclath	equ	0xFFA
 11672                           pcl	equ	0xFF9
 11673                           tblptru	equ	0xFF8
 11674                           tblptrh	equ	0xFF7
 11675                           tblptrl	equ	0xFF6
 11676                           tablat	equ	0xFF5
 11677                           prodh	equ	0xFF4
 11678                           prodl	equ	0xFF3
 11679                           indf0	equ	0xFEF
 11680                           postinc0	equ	0xFEE
 11681                           postdec0	equ	0xFED
 11682                           preinc0	equ	0xFEC
 11683                           plusw0	equ	0xFEB
 11684                           fsr0h	equ	0xFEA
 11685                           fsr0l	equ	0xFE9
 11686                           wreg	equ	0xFE8
 11687                           indf1	equ	0xFE7
 11688                           postinc1	equ	0xFE6
 11689                           postdec1	equ	0xFE5
 11690                           preinc1	equ	0xFE4
 11691                           plusw1	equ	0xFE3
 11692                           fsr1h	equ	0xFE2
 11693                           fsr1l	equ	0xFE1
 11694                           bsr	equ	0xFE0
 11695                           indf2	equ	0xFDF
 11696                           postinc2	equ	0xFDE
 11697                           postdec2	equ	0xFDD
 11698                           preinc2	equ	0xFDC
 11699                           plusw2	equ	0xFDB
 11700                           fsr2h	equ	0xFDA
 11701                           fsr2l	equ	0xFD9
 11702                           status	equ	0xFD8

Data Sizes:
    Strings     90
    Constant    32
    Data        0
    BSS         143
    Persistent  12
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     39      67
    BANK0           160     33     160
    BANK1           256     21      21
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), NULL(), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    bufferBlock$data	PTR unsigned char  size(2) Largest target is 0

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    convert_uint8_to_string@str	PTR unsigned char  size(1) Largest target is 4
		 -> value_array(BANK0[4]), value_array@LDR$F189(BANK0[4]), value_array@TC74$F213(BANK0[4]), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), NULL(), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    I2C_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_DO_RX$2929	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    I2C_DO_RX$2929$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_DO_RX$2934	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_DO_RX_EMPTY$2941$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_DO_TX$2923	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    I2C_DO_TX$2923$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_DO_TX$2928	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_DO_TX_EMPTY$2935	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    I2C_DO_TX_EMPTY$2935$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_DO_TX_EMPTY$2940	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    i2c_fsmStateTable	const PTR FTN()enum E3134[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_IDLE(), I2C_DO_RCEN(), I2C_DO_RESET(), 
		 -> I2C_DO_RX(), I2C_DO_RX_ACK(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_SEND_ADR_READ(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_READ(), 
		 -> I2C_DO_SEND_RESTART_WRITE(), I2C_DO_SEND_STOP(), I2C_DO_TX(), I2C_DO_TX_EMPTY(), 

    I2C_MasterFsm$2922	const PTR FTN()enum E3134 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_IDLE(), I2C_DO_RCEN(), I2C_DO_RESET(), 
		 -> I2C_DO_RX(), I2C_DO_RX_ACK(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_SEND_ADR_READ(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_READ(), 
		 -> I2C_DO_SEND_RESTART_WRITE(), I2C_DO_SEND_STOP(), I2C_DO_TX(), I2C_DO_TX_EMPTY(), 

    I2C_Read1ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C_Read2ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetBuffer@buffer	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_ReadDataBlock@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Write1ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write2ByteRegister@reg(COMRAM[1]), NULL(NULL[0]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd2RegCompleteHandler(), rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), NULL(), 

    I2C_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd2RegCompleteHandler(), rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), NULL(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_MasterIsr(), 

    I2C_Status$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_Status$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    I2C_Status$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> bufferBlock$data(COMRAM[3]), I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read1ByteRegister@returnValue$data(COMRAM[3]), 
		 -> I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_Read2ByteRegister@returnValue$data(COMRAM[3]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), 
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Write1ByteRegister@data$data(COMRAM[3]), I2C_Write1ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write2ByteRegister@data$data(COMRAM[3]), I2C_Write2ByteRegister@reg(COMRAM[1]), NULL(NULL[0]), 

    I2C_Write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    lcd_4bits_send_string_data_pos@str	PTR unsigned char  size(2) Largest target is 15
		 -> STR_5(CODE[15]), STR_6(CODE[8]), STR_7(CODE[10]), STR_8(CODE[9]), 
		 -> value_array(BANK0[4]), value_array@LDR$F189(BANK0[4]), value_array@TC74$F213(BANK0[4]), 

    memset@dest	PTR void  size(1) Largest target is 4
		 -> value_array(BANK0[4]), value_array@LDR$F189(BANK0[4]), value_array@TC74$F213(BANK0[4]), 

    memset@p	PTR unsigned char  size(1) Largest target is 4
		 -> value_array(BANK0[4]), value_array@LDR$F189(BANK0[4]), value_array@TC74$F213(BANK0[4]), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_MasterIsr(), NULL(), 

    NULL$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    rd1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    rd2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@ptr$data	PTR unsigned char  size(2) Largest target is 0

    S2493$buffer	PTR unsigned char  size(2) Largest target is 0

    S2493$source	PTR const unsigned char  size(2) Largest target is 0

    S308$data	PTR unsigned char  size(2) Largest target is 0

    S811$0$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    S811$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    S811$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    S811$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_ReadDataBlock@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Write1ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write2ByteRegister@reg(COMRAM[1]), NULL(NULL[0]), 

    Send_String@str	PTR unsigned char  size(2) Largest target is 18
		 -> brightness_array(COMRAM[5]), moist_array(COMRAM[5]), STR_2(CODE[9]), STR_3(CODE[10]), 
		 -> STR_4(CODE[8]), STR_9(CODE[18]), temp_array(BANK0[6]), 

    sp__memset	PTR void  size(1) Largest target is 4
		 -> value_array(BANK0[4]), value_array@LDR$F189(BANK0[4]), value_array@TC74$F213(BANK0[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 4
		 -> convert_uint8_to_string@TempStr(BANK1[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    wr1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    wr2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _uart_draw_borders->_Send_String
    _read_HS1101_moist_percent->___flmul
    _print_temp_uart->___awdiv
    _print_bright_uart->___awdiv
    _print_HS1101_uart->___awdiv
    _Send_String->_EUSART_Write
    _lcd_4bits_send_string_data_pos->_lcd_4bits_pos
    _lcd_4bits_send_char_data_pos->_lcd_4bits_pos
    _lcd_4bits_send_char_data->_lcd_send_4bits
    _lcd_4bits_pos->_lcd_4bits_send_command
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _SYSTEM_Initialize->_lcd_4bits_initialize
    _lcd_4bits_initialize->_lcd_4bits_send_command
    _lcd_4bits_send_command->_lcd_send_4bits
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _ADC_Initialize->_ADC_SetInterruptHandler
    _Read_TC74->_I2C_Read1ByteRegister
    _I2C_Read1ByteRegister->_I2C_SetAddressNackCallback
    _I2C_Read1ByteRegister->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_Open->_I2C_SetInterruptHandler
    _I2C_MasterWrite->_I2C_MasterOperation
    _LDR_reading->___flmul
    ___fltol->___flmul
    ___flsub->___fladd
    ___flsub->___flmul
    ___flmul->___xxtofl

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _I2C_MasterIsr->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _wr2RegCompleteHandler->i2_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->i2_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->i2_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->i2_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->i2_I2C_SetDataCompleteCallback
    i2_I2C_SetDataCompleteCallback->i2_I2C_SetCallback

Critical Paths under _main in BANK0

    _main->_print_HS1101_LCD
    _main->_print_bright_LCD
    _main->_print_temp_LCD
    _read_HS1101_moist_percent->___fltol
    _print_temp_LCD->_convert_uint8_to_string
    _print_bright_LCD->_convert_uint8_to_string
    _print_HS1101_LCD->_convert_uint8_to_string
    _convert_uint8_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _LDR_reading->___fltol
    ___fltol->___flmul
    ___flsub->___flmul
    ___flmul->___xxtofl

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_LDR_reading
    _read_HS1101_moist_percent->___fltol
    _print_temp_LCD->_convert_uint8_to_string
    _print_bright_LCD->_convert_uint8_to_string
    _print_HS1101_LCD->_convert_uint8_to_string
    _LDR_reading->___fltol
    ___fltol->___flsub

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   86211
                                             19 BANK1      2     2      0
                        _LDR_reading
                          _Read_TC74
                  _SYSTEM_Initialize
             _lcd_4bits_send_command
     _lcd_4bits_send_string_data_pos
                   _print_HS1101_LCD
                  _print_HS1101_uart
                   _print_bright_LCD
                  _print_bright_uart
                     _print_temp_LCD
                    _print_temp_uart
          _read_HS1101_moist_percent
                  _uart_draw_borders
 ---------------------------------------------------------------------------------
 (1) _uart_draw_borders                                    0     0      0    1178
                        _Send_String
 ---------------------------------------------------------------------------------
 (1) _read_HS1101_moist_percent                            5     3      2    7826
                                             12 BANK1      5     3      2
                  _ADC_GetConversion
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _print_temp_uart                                      1     1      0    4872
                                             35 COMRAM     1     1      0
                        _Send_String
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _print_temp_LCD                                       3     1      2   14326
                                             32 BANK0      1     1      0
                                              6 BANK1      2     0      2
            _convert_uint8_to_string
       _lcd_4bits_send_char_data_pos
     _lcd_4bits_send_string_data_pos
 ---------------------------------------------------------------------------------
 (1) _print_bright_uart                                    1     1      0    4872
                                             35 COMRAM     1     1      0
                        _Send_String
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _print_bright_LCD                                     3     1      2   14326
                                             32 BANK0      1     1      0
                                              6 BANK1      2     0      2
            _convert_uint8_to_string
       _lcd_4bits_send_char_data_pos
     _lcd_4bits_send_string_data_pos
 ---------------------------------------------------------------------------------
 (1) _print_HS1101_uart                                    1     1      0    4872
                                             35 COMRAM     1     1      0
                        _Send_String
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _Send_String                                          4     1      3    1178
                                             28 COMRAM     4     1      3
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      44
                                             27 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _print_HS1101_LCD                                     3     1      2   14326
                                             32 BANK0      1     1      0
                                              6 BANK1      2     0      2
            _convert_uint8_to_string
       _lcd_4bits_send_char_data_pos
     _lcd_4bits_send_string_data_pos
 ---------------------------------------------------------------------------------
 (2) _lcd_4bits_send_string_data_pos                       4     0      4    3332
                                             34 COMRAM     4     0      4
                      _lcd_4bits_pos
           _lcd_4bits_send_char_data
 ---------------------------------------------------------------------------------
 (2) _lcd_4bits_send_char_data_pos                         3     1      2    1694
                                             34 COMRAM     3     1      2
                      _lcd_4bits_pos
           _lcd_4bits_send_char_data
 ---------------------------------------------------------------------------------
 (3) _lcd_4bits_send_char_data                             1     1      0     252
                                             29 COMRAM     1     1      0
              _lcd_4bits_send_enable
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (3) _lcd_4bits_pos                                        4     3      1     680
                                             30 COMRAM     4     3      1
             _lcd_4bits_send_command
 ---------------------------------------------------------------------------------
 (2) _convert_uint8_to_string                              7     6      1    8878
                                             31 BANK0      1     0      1
                                              0 BANK1      6     6      0
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             20    15      5    7580
                                             13 BANK0     18    13      5
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             4     1      3    6922
                                             38 COMRAM     1     1      0
                                             10 BANK0      3     0      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           11     8      3    6322
                                             37 COMRAM     1     1      0
                                              0 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                8     5      3    1160
                                             27 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     232
                                             33 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    1454
                                             27 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    2114
                                             27 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _memset                                               6     1      5     506
                                             27 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     840
                     _ADC_Initialize
                  _EUSART_Initialize
                     _I2C_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
               _lcd_4bits_initialize
 ---------------------------------------------------------------------------------
 (2) _lcd_4bits_initialize                                 1     1      0     252
                                             30 COMRAM     1     1      0
             _lcd_4bits_send_command
 ---------------------------------------------------------------------------------
 (4) _lcd_4bits_send_command                               1     1      0     252
                                             29 COMRAM     1     1      0
              _lcd_4bits_send_enable
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       2     2      0     168
                                             27 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _lcd_4bits_send_enable                                1     1      0       0
                                             27 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     490
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                             27 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                             27 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                             27 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                             27 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                             27 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0      98
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADC_SetInterruptHandler                              2     0      2      98
                                             27 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Read_TC74                                            2     2      0    7363
                                              0 BANK0      2     2      0
              _I2C_Read1ByteRegister
 ---------------------------------------------------------------------------------
 (2) _I2C_Read1ByteRegister                                3     2      1    7295
                                             36 COMRAM     3     2      1
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_SetDataCompleteCallback                          4     0      4    2629
                                             32 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_SetBuffer                                        4     0      4    1872
                                             27 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _I2C_SetAddressNackCallback                           4     0      4    2259
                                             32 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (4) _I2C_SetCallback                                      5     1      4    1117
                                             27 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _I2C_Open                                             2     2      0     189
                                             29 COMRAM     2     2      0
                 _I2C_MasterClearIrq
                _I2C_MasterEnableIrq
                     _I2C_MasterOpen
            _I2C_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _I2C_SetInterruptHandler                              2     0      2     121
                                             27 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterEnableIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterWrite                                      0     0      0      68
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterOperation                                  2     2      0      68
                                             27 COMRAM     2     2      0
                    _I2C_MasterStart
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Close                                            1     1      0      37
                                             27 COMRAM     1     1      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LDR_reading                                          7     5      2    7826
                                             12 BANK1      7     5      2
                  _ADC_GetConversion
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     656
                                             27 COMRAM     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     517
                                             27 BANK0      6     2      4
                                              8 BANK1      4     4      0
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3827
                                              0 BANK1      8     0      8
                            ___fladd
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    3262
                                             27 COMRAM    12     4      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2693
                                             35 COMRAM     4     4      0
                                              6 BANK0     21    13      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    5     3      2      31
                                             27 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManager                          10    10      0   17934
                                             17 COMRAM    10    10      0
                                NULL *
                            _ADC_ISR
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                      _I2C_MasterIsr *
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterIsr                                        0     0      0   17934
                      _I2C_MasterFsm
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterFsm                                       3     3      0   17934
                                             14 COMRAM     3     3      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                   _I2C_MasterIsNack
               i2_I2C_MasterClearIrq
 ---------------------------------------------------------------------------------
 (11) i2_I2C_MasterClearIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_TX_EMPTY                                     2     2      0    4467
                                             12 COMRAM     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterSetIrq                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_TX                                           2     2      0    4489
                                             12 COMRAM     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterIsNack                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_SEND_RESTART_WRITE                           0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_SEND_RESTART_READ                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_SEND_ADR_WRITE                               0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_SEND_ADR_READ                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterSendTxData                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_RX_ACK                                       0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_RX                                           2     2      0    4467
                                             12 COMRAM     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterSendAck                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterGetRxData                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_RX_NACK_STOP                                 0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_RX_NACK_RESTART                              0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterSendNack                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_RESET                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_RCEN                                         0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterStartRx                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_ADDRESS_NACK                                 2     2      0    4467
                                             12 COMRAM     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (12) _wr2RegCompleteHandler                               2     0      2     836
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (12) _wr1RegCompleteHandler                               2     0      2     836
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (12) _rdBlkRegCompleteHandler                             3     1      2     858
                                              9 COMRAM     3     1      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (12) _rd2RegCompleteHandler                               2     0      2     836
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (12) _rd1RegCompleteHandler                               2     0      2     836
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (13) i2_I2C_SetDataCompleteCallback                       4     0      4     510
                                              5 COMRAM     4     0      4
                  i2_I2C_SetCallback
 ---------------------------------------------------------------------------------
 (14) i2_I2C_SetCallback                                   5     1      4     206
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (13) i2_I2C_SetBuffer                                     4     0      4     304
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_SEND_STOP                                    0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (13) _I2C_MasterStop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_SEND_RESTART                                 0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (13) _I2C_MasterEnableRestart                             0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_CallbackReturnStop                              2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _I2C_CallbackReturnReset                             2     0      2     265
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) _EUSART_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART_Receive_ISR                                   0     0      0       0
                                NULL *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (10) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (10) _EUSART_RxDataHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _ADC_ISR                                              0     0      0       0
                                NULL *
        _ADC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _ADC_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) NULL(Fake)                                           2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LDR_reading
     _ADC_GetConversion
     ___flmul
       ___xxtofl (ARG)
     ___flsub
       ___fladd
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       ___flsub (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _Read_TC74
     _I2C_Read1ByteRegister
       _I2C_Close
         _I2C_MasterClearIrq
         _I2C_MasterClose
         _I2C_MasterDisableIrq
       _I2C_MasterWrite
         _I2C_MasterOperation
           _I2C_MasterStart
       _I2C_Open
         _I2C_MasterClearIrq
         _I2C_MasterEnableIrq
         _I2C_MasterOpen
         _I2C_SetInterruptHandler
       _I2C_SetAddressNackCallback
         _I2C_SetCallback
       _I2C_SetBuffer
       _I2C_SetDataCompleteCallback
         _I2C_SetCallback
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _I2C_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _lcd_4bits_initialize
       _lcd_4bits_send_command
         _lcd_4bits_send_enable
         _lcd_send_4bits
   _lcd_4bits_send_command
   _lcd_4bits_send_string_data_pos
     _lcd_4bits_pos
       _lcd_4bits_send_command
     _lcd_4bits_send_char_data
       _lcd_4bits_send_enable
       _lcd_send_4bits
   _print_HS1101_LCD
     _convert_uint8_to_string
       _memset
       _sprintf
         _vfprintf
           _vfpfcnvrt
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _fputc
               _putch
     _lcd_4bits_send_char_data_pos
       _lcd_4bits_pos
       _lcd_4bits_send_char_data
     _lcd_4bits_send_string_data_pos
   _print_HS1101_uart
     _Send_String
       _EUSART_Write
     ___awdiv
     ___awmod
   _print_bright_LCD
     _convert_uint8_to_string
     _lcd_4bits_send_char_data_pos
     _lcd_4bits_send_string_data_pos
   _print_bright_uart
     _Send_String
     ___awdiv
     ___awmod
   _print_temp_LCD
     _convert_uint8_to_string
     _lcd_4bits_send_char_data_pos
     _lcd_4bits_send_string_data_pos
   _print_temp_uart
     _Send_String
     ___awdiv
     ___awmod
   _read_HS1101_moist_percent
     _ADC_GetConversion
     ___flmul
     ___flsub
     ___fltol
     ___xxtofl
   _uart_draw_borders
     _Send_String

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _ADC_ISR *
     NULL(Fake) *
     _ADC_DefaultInterruptHandler *
   _EUSART_Receive_ISR *
     NULL(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _I2C_MasterIsr *
     _I2C_MasterFsm
       _I2C_DO_ADDRESS_NACK *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
           _I2C_MasterEnableRestart
         _I2C_DO_SEND_STOP *
           _I2C_MasterStop
         _rd1RegCompleteHandler *
           i2_I2C_SetBuffer
           i2_I2C_SetDataCompleteCallback
             i2_I2C_SetCallback
         _rd2RegCompleteHandler *
           i2_I2C_SetBuffer
           i2_I2C_SetDataCompleteCallback
         _rdBlkRegCompleteHandler *
           i2_I2C_SetBuffer
           i2_I2C_SetDataCompleteCallback
         _wr1RegCompleteHandler *
           i2_I2C_SetBuffer
           i2_I2C_SetDataCompleteCallback
         _wr2RegCompleteHandler *
           i2_I2C_SetBuffer
           i2_I2C_SetDataCompleteCallback
       _I2C_DO_IDLE *
       _I2C_DO_RCEN *
         _I2C_MasterStartRx
       _I2C_DO_RESET *
       _I2C_DO_RX *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_RX_NACK_RESTART *
           _I2C_MasterSendNack
         _I2C_DO_RX_NACK_STOP *
           _I2C_MasterSendNack
         _I2C_MasterGetRxData *
         _I2C_MasterSendAck *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_RX_ACK *
         _I2C_MasterSendAck
       _I2C_DO_RX_NACK_RESTART *
       _I2C_DO_RX_NACK_STOP *
       _I2C_DO_SEND_ADR_READ *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_ADR_WRITE *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_RESTART *
       _I2C_DO_SEND_RESTART_READ *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_RESTART_WRITE *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_STOP *
       _I2C_DO_TX *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART_READ *
         _I2C_DO_SEND_RESTART_WRITE *
         _I2C_DO_SEND_STOP *
         _I2C_MasterIsNack *
         _I2C_MasterSendTxData *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_TX_EMPTY *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
         _I2C_DO_SEND_STOP *
         _I2C_MasterSetIrq *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_MasterIsNack *
       i2_I2C_MasterClearIrq *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      51        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     15      15       7        8.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     21      A0       5      100.0%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     27      43       1       71.3%
BITBIGSFRhhlh       1D      0       0      37        0.0%
BITBIGSFRllll       1C      0       0      49        0.0%
BITBIGSFRhhh         D      0       0      36        0.0%
BITBIGSFRllh         9      0       0      47        0.0%
BITBIGSFRhlhhll      9      0       0      42        0.0%
BITBIGSFRhlhhll      7      0       0      41        0.0%
BITBIGSFRhlhhll      7      0       0      40        0.0%
BITBIGSFRhlhhh       6      0       0      39        0.0%
BITBIGSFRhlllh       4      0       0      45        0.0%
BITBIGSFRhlllll      4      0       0      46        0.0%
BITBIGSFRhhll        2      0       0      38        0.0%
BITBIGSFRlllh        1      0       0      48        0.0%
BITBIGSFRhllh        1      0       0      44        0.0%
BITBIGSFRhlhl        1      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F8      50        0.0%
DATA                 0      0      F8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Jan 02 17:04:07 2024

                ?_EUSART_SetRxInterruptHandler 001C                         ??_I2C_DO_SEND_ADR_READ 0001  
                              ?_print_temp_LCD 0106                                ?_lcd_send_4bits 0001  
                      ??_I2C_DO_SEND_ADR_WRITE 0002                                    _SSPSTATbits 0FC7  
                                           l21 2CBA                                             l31 326E  
                                           l24 3272                                             l40 332A  
                                           l26 328A                                             l52 3302  
                                           l29 3256                                             l46 2B28  
                                           l56 3316                                             l49 29DE  
                                           l73 265C                                             l65 28FA  
                                           l92 25C4                                             l96 280A  
                                           l99 2FBE                                   ___awdiv@sign 0021  
                        ??_I2C_DO_SEND_RESTART 0001                               ?_print_temp_uart 0001  
                                          l122 277E                                            l125 2F88  
                                          l118 23E6                                            l151 2F52  
                                          l144 32A2                                            l161 2D58  
                            Send_String@length 001F                                            l331 33A0  
                                          l148 26F2                                            l440 333E  
                                          l328 3252                                            l612 3460  
                                          l460 33EE                                            l444 252A  
                                          l196 2A4E                                            l630 3458  
                                          l454 2EA6                                            l470 32BA  
                                          l703 3024                                            l448 30AE  
                                          l288 3450                                            l609 3234  
                                          l490 2B8E                                            l651 3454  
                                          l467 31CC                                            l660 3464  
                                          l476 32D2                                            l485 33E6  
                                          l733 31A8                                            l902 33D2  
                                          l751 2F1C                                            l657 345C  
                                          l761 33DC                                            l905 33AA  
                                          l748 2EFC                                            l908 33B4  
                                          l839 296E                                            l863 2CCE  
                                          l864 2CE4                                            l961 1E16  
                                          l970 1E34                                            l867 2D0C  
                                          l972 1E36                                            l981 1E6C  
                                          l965 1E2C                                            l991 3300  
                                          l975 1E4E                                            l967 1E2E  
                                          l959 1E14                                            l896 33C8  
                                          l984 1E72                                            l978 1E54  
                                          l899 33BE                                            _abs 2FC0  
                       ??_EUSART_RxDataHandler 0001                                __end_of_ADC_ISR 3084  
                       fp__I2C_DO_RX_NACK_STOP 0000                           print_temp_LCD@column 0107  
               ?_EUSART_SetFramingErrorHandler 001C                __end_of_ADC_SetInterruptHandler 33DE  
                                 ___awmod@sign 0021                                            tosl 0FFD  
                                          wreg 0FE8                                   ___flmul@aexp 00E6  
                                 ___flmul@bexp 00EB                   ?_ADC_DefaultInterruptHandler 0001  
                 ??_I2C_SetAddressNackCallback 0025                                   ___flmul@sign 00E5  
                                 ___flmul@temp 00F0                                   ___flmul@prod 00EC  
                     ??_I2C_CallbackReturnStop 000C                                   _I2C_DO_RESET 3374  
                                 ___fltol@exp1 00F7                      _read_HS1101_moist_percent 252C  
                                         ?_abs 0022                        ??_rd2RegCompleteHandler 000C  
                                         l1225 2066                                           l1238 2294  
                                         l1522 126C                                           l1531 153C  
                                         l1523 125A                                           l1291 1FA2  
                                         l1612 1968                                           l1524 1220  
                                         l1615 17FA                                           l1608 1604  
                                         l1625 192A                                           l1617 1872  
                                         l1618 1860                                           l1722 2DE4  
                                         l1539 1386                                           l1548 1456  
                                         l1564 2DA0                                           l1652 1CE8  
                                         l1716 1B30                                           l1549 1444  
                                         l1741 21E4                                           l4070 33A2  
                                         l1726 2FDA                                           l1663 1C80  
                                         l1671 3054                                           l1656 1C24  
                                         l4072 33C0                                           l4400 28FC  
                                         l1752 3486                                           l1649 1B8C  
                                         l1729 2FF2                                           l4066 33D4  
                                         l4074 33B6                                           l4410 2920  
                                         l4402 28FE                                           l6020 2344  
                                         l4076 33CA                                           l4068 33AC  
                                         l4420 2944                                           l4412 2924  
                                         l4404 290A                                           l6022 2344  
                                         l5310 3214                                           l4422 296C  
                                         l4414 2928                                           l4406 2918  
                                         l1678 2E66                                           l4350 2D1A  
                                         l6024 2354                                           l5320 345A  
                                         l5312 3222                                           l4416 292C  
                                         l4408 291C                                           l4352 2D40  
                                         l6026 23DE                                           l5322 345E  
                                         l5330 2E80                                           l5314 3232  
                                         l5306 33DE                                           l5410 24A8  
                                         l4418 2938                                           l4354 2D44  
                                         l5500 10CC                                           l5308 3462  
                                         l5332 2E84                                           l5340 2EA4  
                                         l5324 2E6A                                           l5420 24BA  
                                         l5412 24AA                                           l5404 2490  
                                         l6052 3290                                           l4380 333C  
                                         l3820 2CF2                                           l3812 2CBE  
                                         l4356 2D46                                           l4348 2D0E  
                                         l5510 10FE                                           l5502 10D4  
                                         l5334 2E94                                           l5326 2E6E  
                                         l5318 3452                                           l5430 24DC  
                                         l5422 24BC                                           l5414 24AC  
                                         l5406 2494                                           l6054 3290  
                                         l4390 3022                                           l4382 2FF4  
                                         l3822 2CF4                                           l3814 2CBE  
                                         l5600 12D6                                           l5520 1134  
                                         l5512 1104                                           l5504 10E4  
                                         l5248 3456                                           l5336 2E9C  
                                         l5328 2E7E                                           l5440 2504  
                                         l5432 24E4                                           l5424 24C4  
                                         l5416 24AE                                           l5408 24A4  
                                         l5344 2B2C                                           l6056 32A0  
                                         l4376 344E                                           l4392 3398  
                                         l4384 300C                                           l6400 2200  
                                         l3824 2D04                                           l3816 2CDC  
                                         l5602 12DA                                           l5610 12FA  
                                         l5530 1170                                           l5522 1144  
                                         l5514 1112                                           l5506 10EA  
                                         l5338 2EA0                                           l5450 2524  
                                         l5442 250C                                           l5434 24EC  
                                         l5426 24CC                                           l5418 24B2  
                                         l5346 2B3E                                           l4394 3186  
                                         l4378 332C                                           l4386 300E  
                                         l6410 2234                                           l6402 2204  
                                         l3826 2D08                                           l3818 2CE6  
                                         l5612 1320                                           l5620 1376  
                                         l5604 12E8                                           l5540 118E  
                                         l5532 117E                                           l5524 1146  
                                         l5516 1114                                           l5508 10FC  
                                         l5444 2518                                           l5436 24F4  
                                         l5428 24D4                                           l5452 2528  
                                         l5348 2B6A                                           l5460 31BA  
                                         l4396 319A                                           l4388 3018  
                                         l6420 226E                                           l6412 223C  
                                         l6404 2212                                           l3828 2D0A  
                                         l5630 13CA                                           l5622 139C  
                                         l5614 1354                                           l5606 12EA  
                                         l5550 11A2                                           l5542 1192  
                                         l5534 1182                                           l5518 1124  
                                         l5526 114E                                           l5446 251C  
                                         l5438 24FC                                           l5462 31C2  
                                         l4398 319C                                           l6350 1FA4  
                                         l6414 224A                                           l6422 2274  
                                         l6406 221A                                           l6430 212C  
                                         l6510 2DA2                                           l4814 32EC  
                                         l5640 13F4                                           l5632 13D8  
                                         l5624 13AC                                           l5616 1356  
                                         l5608 12F4                                           l5560 11B6  
                                         l5552 11A6                                           l5544 1196  
                                         l5536 1186                                           l5528 115E  
                                         l5480 30A8                                           l5472 3084  
                                         l5448 2520                                           l5464 31CA  
                                         l5456 32A4                                           l6504 3274  
                                         l6360 1FD0                                           l6352 1FA8  
                                         l6424 2284                                           l6416 2260  
                                         l6408 222C                                           l6440 21A4  
                                         l6432 213C                                           l6512 2DAA  
                                         l6600 25F8                                           l6520 3258  
                                         l5810 1670                                           l5802 1638  
                                         l5650 1426                                           l5642 1404  
                                         l5634 13DA                                           l5618 1366  
                                         l5570 1208                                           l5562 11BA  
                                         l5554 11AA                                           l5546 119A  
                                         l5538 118A                                           l5490 1098  
                                         l5482 30AC                                           l5474 3088  
                                         l5466 32BC                                           l5458 31AA  
                                         l6450 3304                                           l6506 327C  
                                         l6370 1FFE                                           l6362 1FD8  
                                         l6354 1FB6                                           l6426 228C  
                                         l6418 2268                                           l6434 214C  
                                         l6514 2DBC                                           l6602 2606  
                                         l6530 289C                                           l6522 3260  
                                         l6610 2782                                           l5740 2F0A  
                                         l5820 16BA                                           l5812 1688  
                                         l5804 1644                                           l5660 1480  
                                         l5652 143C                                           l5636 13E8  
                                         l5628 13C0                                           l5644 1406  
                                         l5580 124C                                           l5572 1218  
                                         l5556 11AE                                           l5548 119E  
                                         l5564 11BE                                           l5492 109A  
                                         l5900 1EB0                                           l5476 3098  
                                         l5468 33E8                                           l6452 3314  
                                         l6508 3280                                           l6380 2038  
                                         l6372 2006                                           l6364 1FDC  
                                         l6356 1FBE                                           l6444 2FC0  
                                         l6436 2156                                           l6460 19A4  
                                         l6516 2DDA                                           l6604 2620  
                                         l6532 28A8                                           l6524 3264  
                                         l6620 27E4                                           l6612 27B2  
                                         l6700 1CEA                                           l5734 2EE6  
                                         l5830 1710                                           l5822 16CA  
                                         l5814 1694                                           l5806 164E  
                                         l5670 14FC                                           l5662 14BA  
                                         l5638 13F0                                           l5646 1414  
                                         l5582 124E                                           l5574 122E  
                                         l5566 11C2                                           l5558 11B2  
                                         l5494 10AA                                           l5486 107C  
                                         l5910 1F04                                           l5478 309C  
                                         l5750 2A0E                                           l6550 303A  
                                         l6390 205E                                           l6382 203A  
                                         l6374 2014                                           l6366 1FE4  
                                         l6358 1FC2                                           l6446 2FCE  
                                         l6438 2172                                           l6470 1A06  
                                         l6462 19A8                                           l6454 196A  
                                         l6606 263C                                           l6534 28B4  
                                         l6526 288A                                           l6630 2FAC  
                                         l6622 27E8                                           l6614 27C2  
                                         l6710 1D2C                                           l6702 1CEE  
                                         l5736 2EF8                                           l5840 17B4  
                                         l5832 172C                                           l5824 16D6  
                                         l5816 16A0                                           l5808 1664  
                                         l5680 151C                                           l5672 1500  
                                         l5656 1466                                           l5664 14BC  
                                         l5648 1418                                           l5592 129E  
                                         l5584 1258                                           l5576 123A  
                                         l5568 11EC                                           l5496 10BA  
                                         l5488 108A                                           l5920 1F2E  
                                         l5912 1F08                                           l5904 1EC4  
                                         l5752 2A20                                           l5744 29E2  
                                         l6448 2972                                           l6544 3026  
                                         l6384 2040                                           l6376 201A  
                                         l6368 1FF6                                           l6480 1A88  
                                         l6472 1A10                                           l6464 19B2  
                                         l6456 1990                                           l6560 2E56  
                                         l6552 2E28                                           l6608 263E  
                                         l6528 2890                                           l6624 27FC  
                                         l6616 27C8                                           l6640 2754  
                                         l6632 26F6                                           l6720 1D84  
                                         l6712 1D32                                           l6704 1CF0  
                                         l5738 2EFA                                           l5850 180A  
                                         l5842 17C2                                           l5834 1738  
                                         l5826 16E6                                           l5818 16AE  
                                         l5770 156C                                           l5762 153E  
                                         l5682 152A                                           l5674 150E  
                                         l5666 14CC                                           l5658 1472  
                                         l5594 12AE                                           l5586 127A  
                                         l5578 123E                                           l5498 10CA  
                                         l5930 1F56                                           l5922 1F38  
                                         l5914 1F16                                           l5906 1EF2  
                                         l5754 2A34                                           l5746 29E6  
                                         l6570 2C8A                                           l6546 302E  
                                         l6378 2030                                           l6386 2046  
                                         l6394 21E6                                           l6490 1AE4  
                                         l6482 1A98                                           l6474 1A28  
                                         l6466 19D0                                           l6458 1998  
                                         l6554 2E36                                           l6538 28C0  
                                         l6626 2F8E                                           l6618 27E0  
                                         l6650 2F64                                           l6642 2758  
                                         l6634 2726                                           l6730 1DB4  
                                         l6722 1D92                                           l6714 1D4A  
                                         l6706 1CF8                                           l5852 1818  
                                         l5844 17E0                                           l5836 1754  
                                         l5828 1700                                           l5780 15A8  
                                         l5772 157C                                           l5764 154C  
                                         l5684 152C                                           l5676 1514  
                                         l5668 14DC                                           l5596 12BC  
                                         l5588 128A                                           l5932 1F62  
                                         l5924 1F42                                           l5908 1EF4  
                                         l5756 2A38                                           l5748 29FC  
                                         l6580 2CA8                                           l6572 2C90  
                                         l6564 2C5C                                           l6548 3038  
                                         l6388 2056                                           l6396 21EA  
                                         l6484 1AA8                                           l6492 1AE8  
                                         l6476 1A58                                           l6468 19EE  
                                         l6556 2E3E                                           l6628 2F9A  
                                         l6652 2F76                                           l6644 275C  
                                         l6636 2736                                           l6660 26AA  
                                         l6740 1E04                                           l6732 1DBC  
                                         l6724 1DA0                                           l6716 1D62  
                                         l6708 1D10                                           l5862 1882  
                                         l5870 18CA                                           l5854 181C  
                                         l5846 17EA                                           l5838 177E  
                                         l5790 15DE                                           l5782 15AE  
                                         l5774 158C                                           l5766 155A  
                                         l5678 1516                                           l5598 12CA  
                                         l5934 1F72                                           l5950 1BB2  
                                         l5942 1B36                                           l5758 2A4C  
                                         l6582 2CAE                                           l6574 2C96  
                                         l6566 2C6E                                           l6398 21F8  
                                         l6486 1AB8                                           l6478 1A74  
                                         l6494 1AFE                                           l6558 2E46  
                                         l6590 2ACC                                           l6646 2770  
                                         l6638 273C                                           l6670 26E4  
                                         l6662 26C4                                           l6654 2660  
                                         l6742 1E1C                                           l6734 1DCE  
                                         l6726 1DA4                                           l6718 1D7A  
                                         l5880 193E                                           l5872 18E4  
                                         l5864 188E                                           l5856 182A  
                                         l5848 17F8                                           l5792 15EE  
                                         l5784 15BC                                           l5776 1592  
                                         l5768 155C                                           l5936 1F82  
                                         l5960 1C0C                                           l5944 1B48  
                                         l6584 2CB4                                           l6576 2C9C  
                                         l6568 2C74                                           l6680 323A  
                                         l6488 1ACA                                           l6592 2AF2  
                                         l6648 2F58                                           l6672 2F22  
                                         l6664 26C8                                           l6656 2694  
                                         l6744 1E38                                           l6736 1DE0  
                                         l6728 1DAC                                           l5882 194C  
                                         l5874 18F8                                           l5866 189C  
                                         l5858 1858                                           l5794 15F4  
                                         l5786 15BE                                           l5778 15A2  
                                         l5938 1F92                                           l5970 1C70  
                                         l5962 1C0E                                           l5954 1BC6  
                                         l5946 1B56                                           l6578 2CA2  
                                         l6690 324E                                           l6682 323E  
                                         l6498 1B0C                                           l6850 28D4  
                                         l6586 331A                                           l6594 2AF6  
                                         l6674 2F2E                                           l6666 26CC  
                                         l6658 26A4                                           l6746 1E56  
                                         l6738 1DF2                                           l5884 194E  
                                         l5876 1912                                           l5868 18C6  
                                         l5796 1614                                           l5788 15CE  
                                         l5892 2D5A                                           l5980 1CC8  
                                         l5972 1C8E                                           l5964 1C1A  
                                         l5956 1BCE                                           l5948 1B9C  
                                         l6684 3242                                           l6596 25CA  
                                         l6588 2ABE                                           l6676 2F40  
                                         l6668 26D0                                           l6748 1E74  
                                         l5878 192E                                           l5886 1954  
                                         l5798 1624                                           l5894 2D6C  
                                         l5982 1CD6                                           l5974 1C90  
                                         l5966 1C56                                           l5958 1BDA  
                                         l6686 3246                                           l6678 3236  
                                         l6598 25E0                                           l5990 2530  
                                         l5888 1958                                           l5984 1CD8  
                                         l5976 1C94                                           l5968 1C62  
                                         l6688 324A                                           l5992 2540  
                                         l5898 1E98                                           l5978 1CB8  
                                         l5994 25BC                                           l5988 2530  
                                         STR_1 1078                                           STR_2 105F  
                                         STR_3 104C                                           STR_4 1070  
                                         STR_5 1033                                           STR_6 1068  
                                         STR_7 1042                                           STR_8 1056  
                                         STR_9 1021                                           _LATA 0F89  
                                         _LATB 0F8A                                           _LATC 0F8B  
                                         u2240 2CCE                                           _LATD 0F8C  
                                         u2241 2CCA                                           _LATE 0F8D  
                                         u4010 3222                                           u2250 2CDC  
                                         u4011 321E                                           u2251 2CD8  
                                         u4100 1098                                           u4020 2E7E  
                                         u2260 2D04                                           u4101 1094  
                                         u4021 2E7A                                           u2261 2D00  
                                         u4110 10AA                                           u4030 2E94  
                                         u4111 10A6                                           u4031 2E90  
                                         u4200 1204                                           u4120 10BA  
                                         u4040 2B3E                                           u4201 11FE  
                                         u4121 10B6                                           u4041 2B3A  
                                         u4210 1206                                           u4130 10FC  
                                         u4131 10F8                                           u4300 1320  
                                         u4220 122E                                           u4140 1112  
                                         u4301 131C                                           u4221 122A  
                                         u4141 110E                                           u4310 1366  
                                         u4230 124C                                           u4150 1124  
                                         u4070 24A4                                           u4311 1362  
                                         u4231 1248                                           u4151 1120  
                                         u4071 24A0                                           u4400 1452  
                                         u4320 139C                                           u4240 126C  
                                         u4160 1134                                           u4080 31BA  
                                         u5200 2212                                           u4401 144E  
                                         u4321 1398                                           u4241 1268  
                                         u4161 1130                                           u4081 31B6  
                                         u5201 220E                                           u4410 1466  
                                         u4330 13AC                                           u4250 127A  
                                         u4170 1170                                           u4090 3098  
                                         u5130 1FB6                                           u5210 222C  
                                         u4411 1462                                           u4331 13A8  
                                         u4251 1276                                           u4171 116C  
                                         u4091 3094                                           u5131 1FB2  
                                         u5211 2228                                           u4420 1480  
                                         u4340 13D8                                           u4260 128A  
                                         u4180 117E                                           u5140 1FD0  
                                         u5220 224A                                           u5300 1990  
                                         u2820 2D3C                                           u4421 147C  
                                         u4341 13D4                                           u4261 1286  
                                         u4181 117A                                           u5141 1FCC  
                                         u5221 2246                                           u5301 198C  
                                         u4430 14BA                                           u4350 13E8  
                                         u4270 12BC                                           u4190 11EC  
                                         u5150 1FF6                                           u5230 2260  
                                         u5310 19D0                                           u2830 2D58  
                                         u4431 14B6                                           u4351 13E4  
                                         u4271 12B8                                           u4191 11E8  
                                         u5151 1FF2                                           u5231 225C  
                                         u5311 19CC                                           u2831 2D54  
                                         u4600 15CE                                           u4440 14CC  
                                         u4360 1404                                           u4280 12CA  
                                         u5160 2014                                           u5240 2284  
                                         u5320 19EE                                           u5400 2DDA  
                                         u4601 15CA                                           u4441 14C8  
                                         u4361 1400                                           u4281 12C6  
                                         u5161 2010                                           u5241 2280  
                                         u5321 19EA                                           u5401 2DD6  
                                         u4530 2F0A                                           u4610 15DE  
                                         u4450 14DC                                           u4370 1414  
                                         u4290 12E8                                           u5410 3054  
                                         u5170 2030                                           u5250 213C  
                                         u5330 1A24                                           u4531 2F06  
                                         u4611 15DA                                           u4451 14D8  
                                         u4371 1410                                           u4291 12E4  
                                         u5411 3050                                           u5171 202C  
                                         u5251 2138                                           u5331 1A1E  
                                         u2827 2D32                                           u4700 1882  
                                         u4620 1614                                           u4460 14FC  
                                         u4380 1426                                           u4540 29FC  
                                         u5180 2056                                           u5260 214C  
                                         u5340 1A26                                           u5420 2AEE  
                                         u5500 1E04                                           u4701 187E  
                                         u4621 1610                                           u4461 14F8  
                                         u4381 1422                                           u4541 29F8  
                                         u5181 2052                                           u5261 2148  
                                         u5501 1E00                                           u4710 189C  
                                         u4630 1624                                           u4470 150E  
                                         u4390 143C                                           u4550 2A4C  
                                         u5190 21F8                                           u5270 2172  
                                         u5350 1A88                                           u5430 2B18  
                                         u5510 1E14                                           u4711 1898  
                                         u4631 1620                                           u4471 150A  
                                         u4391 1438                                           u4551 2A48  
                                         u5191 21F4                                           u5271 216E  
                                         u5351 1A84                                           u5511 1E10  
                                         u4720 18E4                                           u4640 179E  
                                         u4560 155A                                           u4480 152A  
                                         u4800 1F72                                           u5280 21A4  
                                         u5360 1A98                                           u5440 2B28  
                                         u5520 1E2C                                           u4721 18E0  
                                         u4561 1556                                           u4481 1526  
                                         u4801 1F6E                                           u5281 21A0  
                                         u5361 1A94                                           u5441 2B24  
                                         u5521 1E28                                           u4730 1912  
                                         u4650 17F8                                           u4570 156C  
                                         u4810 1F82                                           u5290 2FCE  
                                         u5370 1AA8                                           u5450 265C  
                                         u5530 1E4E                                           u4731 190E  
                                         u4651 17F4                                           u4571 1568  
                                         u4811 1F7E                                           u5291 2FCA  
                                         u5371 1AA4                                           u5451 2658  
                                         u5427 2AE4                                           u5531 1E4A  
                                         u4740 194C                                           u4660 1818  
                                         u4580 157C                                           u4900 1CC8  
                                         u4820 1B48                                           u5380 1AB8  
                                         u5460 27C2                                           u5540 1E6C  
                                         u4741 1948                                           u4661 1814  
                                         u4645 1794                                           u4581 1578  
                                         u4901 1CC4                                           u4821 1B44  
                                         u5381 1AB4                                           u5437 2B0E  
                                         u5461 27BE                                           u5541 1E68  
                                         u4670 182A                                           u4590 15BC  
                                         u4750 1EB0                                           u4910 1CD6  
                                         u4830 1B56                                           u5390 1AFA  
                                         u5470 2736                                           u4671 1826  
                                         u4591 15B8                                           u4751 1EAC  
                                         u4911 1CD2                                           u4831 1B52  
                                         u5607 330A                                           u5391 1AF6  
                                         u5471 2732                                           u4680 1858  
                                         u4760 1EE6                                           u4840 1BB2  
                                         u5480 26A4                                           u4681 1854  
                                         u4841 1BAE                                           u5481 26A0  
                                         u4690 186E                                           u4770 1F16  
                                         u4850 1C08                                           u4691 186A  
                                         u4771 1F12                                           u4851 1C04  
                                         u4780 1F2A                                           u4860 1C52  
                                         u4781 1F26                                           u4765 1EDA  
                                         u4861 1C4E                                           u5557 1D1C  
                                         u4790 1F52                                           u4870 1C70  
                                         u4791 1F4E                                           u4871 1C6C  
                                         u5567 1E80                                           u4880 1C80  
                                         u4881 1C7C                                           u5577 2C62  
                                         u4890 1C8E                                           u4891 1C8A  
                                         u5587 2C7A                                           u5597 2C8C  
                                         _WPUB 0F7C               __end_of_lcd_4bits_send_char_data 3270  
                      ??_wr2RegCompleteHandler 000C                                           abs@a 0022  
                                         _dbuf 0084                                           _main 1CEA  
                     ?_I2C_CallbackReturnReset 000A                                           _prec 002A  
                                         fsr0h 0FEA                                           fsr1h 0FE2  
                                         indf0 0FEF                                           fsr2h 0FDA  
                                         fsr0l 0FE9                                           indf1 0FE7  
                                         indf2 0FDF                                           fsr1l 0FE1  
                                         fsr2l 0FD9                               __end_of_I2C_Open 252C  
                                         btemp 0044                          ?i2_I2C_MasterClearIrq 0001  
                                         prodh 0FF4                                           prodl 0FF3  
                                         start 015A                        _I2C_SetInterruptHandler 33DE  
                 fp__I2C_DO_SEND_RESTART_WRITE 0000                                   ___param_bank 0000  
                                        ??_abs 0024                               ?_I2C_MasterClose 0001  
                     __end_of_print_HS1101_LCD 2FC0                         ?_lcd_4bits_send_enable 0001  
                                ?_EUSART_Write 0001                               ?_I2C_MasterStart 0001  
                                _I2C_DO_RX_ACK 3400                               ?_I2C_MasterWrite 0001  
                __end_of_OSCILLATOR_Initialize 33A2                                  ___fltol@sign1 00F6  
                              __end_of___fladd 153E                                          ?_main 0001  
                              __end_of___awdiv 2068                                __end_of___awmod 2296  
                              __end_of___flmul 196A                                __end_of___flsub 2DA2  
                              __end_of___fltol 1FA4                                          _ANSEL 0F7E  
                        _I2C_Read1ByteRegister 29E0                                ___awdiv@divisor 001E  
                                        i2l300 010E                                          i2l305 012E  
                                        i2l500 3396                                          i2l253 3132  
                                        i2l262 315E                                          i2l503 3372  
                                        i2l256 3106                                          i2l512 212A  
                                        i2l265 2E26                                          i2l506 3362  
                                        i2l259 30DA                                          i2l621 3484  
                                        i2l509 20F2                                          i2l525 241E  
                                        i2l470 32EA                                          i2l526 248C  
                                        i2l294 0064                                          i2l615 3470  
                                        i2l543 2886                                          i2l296 009C  
                                        i2l633 3480                                          i2l537 338A  
                                        i2l561 3426                                          i2l490 2C5A  
                                        i2l642 3440                                          i2l618 342E  
                                        i2l570 340E                                          i2l298 00D6  
                                        i2l467 31F0                                          i2l627 3474  
                                        i2l299 012E                                          i2l636 3352  
                                        i2l564 341E                                          i2l660 3468  
                                        i2l573 3406                                          i2l493 3434  
                                        i2l582 337E                                          i2l639 343A  
                                        i2l663 346C                                          i2l567 3416  
                                        i2l576 33FE                                          i2l497 2ABC  
                                        i2l579 33F6                                          i2l764 348A  
                                        i2l596 347C                                          i2l588 2BF4  
                                        i2l758 3082                                          i2l870 2EE0  
                                        i2l599 3478                                          i2l880 233E  
                                        i2l873 2EE2                                          i2l890 3446  
                                        i2l884 3184                                ___awdiv@counter 0020  
                                        i2l893 344C                                          i2l887 3488  
                                        _RCREG 0FAE                                          _RCSTA 0FAB  
                                 vfpfcnvrt@fmt 00D8                                          _SPBRG 0FAF  
                            ??_I2C_DO_TX_EMPTY 000D                                          _TRISA 0F92  
                                        _TRISB 0F93                                          _TRISC 0F94  
                                        _TRISD 0F95                                          _TRISE 0F96  
                                        _TXREG 0FAD                                          _TXSTA 0FAC  
                             lcd_4bits_pos@row 0022                              __end_of_I2C_DO_RX 248E  
                            __end_of_I2C_DO_TX 212C                                          _flags 002E  
                                        _fputc 212C                              __end_of_I2C_Close 30B0  
                                        _moist 00C0                               fp__I2C_MasterIsr 0000  
               I2C_MasterOperation@returnValue 001D                                          _width 0028  
                                        _putch 3486                        _I2C_MasterEnableRestart 3482  
                                        pclath 0FFA                                          pclatu 0FFB  
                                        tablat 0FF5                               ?_I2C_SetCallback 001C  
                lcd_4bits_send_command@command 001E                   I2C_SetAddressNackCallback@cb 0021  
                                        ttemp5 0045                                          ttemp6 0048  
                                        ttemp7 004C                                   ?_LDR_reading 010C  
                                        status 0FD8                                          wtemp8 0045  
                              __end_of_sprintf 2E68                              ?_I2C_DO_SEND_STOP 0001  
                        print_HS1101_LCD@value 00F7                             ??_I2C_DO_SEND_STOP 0001  
                     fp__rd1RegCompleteHandler 0000                                __initialization 31F2  
                        i2I2C_SetBuffer@buffer 0001                                   __end_of_main 1E98  
                     fp__wr1RegCompleteHandler 0000                      ?_I2C_DO_SEND_RESTART_READ 0001  
                   Send_String@l_String_Length 0020                                 ??_EUSART_Write 001C  
                               ?_I2C_DO_RX_ACK 0001                                      ??_ADC_ISR 0001  
                  ?_INTERRUPT_InterruptManager 0001                 ??_EUSART_SetRxInterruptHandler 001E  
                                       ??_main 0113                              ?_I2C_MasterIsNack 0001  
                                ??_Send_String 0020                                  __activetblptr 0003  
              lcd_4bits_send_char_data_pos@chr 0025                lcd_4bits_send_char_data_pos@col 0024  
                            ?_I2C_MasterSetIrq 0001                lcd_4bits_send_char_data_pos@row 0023  
                           ??_I2C_MasterIsNack 0001                        ?_lcd_4bits_send_command 0001  
                           ??_I2C_MasterSetIrq 0001           fp__EUSART_DefaultFramingErrorHandler 0000  
    __end_of_EUSART_DefaultFramingErrorHandler 348A            ??_EUSART_DefaultFramingErrorHandler 0001  
           ?_EUSART_DefaultFramingErrorHandler 0001              _EUSART_DefaultFramingErrorHandler 3488  
                                       _ADCON0 0FC2                                         _ADCON1 0FC1  
                                       _ADCON2 0FC0                     _EUSART_OverrunErrorHandler 00FA  
              __end_of_I2C_CallbackReturnReset 347A                                         ?_fputc 001C  
                                       _ADRESH 0FC4                                         _ADRESL 0FC3  
                             ___awdiv@dividend 001C                  I2C_SetDataCompleteCallback@cb 0021  
              i2I2C_SetDataCompleteCallback@cb 0006                                         ?_putch 0001  
                                       _ANSELH 0F7F                                         i2l4000 3380  
                                       i2l4010 2814                                         i2l4002 3384  
                                       i2l4020 2826                                         i2l4004 3388  
                                       i2l4014 281C                                         i2l4016 2820  
                                       i2l4008 280C                                         i2l4032 3400  
                                       i2l4040 3378                                         i2l4026 282E  
                                       i2l4034 3404                                         i2l4042 337C  
                                       i2l4050 2B9C                                         i2l4060 2BAC  
                                       i2l4038 3374                                         i2l4054 2BA4  
                                       i2l4046 2B90                                         i2l4080 316C  
                                       i2l3600 31DE                                         i2l4048 2B94  
                                       i2l4082 316E                                         i2l3602 31E6  
                                       i2l3530 2C0A                                         i2l4084 317E  
                                       i2l3604 31EE                                         i2l3532 2C36  
                                       i2l4086 3182                                         i2l4078 3160  
                                       i2l3542 3482                                         i2l3606 32D4  
                                       i2l3614 3108                                         i2l3622 30DC  
                                       i2l3630 30B0                                         i2l3702 342A  
                                       i2l3710 3418                                         i2l4430 2A78  
                                       i2l3544 347E                                         i2l3528 2BF8  
                                       i2l3640 3148                                         i2l3616 311C  
                                       i2l3624 30F0                                         i2l3632 30C4  
                                       i2l3704 3420                                         i2l3712 341C  
                                       i2l4432 2A7E                                         i2l4424 2A50  
                                       i2l4434 3442                                         i2l3642 315C  
                                       i2l3618 3130                                         i2l3626 3104  
                                       i2l3634 30D8                                         i2l3650 2E24  
                                       i2l3546 343C                                         i2l3722 346E  
                                       i2l3706 3424                                         i2l3730 33F4  
                                       i2l4290 3466                                         i2l4426 2A54  
                                       i2l4436 3448                                         i2l3740 3472  
                                       i2l3716 3408                                         i2l4428 2A64  
                                       i2l3638 3134                                         i2l3646 2DE6  
                                       i2l3750 347A                                         i2l3726 3436  
                                       i2l3742 3410                                         i2l3718 340C  
                                       i2l3734 33F8                                         i2l4800 22BA  
                                       i2l3648 2E10                                         i2l3912 338C  
                                       i2l3920 3364                                         i2l3744 3414  
                                       i2l3736 33FC                                         i2l3728 33F0  
                                       i2l4810 231C                                         i2l4802 22D2  
                                       i2l3754 3476                                         i2l3914 3390  
                                       i2l3922 3368                                         i2l3930 3358  
                                       i2l4812 233A                                         i2l4804 22E0  
                                       i2l3748 346A                                         i2l3916 3394  
                                       i2l3924 3370                                         i2l3932 3360  
                                       i2l3940 2080                                         i2l4806 22EC  
                                       i2l3598 31CE                                         i2l4910 004E  
                                       i2l4760 3056                                         i2l4808 2304  
                                       i2l3928 3354                                         i2l3960 2122  
                                       i2l3944 2088                                         i2l3936 2068  
                                       i2l4920 00B8                                         i2l4912 005C  
                                       i2l4762 3058                                         i2l3698 3340  
                                       i2l3962 2128                                         i2l3954 2098  
                                       i2l3970 23E8                                         i2l4922 00E4  
                                       i2l4914 0072                                         i2l4906 0032  
                                       i2l4764 306A                                         i2l3956 20F6  
                                       i2l3948 2090                                         i2l3972 23F6  
                                       i2l4780 3430                                         i2l4924 00F2  
                                       i2l4916 0080                                         i2l4908 0040  
                                       i2l4790 2ED6                                         i2l4782 2EA8  
                                       i2l3958 2108                                         i2l3974 23FC  
                                       i2l4926 011C                                         i2l4918 00AA  
                                       i2l4792 2EDA                                         i2l4784 2EB8  
                                       i2l3984 2424                                         i2l3976 2414  
                                       i2l4794 2296                                         i2l4786 2EC4  
                                       i2l3994 2434                                         i2l3978 2418  
                                       i2l4796 22A0                                         i2l4788 2EC6  
                                       i2l3988 242C                                         i2l4798 22AE  
                                       i2l6852 2BDE                                         i2l6854 2466  
                                       i2l6856 20CC                                         i2l6858 2860  
                                       _OSCCON 0FD3                         ??i2_I2C_MasterClearIrq 0001  
                                vfpfcnvrt@done 00DA                      ??_I2C_SetInterruptHandler 001E  
                                       _SPBRGH 0FB0                                         _SSPADD 0FC8  
                                       _SSPBUF 0FC9                               __end_of___xxtofl 1CEA  
                          _I2C_MasterEnableIrq 3452                            _I2C_MasterGetRxData 346E  
                                 vfprintf@cfmt 0027                                      ??___fladd 0024  
                                _I2C_MasterFsm 2A50                                      ??___awdiv 0020  
                                _I2C_MasterIsr 3430                                      ??___awmod 0020  
                                    ??___flmul 0024                                      ??___flsub 0028  
                                    ??___fltol 0108                                         _bright 00C2  
                          _EUSART_Transmit_ISR 2EA8                          __end_of_lcd_4bits_pos 28FC  
                                       _memset 3026                              _uart_draw_borders 32EC  
                                       clear_0 31F8                                         clear_1 3204  
                            I2C_SetCallback@cb 001C                               ___awdiv@quotient 0022  
                      fp__I2C_DO_SEND_ADR_READ 0000                                ___awmod@divisor 001E  
                       ?_I2C_Read1ByteRegister 0025                                         isa$std 0001  
                    ?_lcd_4bits_send_char_data 0001                                ___awmod@counter 0020  
                                _I2C_SetBuffer 31AA                    lcd_4bits_send_char_data@chr 001E  
                           ?_uart_draw_borders 0001                   __end_of_I2C_MasterDisableIrq 345E  
               __end_of_lcd_4bits_send_command 328C                                         fputc@c 001C  
                         ?_I2C_MasterEnableIrq 0001                            _I2C_DO_ADDRESS_NACK 2B90  
                         ?_I2C_MasterGetRxData 0001                                      ?_I2C_Open 0001  
           __end_of_I2C_SetAddressNackCallback 32D4                     _I2C_SetAddressNackCallback 32BC  
                                 __mediumconst 0000                                         tblptrh 0FF7  
                                       tblptrl 0FF6                                         tblptru 0FF8  
                    ??_I2C_MasterEnableRestart 0001                       ADC_GetConversion@channel 0020  
                                       putch@c 0001                               __end_of_vfprintf 2DE6  
                          ??_uart_draw_borders 0021        ADC_SetInterruptHandler@InterruptHandler 001C  
      I2C_SetInterruptHandler@InterruptHandler 001C                            __end_of_Send_String 2D5A  
                                    ??_sprintf 0028                           ?_EUSART_Transmit_ISR 0001  
                       print_HS1101_LCD@column 0107                                   ___xxtofl@arg 00D9  
                                 ___xxtofl@exp 00D8                              _SYSTEM_Initialize 3236  
                                 ___xxtofl@val 001C                        _convert_uint8_to_string 25C6  
                                   __accesstop 0060                        __end_of__initialization 320A  
                               Send_String@str 001D                            _I2C_MasterOperation 2E68  
                           ?_SYSTEM_Initialize 0001                               ??_print_temp_LCD 0028  
                                ___rparam_used 0001                           ?_I2C_DO_ADDRESS_NACK 0001  
                                   ___fltol@f1 00F2                               ??_lcd_send_4bits 001C  
                   convert_uint8_to_string@str 00F6           __end_of_EUSART_SetTxInterruptHandler 33AC  
                 _EUSART_SetTxInterruptHandler 33A2                        _rdBlkRegCompleteHandler 2DE6  
                   fp__rdBlkRegCompleteHandler 0000                                 __pcstackCOMRAM 0001  
                               ?_I2C_MasterFsm 0001                                 ?_I2C_MasterIsr 0001  
                 __end_of_lcd_4bits_initialize 2CBC                                ??_I2C_DO_RX_ACK 0001  
                       _I2C_CallbackReturnStop 347A                            ??_SYSTEM_Initialize 0020  
                    __end_of_uart_draw_borders 3302                                  __end_of_fputc 21E6  
                                __end_of_putch 3488                                 ?_I2C_SetBuffer 001C  
                __end_of_I2C_DO_SEND_ADR_WRITE 3364                              __end_of_Read_TC74 32A4  
                   ?_I2C_DO_SEND_RESTART_WRITE 0001                           ?_I2C_MasterOperation 0001  
                        ??_I2C_MasterEnableIrq 001C                          ??_I2C_MasterGetRxData 0001  
                                   ??_I2C_Open 001E                           _eusartRxStatusBuffer 00A4  
                   __end_of_I2C_MasterClearIrq 3466                ??_EUSART_SetOverrunErrorHandler 001E  
                                      ??_fputc 001F                      __end_of_SYSTEM_Initialize 3254  
                        ??_EUSART_Transmit_ISR 0001                                        ??_putch 001C  
                            _I2C_MasterSendAck 3436                                     __pbssBANK0 0060  
                         __end_of_EUSART_Write 2D0E                                  ??_I2C_DO_IDLE 0001  
                                ??_I2C_DO_RCEN 0001                  __end_of_rd2RegCompleteHandler 3108  
                 __end_of_I2C_MasterSendTxData 3430                             ?_I2C_MasterSendAck 0001  
                            _I2C_MasterStartRx 3472                                     __pnvCOMRAM 0040  
                        ??_I2C_DO_ADDRESS_NACK 000D                  __end_of_wr2RegCompleteHandler 3160  
                          _I2C_DO_RX_NACK_STOP 33F8                          _rd1RegCompleteHandler 3108  
                           ?_I2C_MasterStartRx 0001                     __end_of_I2C_MasterSendNack 3442  
                        _wr1RegCompleteHandler 30B0                            ??_I2C_MasterSendAck 0001  
                     rd1RegCompleteHandler@ptr 000A                        ??_lcd_4bits_send_enable 001C  
                ?_EUSART_SetTxInterruptHandler 001C               _EUSART_TxDefaultInterruptHandler 0042  
            __end_of_read_HS1101_moist_percent 25C6                    __end_of_I2C_DO_SEND_RESTART 3418  
                              _I2C_DO_TX_EMPTY 280C                            I2C_SetBuffer@buffer 001C  
                          ??_I2C_MasterStartRx 0001                                        _ADC_ISR 3056  
                                      _BAUDCON 0FB8                                        ?_memset 001C  
                            ?_print_HS1101_LCD 0106                   ??_EUSART_DefaultErrorHandler 0001  
                        ??_I2C_MasterOperation 001C                 I2C_SetDataCompleteCallback@ptr 0023  
             i2I2C_SetDataCompleteCallback@ptr 0008                         print_bright_uart@value 0024  
                     ??_I2C_DO_RX_NACK_RESTART 0001                             ??_print_HS1101_LCD 0028  
            __end_of_I2C_DO_SEND_RESTART_WRITE 3420                           ?_I2C_DO_RX_NACK_STOP 0001  
                                  _Send_String 2D0E                                  _eusartRxCount 0030  
                                    ?___xxtofl 001C                      __end_of_I2C_MasterSendAck 343C  
                                      _OSCTUNE 0F9B                      ??_convert_uint8_to_string 0028  
                     ??_EUSART_SetErrorHandler 001E                                        _SSPCON1 0FC6  
                                      _SSPCON2 0FC5                                        _SSPSTAT 0FC7  
                    __end_of_I2C_MasterStartRx 3476                           I2C_Close@returnValue 001C  
                 ?_I2C_SetDataCompleteCallback 0021                              print_temp_LCD@row 0106  
                                    _I2C_DO_RX 23E8                                      _I2C_DO_TX 2068  
             __end_of_I2C_DO_SEND_RESTART_READ 3428                   I2C_Read1ByteRegister@address 0026  
                                    _I2C_Close 3084                               _brightness_array 0036  
                    ??_rdBlkRegCompleteHandler 000C                           _I2C_MasterDisableIrq 345A  
                            ??i2_I2C_SetBuffer 0005                 ??_lcd_4bits_send_char_data_pos 0025  
             ??_lcd_4bits_send_string_data_pos 0027                ?_lcd_4bits_send_string_data_pos 0023  
                              ??_I2C_MasterFsm 000F                                ??_I2C_MasterIsr 0012  
                         _ADC_InterruptHandler 0040                                        __Hparam 0000  
                      _ADC_SetInterruptHandler 33D4                                        __Lparam 0000  
                        LDR_reading@AN_channel 0110                            __end_of_I2C_DO_IDLE 3398  
                          __end_of_I2C_DO_RCEN 338C                                        ___fladd 107C  
            lcd_4bits_send_string_data_pos@col 0026                                        ___awdiv 1FA4  
                                      ___awmod 21E6                                        ___flmul 153E  
                                      ___flsub 2D5A                                        ___fltol 1E98  
            lcd_4bits_send_string_data_pos@row 0025              lcd_4bits_send_string_data_pos@str 0023  
                              ??_I2C_SetBuffer 0020                                      ?_vfprintf 00E1  
                      I2C_SetBuffer@bufferSize 001E                                   __psmallconst 1000  
                               _I2C_MasterOpen 3214                                        __pcinit 31F2  
                               _I2C_MasterStop 347E                                 _I2C_Initialize 332C  
                                      __ramtop 1000                               _print_bright_LCD 2F54  
                                      __ptext0 1CEA                                        __ptext1 32EC  
                                      __ptext2 252C                                        __ptext3 265E  
                                      __ptext4 2F1E                                        __ptext5 26F4  
                                      __ptext6 2F54                                        __ptext7 2780  
                                      __ptext8 2D0E                                        __ptext9 2CBC  
                        ??_I2C_DO_RX_NACK_STOP 0001                          _OSCILLATOR_Initialize 3398  
                                   ??___xxtofl 0020                               ___awmod@dividend 001C  
                           I2C_SetCallback@idx 0020                       ??_PIN_MANAGER_Initialize 001C  
                I2C_CallbackReturnReset@funPtr 000A                             I2C_SetCallback@ptr 001E  
                     wr1RegCompleteHandler@ptr 000A                       fp__I2C_DO_SEND_ADR_WRITE 0000  
                                      _sprintf 2E28                           _lcd_4bits_initialize 2C5C  
                         end_of_initialization 320A                                     ?_I2C_DO_RX 0001  
                                   ?_I2C_DO_TX 0001          __end_of_EUSART_SetOverrunErrorHandler 33C0  
                _EUSART_SetOverrunErrorHandler 33B6                                        fputc@fp 001E  
                                      memset@c 001D                                        memset@n 001F  
                                      memset@p 0021                                     ?_I2C_Close 0001  
                       ?_rd1RegCompleteHandler 000A                        __end_of_I2C_DO_TX_EMPTY 2888  
                        ?_I2C_MasterDisableIrq 0001                              _EUSART_Initialize 28FC  
                       ?_wr1RegCompleteHandler 000A                       fp__rd2RegCompleteHandler 0000  
                           ?_EUSART_Initialize 0001                              __end_of_vfpfcnvrt 1B32  
                                    _RCSTAbits 0FAB                __end_of_convert_uint8_to_string 265E  
                                      postdec2 0FDD                                     _temp_array 00C5  
                      ??_I2C_Read1ByteRegister 0026                         __end_of_I2C_MasterOpen 3236  
                     fp__wr2RegCompleteHandler 0000                                        postinc0 0FEE  
                                      postinc1 0FE6                                        postinc2 0FDE  
                             vfpfcnvrt@convarg 00DC                         __end_of_I2C_MasterStop 3482  
                       __end_of_I2C_Initialize 3340                                     ??_vfprintf 0027  
                    fp__I2C_CallbackReturnStop 0000                            ??_EUSART_Initialize 001E  
               ??_EUSART_SetTxInterruptHandler 001E                __end_of_rdBlkRegCompleteHandler 2E28  
                         _I2C_MasterSendTxData 3428                                fp__I2C_DO_RESET 0000  
                            LDR_reading@bright 0111                                    ___fladd@grs 00DA  
          __end_of_ADC_DefaultInterruptHandler 348C                    _ADC_DefaultInterruptHandler 348A  
                                ___xxtofl@sign 00D7                    ?_I2C_SetAddressNackCallback 0021  
                        ?_lcd_4bits_initialize 0001                 convert_uint8_to_string@TempStr 0101  
                          print_temp_LCD@value 00F7                                    ___flmul@grs 00E7  
                    __end_of_EUSART_Initialize 2970                  ??_ADC_DefaultInterruptHandler 0001  
                                  _I2C_DO_IDLE 338C                                    _I2C_DO_RCEN 3380  
                   rdBlkRegCompleteHandler@ptr 000A                      ??_ADC_SetInterruptHandler 001E  
                  convert_uint8_to_string@data 0105                                      _TXSTAbits 0FAC  
                            ??_print_temp_uart 0024                        ?_I2C_CallbackReturnStop 000A  
                     _I2C_DO_SEND_RESTART_READ 3420                    fp__I2C_DO_SEND_RESTART_READ 0000  
                            i2_I2C_SetCallback 2BF6                   I2C_CallbackReturnStop@funPtr 000A  
                              ?_I2C_MasterOpen 0001                   __end_of_INTERRUPT_Initialize 3452  
                              ?_I2C_MasterStop 0001                                ?_I2C_Initialize 0001  
                      _I2C_CallbackReturnReset 3476                       I2C_Read1ByteRegister@reg 0025  
                   fp__I2C_CallbackReturnReset 0000             __end_of_EUSART_DefaultErrorHandler 344E  
                   _EUSART_DefaultErrorHandler 3448                             ?i2_I2C_SetCallback 0001  
                                  vfpfcnvrt@ap 00D9                                    vfpfcnvrt@cp 00DB  
                                  vfpfcnvrt@fp 00D7                ??i2_I2C_SetDataCompleteCallback 000A  
                                 _EUSART_Write 2CBC                                 _ADC_Initialize 3186  
                        ?_I2C_MasterSendTxData 0001                         ?_OSCILLATOR_Initialize 0001  
                               __end_of_memset 3056                    ??_I2C_DO_SEND_RESTART_WRITE 0001  
                          ??i2_I2C_SetCallback 0005                            start_initialization 31F2  
                                    _Read_TC74 328C                                    __end_of_abs 2FF4  
                                ?_I2C_DO_RESET 0001                       ?_I2C_SetInterruptHandler 001C  
 EUSART_SetRxInterruptHandler@interruptHandler 001C   EUSART_SetTxInterruptHandler@interruptHandler 001C  
          read_HS1101_moist_percent@AN_channel 010E                                    ??_I2C_DO_RX 000D  
                                  ??_I2C_DO_TX 000D                              ??_I2C_MasterClose 001C  
                       ??_I2C_MasterDisableIrq 001C                                    ??_I2C_Close 001C  
                            ??_I2C_MasterStart 001C                              ??_I2C_MasterWrite 001E  
               __end_of_I2C_CallbackReturnStop 347E                         _I2C_DO_RX_NACK_RESTART 33F0  
                             ?_I2C_DO_TX_EMPTY 0001                             _I2C_MasterClearIrq 3462  
                    __end_ofi2_I2C_SetCallback 2C5C                 ?_EUSART_SetOverrunErrorHandler 001C  
                                  vfprintf@fmt 00E2                     _EUSART_FramingErrorHandler 00FC  
                     _lcd_4bits_send_char_data 3254                         _EUSART_SetErrorHandler 33CA  
                  __end_of_I2C_MasterEnableIrq 3456                            ?_I2C_MasterClearIrq 0001  
                       __end_of_ADC_Initialize 31AA                    __end_of_I2C_MasterGetRxData 3472  
                __end_of_lcd_4bits_send_enable 3318                   convert_uint8_to_string@F3454 00BC  
                        __end_of_I2C_DO_RX_ACK 3408                                       ?_ADC_ISR 0001  
                                     ??_memset 0021                               _I2C_DO_SEND_STOP 3408  
                                   memset@dest 001C                              ??_I2C_SetCallback 0020  
                          I2C_Open@returnValue 001F                             _I2C_MasterSendNack 343C  
                     ?_I2C_MasterEnableRestart 0001                                      ___fladd@a 0020  
                                 ?_Send_String 001D                                      ___fladd@b 001C  
                            _i2c_fsmStateTable 1001                         fp__I2C_DO_SEND_RESTART 0000  
                  __end_of_EUSART_Transmit_ISR 2EE4                          _I2C_DO_SEND_ADR_WRITE 3354  
                                    ___flmul@a 00E1                                      ___flmul@b 00DD  
                                  __pbssCOMRAM 0028                                      ___flsub@a 0104  
                                    ___flsub@b 0100                                     ?_Read_TC74 0001  
                                __pcstackBANK0 00D7                                  __pcstackBANK1 0100  
                       ??_lcd_4bits_initialize 001F                                 ??_I2C_DO_RESET 0001  
                         print_temp_uart@value 0024                            ?_I2C_MasterSendNack 0001  
                 convert_uint8_to_string@value 0100                                i2_I2C_SetBuffer 31CE  
                 __end_of_I2C_DO_SEND_ADR_READ 3374                           ??_I2C_MasterClearIrq 001C  
                  __end_of_I2C_DO_ADDRESS_NACK 2BF6                 read_HS1101_moist_percent@moist 010F  
                   __end_of_EUSART_Receive_ISR 2340                               _I2C_MasterIsNack 3340  
                                ??_LDR_reading 010E                      _I2C_DO_SEND_RESTART_WRITE 3418  
                     __end_of_print_bright_LCD 2F8A               _EUSART_RxDefaultInterruptHandler 00FE  
                             _I2C_MasterSetIrq 346A                                      __pnvBANK0 00F8  
                        _rd2RegCompleteHandler 30DC                   __end_of_EUSART_RxDataHandler 3186  
                       _PIN_MANAGER_Initialize 2FF4                          _wr2RegCompleteHandler 3134  
                    ??_I2C_CallbackReturnReset 000C                    __end_of_I2C_MasterOperation 2EA8  
                         ??_I2C_MasterSendNack 0001                       rd2RegCompleteHandler@ptr 000A  
                                    __pintcode 0008                                       ?___fladd 001C  
                                     ?___awdiv 001C                                      __ptext100 32D4  
                                    __ptext101 2BF6                                      __ptext110 3160  
                                    __ptext102 31CE                                      __ptext111 3056  
                                    __ptext103 347E                                      __ptext112 348A  
                                    __ptext104 3482                                      __ptext113 0000  
                                    __ptext105 2EA8                                      __ptext106 2296  
                                    __ptext107 3442                                      __ptext108 3488  
                                    __ptext109 3448                                       ?___awmod 001C  
                                     ?___flmul 00DD                       ??_lcd_4bits_send_command 001E  
                                     ?___flsub 0100                                       ?___fltol 00F2  
                   ?_read_HS1101_moist_percent 010C                                ?_ADC_Initialize 0001  
                                 _eusartRxHead 0032                                   _eusartTxHead 0035  
                                 _eusartRxTail 0031                         ??_I2C_MasterSendTxData 0001  
                                 _eusartTxTail 0034                      __end_of_i2c_fsmStateTable 1021  
                                _lcd_4bits_pos 2888                   ??_INTERRUPT_InterruptManager 0012  
                                 fp__I2C_DO_RX 0000                                   fp__I2C_DO_TX 0000  
                      _eusartTxBufferRemaining 0033         __end_of_lcd_4bits_send_string_data_pos 2B2A  
               _lcd_4bits_send_string_data_pos 2ABE                                    __smallconst 1000  
              __end_of_I2C_SetInterruptHandler 33E8          __end_ofi2_I2C_SetDataCompleteCallback 32EC  
                i2_I2C_SetDataCompleteCallback 32D4                        I2C_MasterOperation@read 001C  
                                     _I2C_Open 248E                              _print_HS1101_uart 2780  
                           ?_print_HS1101_uart 0001                                 Read_TC74@value 00D8  
                                     ?_sprintf 00E4                        ??_rd1RegCompleteHandler 000C  
                         _INTERRUPT_Initialize 344E                                 _eusartRxBuffer 00AC  
                      ??_wr1RegCompleteHandler 000C                                 _eusartTxBuffer 00B4  
                          ??_print_HS1101_uart 0024         EUSART_SetErrorHandler@interruptHandler 001C  
                                     _LATCbits 0F8B                                       _LATDbits 0F8C  
                                     _PIE1bits 0F9D                                       _PIE2bits 0FA0  
                            _eusartRxLastError 002F                                       i2u205_40 2C0A  
                                     i2u221_40 3350                                       i2u205_41 2C06  
                                     i2u221_41 334A                                       i2u221_46 3352  
                                     i2u230_40 207C                                       i2u230_41 2078  
                                     i2u216_40 31DE                                       i2u232_40 2122  
                                     i2u231_48 20A6                                       i2u216_41 31DA  
                                     i2u232_41 211E                                       i2u231_49 20BA  
                                     i2u233_40 2414                                       i2u233_41 2410  
                                     i2u330_40 2EB8                                       i2u330_41 2EB4  
                                     i2u331_40 2ED6                                       i2u234_48 2442  
                                     i2u331_41 2ED2                                       i2u234_49 2454  
                                     i2u332_40 22AE                                       i2u235_48 283C  
                                     i2u332_41 22AA                                       i2u235_49 284E  
                                     i2u237_40 317E                                       i2u236_48 2BBA  
                                     i2u237_41 317A                                       i2u236_49 2BCC  
                                     i2u334_40 22E0                                       i2u333_48 22C0  
                                     i2u334_41 22DC                                       i2u333_49 22D2  
                                     i2u351_40 0040                                       i2u351_41 003C  
                                     i2u328_40 306A                                       i2u336_40 231C  
                                     i2u335_48 22F2                                       i2u360_40 00E4  
                                     i2u352_40 004E                                       i2u328_41 3066  
                                     i2u336_41 2318                                       i2u335_49 2304  
                                     i2u360_41 00E0                                       i2u352_41 004A  
                                     i2u361_40 00F2                                       i2u353_40 005C  
                                     i2u361_41 00EE                                       i2u353_41 0058  
                                     _PIR1bits 0F9E                                       i2u329_48 3070  
                                     i2u337_48 2322                                       i2u354_40 0072  
                                     i2u329_49 3082                                       i2u337_49 2336  
                                     i2u354_41 006E                ??_EUSART_SetFramingErrorHandler 001E  
                                     i2u363_40 011C                                       i2u362_48 00F8  
                                     i2u355_40 0080                                       i2u363_41 0118  
                                     i2u362_49 010A                                       i2u355_41 007C  
                                     _PIR2bits 0FA1                                       i2u364_40 012A  
                                     i2u364_41 0126                                       i2u357_40 00AA  
                                     i2u356_48 0086                                       i2u357_41 00A6  
                                     i2u356_49 0098                                       i2u286_40 2A64  
                                     i2u358_40 00B8                                       i2u286_41 2A60  
                                     i2u358_41 00B4                                       i2u287_40 2A78  
                                     i2u287_41 2A74                                       i2u359_48 00BE  
                                     i2u359_49 00D2                                       i2u288_48 2AA6  
                                     i2u288_49 2AB8                            __end_of_LDR_reading 23E8  
                        __end_of_I2C_MasterFsm 2ABE                          __end_of_I2C_MasterIsr 3436  
                                     _RCONbits 0FD0                 fp__ADC_DefaultInterruptHandler 0000  
                  __end_of_I2C_DO_RX_NACK_STOP 3400           fp__EUSART_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART_DefaultOverrunErrorHandler 3448            ??_EUSART_DefaultOverrunErrorHandler 0001  
           ?_EUSART_DefaultOverrunErrorHandler 0001              _EUSART_DefaultOverrunErrorHandler 3442  
              __end_of_I2C_MasterEnableRestart 3486                                 fp__I2C_DO_IDLE 0000  
                               fp__I2C_DO_RCEN 0000                         print_bright_LCD@column 0107  
                __end_of_I2C_Read1ByteRegister 2A50                                 ?_lcd_4bits_pos 001F  
                                    _vfpfcnvrt 196A                          __end_of_I2C_SetBuffer 31CE  
                                   _ADCON0bits 0FC2                         ?_I2C_DO_SEND_ADR_WRITE 0001  
                    __end_of_print_HS1101_uart 280C                        __end_ofi2_I2C_SetBuffer 31F2  
                     I2C_MasterSendTxData@data 0001                            lcd_4bits_pos@column 001F  
                     ?_convert_uint8_to_string 00F6           __end_of_lcd_4bits_send_char_data_pos 332C  
                 _lcd_4bits_send_char_data_pos 3318                                    ??_Read_TC74 0028  
                              _print_temp_uart 265E                       wr2RegCompleteHandler@ptr 000A  
                                   vfpfcnvrt@c 00E0                                    _INTCON2bits 0FF1  
                   ??_I2C_DO_SEND_RESTART_READ 0001                          ?_INTERRUPT_Initialize 0001  
                     ?_rdBlkRegCompleteHandler 000A                      i2I2C_SetBuffer@bufferSize 0003  
                          print_HS1101_LCD@row 0106                                     _I2C_Status 0060  
                                 ?_I2C_DO_IDLE 0001                                   ?_I2C_DO_RCEN 0001  
                       ?_rd2RegCompleteHandler 000A                          fp__EUSART_Receive_ISR 0000  
                             ??_I2C_MasterOpen 001C                         ?_wr2RegCompleteHandler 000A  
                             ??_I2C_MasterStop 0001                               ??_I2C_Initialize 001C  
                    fp__I2C_DO_RX_NACK_RESTART 0000                                       __Hrparam 0000  
                                   vfprintf@ap 00E3                                       __Lrparam 0000  
                                   vfprintf@fp 00E1                              _ADC_GetConversion 2EE4  
                             Read_TC74@address 00D7                           __end_of_I2C_DO_RESET 3380  
                      ??_OSCILLATOR_Initialize 001C                            _EUSART_ErrorHandler 00F8  
                           ?_ADC_GetConversion 001C                           _I2C_DO_SEND_ADR_READ 3364  
                  ?_EUSART_DefaultErrorHandler 0001                                     ?_vfpfcnvrt 00D7  
             I2C_Read1ByteRegister@returnValue 0027                   __end_ofi2_I2C_MasterClearIrq 346A  
                              _I2C_MasterClose 345E                            ??_ADC_GetConversion 001E  
                I2C_SetAddressNackCallback@ptr 0023                                     sprintf@fmt 00E6  
                        _value_array@TC74$F213 00CB                                I2C_Open@address 001E  
                                     ___xxtofl 1B32                            fp__I2C_DO_SEND_STOP 0000  
                         i2I2C_SetCallback@idx 0005                                _I2C_MasterStart 3456  
                         i2I2C_SetCallback@ptr 0003                                _I2C_MasterWrite 33E8  
                         _EUSART_RxDataHandler 3160                  ?_lcd_4bits_send_char_data_pos 0023  
                                     __ptext10 2F8A                                       __ptext11 2ABE  
                                     __ptext20 3486                                       __ptext12 3318  
                                     __ptext21 2FC0                                       __ptext13 3254  
                                     __ptext30 2FF4                                       __ptext22 21E6  
                                     __ptext14 2888                                       __ptext31 3398  
                                     __ptext23 1FA4                                       __ptext15 25C6  
                                     __ptext40 3186                                       __ptext32 344E  
                                     __ptext24 3026                                       __ptext16 2E28  
                                     __ptext41 33D4                                       __ptext33 332C  
                                     __ptext25 3236                                       __ptext17 2DA2  
                                     __ptext50 3214                                       __ptext42 328C  
                                     __ptext34 28FC                                       __ptext26 2C5C  
                                     __ptext18 196A                                       __ptext51 3452  
                                     __ptext43 29E0                                       __ptext35 33A2  
                                     __ptext27 3270                                       __ptext19 212C  
                                     __ptext60 1B32                                       __ptext52 33E8  
                                     __ptext44 32A4                                       __ptext36 33AC  
                                     __ptext28 2970                                       __ptext61 1E98  
                                     __ptext53 2E68                                       __ptext45 31AA  
                                     __ptext37 33B6                                       __ptext29 3302  
                                     __ptext70 2B90                                       __ptext62 2D5A  
                                     __ptext54 3456                                       __ptext46 32BC  
                                     __ptext38 33C0                                       __ptext71 3374  
                                     __ptext63 107C                                       __ptext55 3084  
                                     __ptext47 2B2A                                       __ptext39 33CA  
                                     __ptext80 23E8                                       __ptext72 33F0  
                                     __ptext64 153E                                       __ptext56 345A  
                                     __ptext48 248E                                       __ptext81 2068  
                                     __ptext73 33F8                                       __ptext65 2EE4  
                                     __ptext57 345E                                       __ptext49 33DE  
                                     __ptext90 346E                                       __ptext82 3354  
                                     __ptext74 3400                                       __ptext58 3462  
                                     __ptext91 343C                                       __ptext83 3364  
                                     __ptext75 3408                                       __ptext67 3430  
                                     __ptext59 2340                                       __ptext92 3472  
                                     __ptext84 338C                                       __ptext76 3410  
                                     __ptext68 2A50                                       __ptext93 3476  
                                     __ptext85 280C                                       __ptext77 3418  
                                     __ptext69 3466                                       __ptext94 347A  
                                     __ptext86 346A                                       __ptext78 3420  
                                     __ptext95 2DE6                                       __ptext87 3340  
                                     __ptext79 3380                                       __ptext96 30B0  
                                     __ptext88 3428                                       __ptext97 30DC  
                                     __ptext89 3436                                       __ptext98 3108  
                                     __ptext99 3134            __end_of_I2C_SetDataCompleteCallback 32BC  
               ?i2_I2C_SetDataCompleteCallback 0006                    _I2C_SetDataCompleteCallback 32A4  
                             _print_HS1101_LCD 2F8A                        ?_I2C_DO_RX_NACK_RESTART 0001  
                            _print_bright_uart 26F4                       __end_of_I2C_DO_SEND_STOP 3410  
                   ??_lcd_4bits_send_char_data 001E                             ?_print_bright_uart 0001  
                                  _LDR_reading 2340                         print_HS1101_uart@value 0024  
                    __end_of_ADC_GetConversion 2F1E                        ?_EUSART_SetErrorHandler 001C  
                              _I2C_SetCallback 2B2A                  ??_I2C_SetDataCompleteCallback 0025  
EUSART_SetOverrunErrorHandler@interruptHandler 001C                            ??_print_bright_uart 0024  
                                     isa$xinst 0000                                ??_lcd_4bits_pos 0020  
                                     int$flags 0044                          ?_I2C_DO_SEND_ADR_READ 0001  
                        print_bright_LCD@value 00F7                                       _vfprintf 2DA2  
           __end_of_INTERRUPT_InterruptManager 015A                     _INTERRUPT_InterruptManager 0008  
                               _print_temp_LCD 2F1E          __end_of_EUSART_SetFramingErrorHandler 33CA  
                _EUSART_SetFramingErrorHandler 33C0                                 _lcd_send_4bits 2970  
                      __end_of_print_temp_uart 26F4                       __end_of_I2C_MasterIsNack 3354  
                           lcd_send_4bits@data 001D                       __end_of_I2C_MasterSetIrq 346E  
                             ?i2_I2C_SetBuffer 0001                                     _INTCONbits 0FF2  
                        ?_EUSART_RxDataHandler 0001                         ??_INTERRUPT_Initialize 001C  
                    __end_of_print_bright_uart 2780                 __end_of_I2C_DO_RX_NACK_RESTART 33F8  
                       _lcd_4bits_send_command 3270                       ?_ADC_SetInterruptHandler 001C  
                         _value_array@LDR$F189 00CF                                       intlevel2 0000  
                                    sprintf@ap 00E9                         fp__EUSART_Transmit_ISR 0000  
                          i2I2C_SetCallback@cb 0001                                    _moist_array 003B  
                      ?_PIN_MANAGER_Initialize 0001                              ?_print_bright_LCD 0106  
               __end_of_EUSART_SetErrorHandler 33D4                            _I2C_DO_SEND_RESTART 3410  
                       fp__I2C_DO_ADDRESS_NACK 0000                               ??_ADC_Initialize 001E  
         __end_of_EUSART_SetRxInterruptHandler 33B6                   _EUSART_SetRxInterruptHandler 33AC  
                           ??_print_bright_LCD 0028                         __end_of_print_temp_LCD 2F54  
                           _EUSART_Receive_ISR 2296                         __end_of_lcd_send_4bits 29E0  
EUSART_SetFramingErrorHandler@interruptHandler 001C                        __end_of_I2C_MasterClose 3462  
                           fp__I2C_DO_TX_EMPTY 0000                    ??_read_HS1101_moist_percent 0028  
                                  ??_vfpfcnvrt 0026                        __end_of_I2C_MasterStart 345A  
                      __end_of_I2C_MasterWrite 33F0                                    _value_array 00D3  
                        _lcd_4bits_send_enable 3302                           ?_I2C_DO_SEND_RESTART 0001  
                                  _temperature 00C4                                       sprintf@f 00EA  
                                     sprintf@s 00E4                            ?_EUSART_Receive_ISR 0001  
                fp__EUSART_DefaultErrorHandler 0000                                    _SSPCON1bits 0FC6  
                          print_bright_LCD@row 0106                                    _SSPCON2bits 0FC5  
                                ___fladd@signs 00D7                             EUSART_Write@txData 001C  
                      __end_of_I2C_SetCallback 2B90                 __end_of_PIN_MANAGER_Initialize 3026  
                __end_of_rd1RegCompleteHandler 3134                               fp__I2C_DO_RX_ACK 0000  
                                 ___fladd@aexp 00D8                                   ___fladd@bexp 00D9  
                         ??_EUSART_Receive_ISR 0001                  __end_of_wr1RegCompleteHandler 30DC  
                        _MSSP_InterruptHandler 002C                           i2_I2C_MasterClearIrq 3466  
